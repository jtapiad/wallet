'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsWALPPE"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsWALPPE
    Inherits Global.System.Data.DataSet
    
    Private tableCuentas_Planilla As Cuentas_PlanillaDataTable
    
    Private tableTraeBancosPlanilla As TraeBancosPlanillaDataTable
    
    Private tablePartidasPendientesSAP As PartidasPendientesSAPDataTable
    
    Private tableTESDOP As TESDOPDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("Cuentas_Planilla")) Is Nothing) Then
                MyBase.Tables.Add(New Cuentas_PlanillaDataTable(ds.Tables("Cuentas_Planilla")))
            End If
            If (Not (ds.Tables("TraeBancosPlanilla")) Is Nothing) Then
                MyBase.Tables.Add(New TraeBancosPlanillaDataTable(ds.Tables("TraeBancosPlanilla")))
            End If
            If (Not (ds.Tables("PartidasPendientesSAP")) Is Nothing) Then
                MyBase.Tables.Add(New PartidasPendientesSAPDataTable(ds.Tables("PartidasPendientesSAP")))
            End If
            If (Not (ds.Tables("TESDOP")) Is Nothing) Then
                MyBase.Tables.Add(New TESDOPDataTable(ds.Tables("TESDOP")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Cuentas_Planilla() As Cuentas_PlanillaDataTable
        Get
            Return Me.tableCuentas_Planilla
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TraeBancosPlanilla() As TraeBancosPlanillaDataTable
        Get
            Return Me.tableTraeBancosPlanilla
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PartidasPendientesSAP() As PartidasPendientesSAPDataTable
        Get
            Return Me.tablePartidasPendientesSAP
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TESDOP() As TESDOPDataTable
        Get
            Return Me.tableTESDOP
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsWALPPE = CType(MyBase.Clone,dsWALPPE)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("Cuentas_Planilla")) Is Nothing) Then
                MyBase.Tables.Add(New Cuentas_PlanillaDataTable(ds.Tables("Cuentas_Planilla")))
            End If
            If (Not (ds.Tables("TraeBancosPlanilla")) Is Nothing) Then
                MyBase.Tables.Add(New TraeBancosPlanillaDataTable(ds.Tables("TraeBancosPlanilla")))
            End If
            If (Not (ds.Tables("PartidasPendientesSAP")) Is Nothing) Then
                MyBase.Tables.Add(New PartidasPendientesSAPDataTable(ds.Tables("PartidasPendientesSAP")))
            End If
            If (Not (ds.Tables("TESDOP")) Is Nothing) Then
                MyBase.Tables.Add(New TESDOPDataTable(ds.Tables("TESDOP")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCuentas_Planilla = CType(MyBase.Tables("Cuentas_Planilla"),Cuentas_PlanillaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCuentas_Planilla) Is Nothing) Then
                Me.tableCuentas_Planilla.InitVars
            End If
        End If
        Me.tableTraeBancosPlanilla = CType(MyBase.Tables("TraeBancosPlanilla"),TraeBancosPlanillaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTraeBancosPlanilla) Is Nothing) Then
                Me.tableTraeBancosPlanilla.InitVars
            End If
        End If
        Me.tablePartidasPendientesSAP = CType(MyBase.Tables("PartidasPendientesSAP"),PartidasPendientesSAPDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePartidasPendientesSAP) Is Nothing) Then
                Me.tablePartidasPendientesSAP.InitVars
            End If
        End If
        Me.tableTESDOP = CType(MyBase.Tables("TESDOP"),TESDOPDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTESDOP) Is Nothing) Then
                Me.tableTESDOP.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsWALPPE"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsWALPPE.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCuentas_Planilla = New Cuentas_PlanillaDataTable()
        MyBase.Tables.Add(Me.tableCuentas_Planilla)
        Me.tableTraeBancosPlanilla = New TraeBancosPlanillaDataTable()
        MyBase.Tables.Add(Me.tableTraeBancosPlanilla)
        Me.tablePartidasPendientesSAP = New PartidasPendientesSAPDataTable()
        MyBase.Tables.Add(Me.tablePartidasPendientesSAP)
        Me.tableTESDOP = New TESDOPDataTable()
        MyBase.Tables.Add(Me.tableTESDOP)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCuentas_Planilla() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTraeBancosPlanilla() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePartidasPendientesSAP() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTESDOP() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsWALPPE = New dsWALPPE()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Cuentas_PlanillaRowChangeEventHandler(ByVal sender As Object, ByVal e As Cuentas_PlanillaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TraeBancosPlanillaRowChangeEventHandler(ByVal sender As Object, ByVal e As TraeBancosPlanillaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PartidasPendientesSAPRowChangeEventHandler(ByVal sender As Object, ByVal e As PartidasPendientesSAPRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TESDOPRowChangeEventHandler(ByVal sender As Object, ByVal e As TESDOPRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Cuentas_PlanillaDataTable
        Inherits Global.System.Data.TypedTableBase(Of Cuentas_PlanillaRow)
        
        Private columnCTE_CODIGO As Global.System.Data.DataColumn
        
        Private columnENT_CODIGO As Global.System.Data.DataColumn
        
        Private columnCON_CODIGO As Global.System.Data.DataColumn
        
        Private columnMON_CODIGO As Global.System.Data.DataColumn
        
        Private columnEMP_CODIGO As Global.System.Data.DataColumn
        
        Private columnCTE_NUMERO As Global.System.Data.DataColumn
        
        Private columnCTE_CUENTA As Global.System.Data.DataColumn
        
        Private columnCTE_SIGLA As Global.System.Data.DataColumn
        
        Private columnCTE_GRUPO As Global.System.Data.DataColumn
        
        Private columnCTE_TIPO As Global.System.Data.DataColumn
        
        Private columnCTE_SECUENCIA As Global.System.Data.DataColumn
        
        Private columnCTE_COLCHON1 As Global.System.Data.DataColumn
        
        Private columnCTE_COLCHON2 As Global.System.Data.DataColumn
        
        Private columnCTE_PLAZA As Global.System.Data.DataColumn
        
        Private columnCTE_MADRE As Global.System.Data.DataColumn
        
        Private columnCTE_AUDITORIA As Global.System.Data.DataColumn
        
        Private columnCTE_SOCIEDAD As Global.System.Data.DataColumn
        
        Private columnCTE_CODBANCO As Global.System.Data.DataColumn
        
        Private columnCTE_CUENTAID As Global.System.Data.DataColumn
        
        Private columnCTE_GLOSA As Global.System.Data.DataColumn
        
        Private columnCTE_CONTABLE As Global.System.Data.DataColumn
        
        Private columnCTE_MONEDASAP As Global.System.Data.DataColumn
        
        Private columnCTE_VIA As Global.System.Data.DataColumn
        
        Private columnCTE_CODCTE As Global.System.Data.DataColumn
        
        Private columnENT_RAZON As Global.System.Data.DataColumn
        
        Private columnENT_ABREVIATURA As Global.System.Data.DataColumn
        
        Private columnlargo As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Cuentas_Planilla"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CON_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCON_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MON_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMON_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMP_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_NUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_NUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_SIGLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_SIGLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_GRUPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_GRUPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_SECUENCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_SECUENCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_COLCHON1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_COLCHON1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_COLCHON2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_COLCHON2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_PLAZAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_PLAZA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_MADREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_MADRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_AUDITORIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_AUDITORIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_SOCIEDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_SOCIEDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CODBANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CODBANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CUENTAIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CUENTAID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_GLOSAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_GLOSA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CONTABLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CONTABLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_MONEDASAPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_MONEDASAP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_VIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_VIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CODCTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CODCTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_RAZONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_RAZON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_ABREVIATURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_ABREVIATURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property largoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnlargo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Cuentas_PlanillaRow
            Get
                Return CType(Me.Rows(index),Cuentas_PlanillaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Cuentas_PlanillaRowChanging As Cuentas_PlanillaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Cuentas_PlanillaRowChanged As Cuentas_PlanillaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Cuentas_PlanillaRowDeleting As Cuentas_PlanillaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Cuentas_PlanillaRowDeleted As Cuentas_PlanillaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCuentas_PlanillaRow(ByVal row As Cuentas_PlanillaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCuentas_PlanillaRow( _
                    ByVal CTE_CODIGO As Integer,  _
                    ByVal ENT_CODIGO As Long,  _
                    ByVal CON_CODIGO As Long,  _
                    ByVal MON_CODIGO As String,  _
                    ByVal EMP_CODIGO As Long,  _
                    ByVal CTE_NUMERO As String,  _
                    ByVal CTE_CUENTA As String,  _
                    ByVal CTE_SIGLA As String,  _
                    ByVal CTE_GRUPO As String,  _
                    ByVal CTE_TIPO As String,  _
                    ByVal CTE_SECUENCIA As Integer,  _
                    ByVal CTE_COLCHON1 As Decimal,  _
                    ByVal CTE_COLCHON2 As Decimal,  _
                    ByVal CTE_PLAZA As Integer,  _
                    ByVal CTE_MADRE As Integer,  _
                    ByVal CTE_AUDITORIA As String,  _
                    ByVal CTE_SOCIEDAD As String,  _
                    ByVal CTE_CODBANCO As String,  _
                    ByVal CTE_CUENTAID As String,  _
                    ByVal CTE_GLOSA As String,  _
                    ByVal CTE_CONTABLE As String,  _
                    ByVal CTE_MONEDASAP As String,  _
                    ByVal CTE_VIA As String,  _
                    ByVal CTE_CODCTE As String,  _
                    ByVal ENT_RAZON As String,  _
                    ByVal ENT_ABREVIATURA As String,  _
                    ByVal largo As String) As Cuentas_PlanillaRow
            Dim rowCuentas_PlanillaRow As Cuentas_PlanillaRow = CType(Me.NewRow,Cuentas_PlanillaRow)
            Dim columnValuesArray() As Object = New Object() {CTE_CODIGO, ENT_CODIGO, CON_CODIGO, MON_CODIGO, EMP_CODIGO, CTE_NUMERO, CTE_CUENTA, CTE_SIGLA, CTE_GRUPO, CTE_TIPO, CTE_SECUENCIA, CTE_COLCHON1, CTE_COLCHON2, CTE_PLAZA, CTE_MADRE, CTE_AUDITORIA, CTE_SOCIEDAD, CTE_CODBANCO, CTE_CUENTAID, CTE_GLOSA, CTE_CONTABLE, CTE_MONEDASAP, CTE_VIA, CTE_CODCTE, ENT_RAZON, ENT_ABREVIATURA, largo}
            rowCuentas_PlanillaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCuentas_PlanillaRow)
            Return rowCuentas_PlanillaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCTE_CODIGO(ByVal CTE_CODIGO As Integer) As Cuentas_PlanillaRow
            Return CType(Me.Rows.Find(New Object() {CTE_CODIGO}),Cuentas_PlanillaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Cuentas_PlanillaDataTable = CType(MyBase.Clone,Cuentas_PlanillaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Cuentas_PlanillaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCTE_CODIGO = MyBase.Columns("CTE_CODIGO")
            Me.columnENT_CODIGO = MyBase.Columns("ENT_CODIGO")
            Me.columnCON_CODIGO = MyBase.Columns("CON_CODIGO")
            Me.columnMON_CODIGO = MyBase.Columns("MON_CODIGO")
            Me.columnEMP_CODIGO = MyBase.Columns("EMP_CODIGO")
            Me.columnCTE_NUMERO = MyBase.Columns("CTE_NUMERO")
            Me.columnCTE_CUENTA = MyBase.Columns("CTE_CUENTA")
            Me.columnCTE_SIGLA = MyBase.Columns("CTE_SIGLA")
            Me.columnCTE_GRUPO = MyBase.Columns("CTE_GRUPO")
            Me.columnCTE_TIPO = MyBase.Columns("CTE_TIPO")
            Me.columnCTE_SECUENCIA = MyBase.Columns("CTE_SECUENCIA")
            Me.columnCTE_COLCHON1 = MyBase.Columns("CTE_COLCHON1")
            Me.columnCTE_COLCHON2 = MyBase.Columns("CTE_COLCHON2")
            Me.columnCTE_PLAZA = MyBase.Columns("CTE_PLAZA")
            Me.columnCTE_MADRE = MyBase.Columns("CTE_MADRE")
            Me.columnCTE_AUDITORIA = MyBase.Columns("CTE_AUDITORIA")
            Me.columnCTE_SOCIEDAD = MyBase.Columns("CTE_SOCIEDAD")
            Me.columnCTE_CODBANCO = MyBase.Columns("CTE_CODBANCO")
            Me.columnCTE_CUENTAID = MyBase.Columns("CTE_CUENTAID")
            Me.columnCTE_GLOSA = MyBase.Columns("CTE_GLOSA")
            Me.columnCTE_CONTABLE = MyBase.Columns("CTE_CONTABLE")
            Me.columnCTE_MONEDASAP = MyBase.Columns("CTE_MONEDASAP")
            Me.columnCTE_VIA = MyBase.Columns("CTE_VIA")
            Me.columnCTE_CODCTE = MyBase.Columns("CTE_CODCTE")
            Me.columnENT_RAZON = MyBase.Columns("ENT_RAZON")
            Me.columnENT_ABREVIATURA = MyBase.Columns("ENT_ABREVIATURA")
            Me.columnlargo = MyBase.Columns("largo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCTE_CODIGO = New Global.System.Data.DataColumn("CTE_CODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CODIGO)
            Me.columnENT_CODIGO = New Global.System.Data.DataColumn("ENT_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_CODIGO)
            Me.columnCON_CODIGO = New Global.System.Data.DataColumn("CON_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCON_CODIGO)
            Me.columnMON_CODIGO = New Global.System.Data.DataColumn("MON_CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMON_CODIGO)
            Me.columnEMP_CODIGO = New Global.System.Data.DataColumn("EMP_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_CODIGO)
            Me.columnCTE_NUMERO = New Global.System.Data.DataColumn("CTE_NUMERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_NUMERO)
            Me.columnCTE_CUENTA = New Global.System.Data.DataColumn("CTE_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CUENTA)
            Me.columnCTE_SIGLA = New Global.System.Data.DataColumn("CTE_SIGLA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_SIGLA)
            Me.columnCTE_GRUPO = New Global.System.Data.DataColumn("CTE_GRUPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_GRUPO)
            Me.columnCTE_TIPO = New Global.System.Data.DataColumn("CTE_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_TIPO)
            Me.columnCTE_SECUENCIA = New Global.System.Data.DataColumn("CTE_SECUENCIA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_SECUENCIA)
            Me.columnCTE_COLCHON1 = New Global.System.Data.DataColumn("CTE_COLCHON1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_COLCHON1)
            Me.columnCTE_COLCHON2 = New Global.System.Data.DataColumn("CTE_COLCHON2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_COLCHON2)
            Me.columnCTE_PLAZA = New Global.System.Data.DataColumn("CTE_PLAZA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_PLAZA)
            Me.columnCTE_MADRE = New Global.System.Data.DataColumn("CTE_MADRE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_MADRE)
            Me.columnCTE_AUDITORIA = New Global.System.Data.DataColumn("CTE_AUDITORIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_AUDITORIA)
            Me.columnCTE_SOCIEDAD = New Global.System.Data.DataColumn("CTE_SOCIEDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_SOCIEDAD)
            Me.columnCTE_CODBANCO = New Global.System.Data.DataColumn("CTE_CODBANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CODBANCO)
            Me.columnCTE_CUENTAID = New Global.System.Data.DataColumn("CTE_CUENTAID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CUENTAID)
            Me.columnCTE_GLOSA = New Global.System.Data.DataColumn("CTE_GLOSA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_GLOSA)
            Me.columnCTE_CONTABLE = New Global.System.Data.DataColumn("CTE_CONTABLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CONTABLE)
            Me.columnCTE_MONEDASAP = New Global.System.Data.DataColumn("CTE_MONEDASAP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_MONEDASAP)
            Me.columnCTE_VIA = New Global.System.Data.DataColumn("CTE_VIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_VIA)
            Me.columnCTE_CODCTE = New Global.System.Data.DataColumn("CTE_CODCTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CODCTE)
            Me.columnENT_RAZON = New Global.System.Data.DataColumn("ENT_RAZON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_RAZON)
            Me.columnENT_ABREVIATURA = New Global.System.Data.DataColumn("ENT_ABREVIATURA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_ABREVIATURA)
            Me.columnlargo = New Global.System.Data.DataColumn("largo", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnlargo)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCTE_CODIGO}, true))
            Me.columnCTE_CODIGO.AllowDBNull = false
            Me.columnCTE_CODIGO.Unique = true
            Me.columnENT_CODIGO.AllowDBNull = false
            Me.columnMON_CODIGO.AllowDBNull = false
            Me.columnMON_CODIGO.MaxLength = 5
            Me.columnEMP_CODIGO.AllowDBNull = false
            Me.columnCTE_NUMERO.MaxLength = 25
            Me.columnCTE_CUENTA.MaxLength = 5
            Me.columnCTE_SIGLA.MaxLength = 13
            Me.columnCTE_GRUPO.MaxLength = 2
            Me.columnCTE_TIPO.MaxLength = 1
            Me.columnCTE_AUDITORIA.MaxLength = 44
            Me.columnCTE_SOCIEDAD.MaxLength = 4
            Me.columnCTE_CODBANCO.MaxLength = 5
            Me.columnCTE_CUENTAID.MaxLength = 10
            Me.columnCTE_GLOSA.MaxLength = 30
            Me.columnCTE_CONTABLE.MaxLength = 10
            Me.columnCTE_MONEDASAP.MaxLength = 5
            Me.columnCTE_VIA.MaxLength = 1
            Me.columnCTE_CODCTE.MaxLength = 7
            Me.columnENT_RAZON.MaxLength = 40
            Me.columnENT_ABREVIATURA.MaxLength = 15
            Me.columnlargo.MaxLength = 15
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCuentas_PlanillaRow() As Cuentas_PlanillaRow
            Return CType(Me.NewRow,Cuentas_PlanillaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Cuentas_PlanillaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Cuentas_PlanillaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Cuentas_PlanillaRowChangedEvent) Is Nothing) Then
                RaiseEvent Cuentas_PlanillaRowChanged(Me, New Cuentas_PlanillaRowChangeEvent(CType(e.Row,Cuentas_PlanillaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Cuentas_PlanillaRowChangingEvent) Is Nothing) Then
                RaiseEvent Cuentas_PlanillaRowChanging(Me, New Cuentas_PlanillaRowChangeEvent(CType(e.Row,Cuentas_PlanillaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Cuentas_PlanillaRowDeletedEvent) Is Nothing) Then
                RaiseEvent Cuentas_PlanillaRowDeleted(Me, New Cuentas_PlanillaRowChangeEvent(CType(e.Row,Cuentas_PlanillaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Cuentas_PlanillaRowDeletingEvent) Is Nothing) Then
                RaiseEvent Cuentas_PlanillaRowDeleting(Me, New Cuentas_PlanillaRowChangeEvent(CType(e.Row,Cuentas_PlanillaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCuentas_PlanillaRow(ByVal row As Cuentas_PlanillaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALPPE = New dsWALPPE()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Cuentas_PlanillaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TraeBancosPlanillaDataTable
        Inherits Global.System.Data.TypedTableBase(Of TraeBancosPlanillaRow)
        
        Private columnCTE_CODIGO As Global.System.Data.DataColumn
        
        Private columnENT_CODIGO As Global.System.Data.DataColumn
        
        Private columnCON_CODIGO As Global.System.Data.DataColumn
        
        Private columnMON_CODIGO As Global.System.Data.DataColumn
        
        Private columnEMP_CODIGO As Global.System.Data.DataColumn
        
        Private columnCTE_NUMERO As Global.System.Data.DataColumn
        
        Private columnCTE_CUENTA As Global.System.Data.DataColumn
        
        Private columnCTE_SIGLA As Global.System.Data.DataColumn
        
        Private columnCTE_GRUPO As Global.System.Data.DataColumn
        
        Private columnCTE_TIPO As Global.System.Data.DataColumn
        
        Private columnCTE_SECUENCIA As Global.System.Data.DataColumn
        
        Private columnCTE_COLCHON1 As Global.System.Data.DataColumn
        
        Private columnCTE_COLCHON2 As Global.System.Data.DataColumn
        
        Private columnCTE_PLAZA As Global.System.Data.DataColumn
        
        Private columnCTE_MADRE As Global.System.Data.DataColumn
        
        Private columnCTE_AUDITORIA As Global.System.Data.DataColumn
        
        Private columnCTE_SOCIEDAD As Global.System.Data.DataColumn
        
        Private columnCTE_CODBANCO As Global.System.Data.DataColumn
        
        Private columnCTE_CUENTAID As Global.System.Data.DataColumn
        
        Private columnCTE_GLOSA As Global.System.Data.DataColumn
        
        Private columnCTE_CONTABLE As Global.System.Data.DataColumn
        
        Private columnCTE_MONEDASAP As Global.System.Data.DataColumn
        
        Private columnCTE_VIA As Global.System.Data.DataColumn
        
        Private columnCTE_CODCTE As Global.System.Data.DataColumn
        
        Private columnTEN_CODIGO As Global.System.Data.DataColumn
        
        Private columnENT_RAZON As Global.System.Data.DataColumn
        
        Private columnENT_ABREVIATURA As Global.System.Data.DataColumn
        
        Private columnENT_RUT As Global.System.Data.DataColumn
        
        Private columnENT_LIMITE As Global.System.Data.DataColumn
        
        Private columnENT_ESTADO As Global.System.Data.DataColumn
        
        Private columnENT_SITIO As Global.System.Data.DataColumn
        
        Private columnENT_AUDITORIA As Global.System.Data.DataColumn
        
        Private columnENT_SAP As Global.System.Data.DataColumn
        
        Private columnCTE_SECUENCIA1 As Global.System.Data.DataColumn
        
        Private columnENT_CODIGO1 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TraeBancosPlanilla"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CON_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCON_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MON_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMON_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMP_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_NUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_NUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_SIGLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_SIGLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_GRUPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_GRUPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_SECUENCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_SECUENCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_COLCHON1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_COLCHON1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_COLCHON2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_COLCHON2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_PLAZAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_PLAZA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_MADREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_MADRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_AUDITORIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_AUDITORIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_SOCIEDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_SOCIEDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CODBANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CODBANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CUENTAIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CUENTAID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_GLOSAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_GLOSA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CONTABLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CONTABLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_MONEDASAPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_MONEDASAP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_VIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_VIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CODCTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CODCTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TEN_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTEN_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_RAZONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_RAZON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_ABREVIATURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_ABREVIATURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_RUTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_RUT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_LIMITEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_LIMITE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_ESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_SITIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_SITIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_AUDITORIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_AUDITORIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_SAPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_SAP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_SECUENCIA1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_SECUENCIA1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_CODIGO1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_CODIGO1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TraeBancosPlanillaRow
            Get
                Return CType(Me.Rows(index),TraeBancosPlanillaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TraeBancosPlanillaRowChanging As TraeBancosPlanillaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TraeBancosPlanillaRowChanged As TraeBancosPlanillaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TraeBancosPlanillaRowDeleting As TraeBancosPlanillaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TraeBancosPlanillaRowDeleted As TraeBancosPlanillaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTraeBancosPlanillaRow(ByVal row As TraeBancosPlanillaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTraeBancosPlanillaRow( _
                    ByVal CTE_CODIGO As Integer,  _
                    ByVal ENT_CODIGO As Long,  _
                    ByVal CON_CODIGO As Long,  _
                    ByVal MON_CODIGO As String,  _
                    ByVal EMP_CODIGO As Long,  _
                    ByVal CTE_NUMERO As String,  _
                    ByVal CTE_CUENTA As String,  _
                    ByVal CTE_SIGLA As String,  _
                    ByVal CTE_GRUPO As String,  _
                    ByVal CTE_TIPO As String,  _
                    ByVal CTE_SECUENCIA As Integer,  _
                    ByVal CTE_COLCHON1 As Decimal,  _
                    ByVal CTE_COLCHON2 As Decimal,  _
                    ByVal CTE_PLAZA As Integer,  _
                    ByVal CTE_MADRE As Integer,  _
                    ByVal CTE_AUDITORIA As String,  _
                    ByVal CTE_SOCIEDAD As String,  _
                    ByVal CTE_CODBANCO As String,  _
                    ByVal CTE_CUENTAID As String,  _
                    ByVal CTE_GLOSA As String,  _
                    ByVal CTE_CONTABLE As String,  _
                    ByVal CTE_MONEDASAP As String,  _
                    ByVal CTE_VIA As String,  _
                    ByVal CTE_CODCTE As String,  _
                    ByVal TEN_CODIGO As Integer,  _
                    ByVal ENT_RAZON As String,  _
                    ByVal ENT_ABREVIATURA As String,  _
                    ByVal ENT_RUT As String,  _
                    ByVal ENT_LIMITE As Decimal,  _
                    ByVal ENT_ESTADO As String,  _
                    ByVal ENT_SITIO As String,  _
                    ByVal ENT_AUDITORIA As String,  _
                    ByVal ENT_SAP As String,  _
                    ByVal CTE_SECUENCIA1 As Integer) As TraeBancosPlanillaRow
            Dim rowTraeBancosPlanillaRow As TraeBancosPlanillaRow = CType(Me.NewRow,TraeBancosPlanillaRow)
            Dim columnValuesArray() As Object = New Object() {CTE_CODIGO, ENT_CODIGO, CON_CODIGO, MON_CODIGO, EMP_CODIGO, CTE_NUMERO, CTE_CUENTA, CTE_SIGLA, CTE_GRUPO, CTE_TIPO, CTE_SECUENCIA, CTE_COLCHON1, CTE_COLCHON2, CTE_PLAZA, CTE_MADRE, CTE_AUDITORIA, CTE_SOCIEDAD, CTE_CODBANCO, CTE_CUENTAID, CTE_GLOSA, CTE_CONTABLE, CTE_MONEDASAP, CTE_VIA, CTE_CODCTE, TEN_CODIGO, ENT_RAZON, ENT_ABREVIATURA, ENT_RUT, ENT_LIMITE, ENT_ESTADO, ENT_SITIO, ENT_AUDITORIA, ENT_SAP, CTE_SECUENCIA1, Nothing}
            rowTraeBancosPlanillaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTraeBancosPlanillaRow)
            Return rowTraeBancosPlanillaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCTE_CODIGOENT_CODIGO1(ByVal CTE_CODIGO As Integer, ByVal ENT_CODIGO1 As Long) As TraeBancosPlanillaRow
            Return CType(Me.Rows.Find(New Object() {CTE_CODIGO, ENT_CODIGO1}),TraeBancosPlanillaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TraeBancosPlanillaDataTable = CType(MyBase.Clone,TraeBancosPlanillaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TraeBancosPlanillaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCTE_CODIGO = MyBase.Columns("CTE_CODIGO")
            Me.columnENT_CODIGO = MyBase.Columns("ENT_CODIGO")
            Me.columnCON_CODIGO = MyBase.Columns("CON_CODIGO")
            Me.columnMON_CODIGO = MyBase.Columns("MON_CODIGO")
            Me.columnEMP_CODIGO = MyBase.Columns("EMP_CODIGO")
            Me.columnCTE_NUMERO = MyBase.Columns("CTE_NUMERO")
            Me.columnCTE_CUENTA = MyBase.Columns("CTE_CUENTA")
            Me.columnCTE_SIGLA = MyBase.Columns("CTE_SIGLA")
            Me.columnCTE_GRUPO = MyBase.Columns("CTE_GRUPO")
            Me.columnCTE_TIPO = MyBase.Columns("CTE_TIPO")
            Me.columnCTE_SECUENCIA = MyBase.Columns("CTE_SECUENCIA")
            Me.columnCTE_COLCHON1 = MyBase.Columns("CTE_COLCHON1")
            Me.columnCTE_COLCHON2 = MyBase.Columns("CTE_COLCHON2")
            Me.columnCTE_PLAZA = MyBase.Columns("CTE_PLAZA")
            Me.columnCTE_MADRE = MyBase.Columns("CTE_MADRE")
            Me.columnCTE_AUDITORIA = MyBase.Columns("CTE_AUDITORIA")
            Me.columnCTE_SOCIEDAD = MyBase.Columns("CTE_SOCIEDAD")
            Me.columnCTE_CODBANCO = MyBase.Columns("CTE_CODBANCO")
            Me.columnCTE_CUENTAID = MyBase.Columns("CTE_CUENTAID")
            Me.columnCTE_GLOSA = MyBase.Columns("CTE_GLOSA")
            Me.columnCTE_CONTABLE = MyBase.Columns("CTE_CONTABLE")
            Me.columnCTE_MONEDASAP = MyBase.Columns("CTE_MONEDASAP")
            Me.columnCTE_VIA = MyBase.Columns("CTE_VIA")
            Me.columnCTE_CODCTE = MyBase.Columns("CTE_CODCTE")
            Me.columnTEN_CODIGO = MyBase.Columns("TEN_CODIGO")
            Me.columnENT_RAZON = MyBase.Columns("ENT_RAZON")
            Me.columnENT_ABREVIATURA = MyBase.Columns("ENT_ABREVIATURA")
            Me.columnENT_RUT = MyBase.Columns("ENT_RUT")
            Me.columnENT_LIMITE = MyBase.Columns("ENT_LIMITE")
            Me.columnENT_ESTADO = MyBase.Columns("ENT_ESTADO")
            Me.columnENT_SITIO = MyBase.Columns("ENT_SITIO")
            Me.columnENT_AUDITORIA = MyBase.Columns("ENT_AUDITORIA")
            Me.columnENT_SAP = MyBase.Columns("ENT_SAP")
            Me.columnCTE_SECUENCIA1 = MyBase.Columns("CTE_SECUENCIA1")
            Me.columnENT_CODIGO1 = MyBase.Columns("ENT_CODIGO1")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCTE_CODIGO = New Global.System.Data.DataColumn("CTE_CODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CODIGO)
            Me.columnENT_CODIGO = New Global.System.Data.DataColumn("ENT_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_CODIGO)
            Me.columnCON_CODIGO = New Global.System.Data.DataColumn("CON_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCON_CODIGO)
            Me.columnMON_CODIGO = New Global.System.Data.DataColumn("MON_CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMON_CODIGO)
            Me.columnEMP_CODIGO = New Global.System.Data.DataColumn("EMP_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_CODIGO)
            Me.columnCTE_NUMERO = New Global.System.Data.DataColumn("CTE_NUMERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_NUMERO)
            Me.columnCTE_CUENTA = New Global.System.Data.DataColumn("CTE_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CUENTA)
            Me.columnCTE_SIGLA = New Global.System.Data.DataColumn("CTE_SIGLA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_SIGLA)
            Me.columnCTE_GRUPO = New Global.System.Data.DataColumn("CTE_GRUPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_GRUPO)
            Me.columnCTE_TIPO = New Global.System.Data.DataColumn("CTE_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_TIPO)
            Me.columnCTE_SECUENCIA = New Global.System.Data.DataColumn("CTE_SECUENCIA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_SECUENCIA)
            Me.columnCTE_COLCHON1 = New Global.System.Data.DataColumn("CTE_COLCHON1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_COLCHON1)
            Me.columnCTE_COLCHON2 = New Global.System.Data.DataColumn("CTE_COLCHON2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_COLCHON2)
            Me.columnCTE_PLAZA = New Global.System.Data.DataColumn("CTE_PLAZA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_PLAZA)
            Me.columnCTE_MADRE = New Global.System.Data.DataColumn("CTE_MADRE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_MADRE)
            Me.columnCTE_AUDITORIA = New Global.System.Data.DataColumn("CTE_AUDITORIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_AUDITORIA)
            Me.columnCTE_SOCIEDAD = New Global.System.Data.DataColumn("CTE_SOCIEDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_SOCIEDAD)
            Me.columnCTE_CODBANCO = New Global.System.Data.DataColumn("CTE_CODBANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CODBANCO)
            Me.columnCTE_CUENTAID = New Global.System.Data.DataColumn("CTE_CUENTAID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CUENTAID)
            Me.columnCTE_GLOSA = New Global.System.Data.DataColumn("CTE_GLOSA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_GLOSA)
            Me.columnCTE_CONTABLE = New Global.System.Data.DataColumn("CTE_CONTABLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CONTABLE)
            Me.columnCTE_MONEDASAP = New Global.System.Data.DataColumn("CTE_MONEDASAP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_MONEDASAP)
            Me.columnCTE_VIA = New Global.System.Data.DataColumn("CTE_VIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_VIA)
            Me.columnCTE_CODCTE = New Global.System.Data.DataColumn("CTE_CODCTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CODCTE)
            Me.columnTEN_CODIGO = New Global.System.Data.DataColumn("TEN_CODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTEN_CODIGO)
            Me.columnENT_RAZON = New Global.System.Data.DataColumn("ENT_RAZON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_RAZON)
            Me.columnENT_ABREVIATURA = New Global.System.Data.DataColumn("ENT_ABREVIATURA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_ABREVIATURA)
            Me.columnENT_RUT = New Global.System.Data.DataColumn("ENT_RUT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_RUT)
            Me.columnENT_LIMITE = New Global.System.Data.DataColumn("ENT_LIMITE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_LIMITE)
            Me.columnENT_ESTADO = New Global.System.Data.DataColumn("ENT_ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_ESTADO)
            Me.columnENT_SITIO = New Global.System.Data.DataColumn("ENT_SITIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_SITIO)
            Me.columnENT_AUDITORIA = New Global.System.Data.DataColumn("ENT_AUDITORIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_AUDITORIA)
            Me.columnENT_SAP = New Global.System.Data.DataColumn("ENT_SAP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_SAP)
            Me.columnCTE_SECUENCIA1 = New Global.System.Data.DataColumn("CTE_SECUENCIA1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_SECUENCIA1)
            Me.columnENT_CODIGO1 = New Global.System.Data.DataColumn("ENT_CODIGO1", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_CODIGO1)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCTE_CODIGO, Me.columnENT_CODIGO1}, true))
            Me.columnCTE_CODIGO.AllowDBNull = false
            Me.columnENT_CODIGO.AllowDBNull = false
            Me.columnMON_CODIGO.AllowDBNull = false
            Me.columnMON_CODIGO.MaxLength = 5
            Me.columnEMP_CODIGO.AllowDBNull = false
            Me.columnCTE_NUMERO.MaxLength = 25
            Me.columnCTE_CUENTA.MaxLength = 5
            Me.columnCTE_SIGLA.MaxLength = 13
            Me.columnCTE_GRUPO.MaxLength = 2
            Me.columnCTE_TIPO.MaxLength = 1
            Me.columnCTE_AUDITORIA.MaxLength = 44
            Me.columnCTE_SOCIEDAD.MaxLength = 4
            Me.columnCTE_CODBANCO.MaxLength = 5
            Me.columnCTE_CUENTAID.MaxLength = 10
            Me.columnCTE_GLOSA.MaxLength = 30
            Me.columnCTE_CONTABLE.MaxLength = 10
            Me.columnCTE_MONEDASAP.MaxLength = 5
            Me.columnCTE_VIA.MaxLength = 1
            Me.columnCTE_CODCTE.MaxLength = 7
            Me.columnTEN_CODIGO.AllowDBNull = false
            Me.columnENT_RAZON.MaxLength = 40
            Me.columnENT_ABREVIATURA.MaxLength = 15
            Me.columnENT_RUT.MaxLength = 13
            Me.columnENT_ESTADO.MaxLength = 1
            Me.columnENT_SITIO.MaxLength = 20
            Me.columnENT_AUDITORIA.MaxLength = 44
            Me.columnENT_SAP.MaxLength = 10
            Me.columnENT_CODIGO1.AutoIncrement = true
            Me.columnENT_CODIGO1.AutoIncrementSeed = -1
            Me.columnENT_CODIGO1.AutoIncrementStep = -1
            Me.columnENT_CODIGO1.AllowDBNull = false
            Me.columnENT_CODIGO1.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTraeBancosPlanillaRow() As TraeBancosPlanillaRow
            Return CType(Me.NewRow,TraeBancosPlanillaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TraeBancosPlanillaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TraeBancosPlanillaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TraeBancosPlanillaRowChangedEvent) Is Nothing) Then
                RaiseEvent TraeBancosPlanillaRowChanged(Me, New TraeBancosPlanillaRowChangeEvent(CType(e.Row,TraeBancosPlanillaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TraeBancosPlanillaRowChangingEvent) Is Nothing) Then
                RaiseEvent TraeBancosPlanillaRowChanging(Me, New TraeBancosPlanillaRowChangeEvent(CType(e.Row,TraeBancosPlanillaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TraeBancosPlanillaRowDeletedEvent) Is Nothing) Then
                RaiseEvent TraeBancosPlanillaRowDeleted(Me, New TraeBancosPlanillaRowChangeEvent(CType(e.Row,TraeBancosPlanillaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TraeBancosPlanillaRowDeletingEvent) Is Nothing) Then
                RaiseEvent TraeBancosPlanillaRowDeleting(Me, New TraeBancosPlanillaRowChangeEvent(CType(e.Row,TraeBancosPlanillaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTraeBancosPlanillaRow(ByVal row As TraeBancosPlanillaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALPPE = New dsWALPPE()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TraeBancosPlanillaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PartidasPendientesSAPDataTable
        Inherits Global.System.Data.TypedTableBase(Of PartidasPendientesSAPRow)
        
        Private columnDAZ_CODIGO As Global.System.Data.DataColumn
        
        Private columnDAZ_MANDANTE As Global.System.Data.DataColumn
        
        Private columnDAZ_SOCIEDAD As Global.System.Data.DataColumn
        
        Private columnDAZ_DOCCONT As Global.System.Data.DataColumn
        
        Private columnDAZ_EJERCICIO As Global.System.Data.DataColumn
        
        Private columnDAZ_CLASEDOC As Global.System.Data.DataColumn
        
        Private columnDAZ_CUENTABANCO As Global.System.Data.DataColumn
        
        Private columnDAZ_MONTO As Global.System.Data.DataColumn
        
        Private columnDAZ_MONTOMON As Global.System.Data.DataColumn
        
        Private columnDAZ_MONEDA As Global.System.Data.DataColumn
        
        Private columnDAZ_CONCEPTO As Global.System.Data.DataColumn
        
        Private columnDAZ_POSICION As Global.System.Data.DataColumn
        
        Private columnDAZ_CAJA As Global.System.Data.DataColumn
        
        Private columnDAZ_FECHADOC As Global.System.Data.DataColumn
        
        Private columnDAZ_TEXTOPOS As Global.System.Data.DataColumn
        
        Private columnDAZ_FECHAz As Global.System.Data.DataColumn
        
        Private columnDAZ_MEDIOPAGO As Global.System.Data.DataColumn
        
        Private columnDAZ_RETENCION As Global.System.Data.DataColumn
        
        Private columnDAZ_FECHADEP As Global.System.Data.DataColumn
        
        Private columnDAZ_DIAS As Global.System.Data.DataColumn
        
        Private columnDAZ_UNIDAD As Global.System.Data.DataColumn
        
        Private columnDAZ_VIA As Global.System.Data.DataColumn
        
        Private columnDAZ_CLAVEBANCO As Global.System.Data.DataColumn
        
        Private columnDAZ_ESTATUS As Global.System.Data.DataColumn
        
        Private columnDAZ_ENVIADOBANCO As Global.System.Data.DataColumn
        
        Private columnDAZ_ANULADO As Global.System.Data.DataColumn
        
        Private columnDAZ_FECHAANU As Global.System.Data.DataColumn
        
        Private columnDAZ_ESTADO As Global.System.Data.DataColumn
        
        Private columnPLA_CODIGO As Global.System.Data.DataColumn
        
        Private columnDAZ_FECHADIS As Global.System.Data.DataColumn
        
        Private columnDAZ_GLOSA As Global.System.Data.DataColumn
        
        Private columnDAZ_COLUMNA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PartidasPendientesSAP"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_MANDANTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_MANDANTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_SOCIEDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_SOCIEDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_DOCCONTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_DOCCONT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_EJERCICIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_EJERCICIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_CLASEDOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_CLASEDOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_CUENTABANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_CUENTABANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_MONTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_MONTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_MONTOMONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_MONTOMON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_CONCEPTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_CONCEPTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_POSICIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_POSICION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_CAJAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_CAJA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_FECHADOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_FECHADOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_TEXTOPOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_TEXTOPOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_FECHAzColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_FECHAz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_MEDIOPAGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_MEDIOPAGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_RETENCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_RETENCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_FECHADEPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_FECHADEP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_DIASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_DIAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_UNIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_UNIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_VIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_VIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_CLAVEBANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_CLAVEBANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_ESTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_ESTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_ENVIADOBANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_ENVIADOBANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_ANULADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_ANULADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_FECHAANUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_FECHAANU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_ESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLA_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLA_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_FECHADISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_FECHADIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_GLOSAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_GLOSA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_COLUMNAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_COLUMNA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PartidasPendientesSAPRow
            Get
                Return CType(Me.Rows(index),PartidasPendientesSAPRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PartidasPendientesSAPRowChanging As PartidasPendientesSAPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PartidasPendientesSAPRowChanged As PartidasPendientesSAPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PartidasPendientesSAPRowDeleting As PartidasPendientesSAPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PartidasPendientesSAPRowDeleted As PartidasPendientesSAPRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPartidasPendientesSAPRow(ByVal row As PartidasPendientesSAPRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPartidasPendientesSAPRow( _
                    ByVal DAZ_MANDANTE As Decimal,  _
                    ByVal DAZ_SOCIEDAD As String,  _
                    ByVal DAZ_DOCCONT As String,  _
                    ByVal DAZ_EJERCICIO As Decimal,  _
                    ByVal DAZ_CLASEDOC As String,  _
                    ByVal DAZ_CUENTABANCO As String,  _
                    ByVal DAZ_MONTO As Decimal,  _
                    ByVal DAZ_MONTOMON As Decimal,  _
                    ByVal DAZ_MONEDA As String,  _
                    ByVal DAZ_CONCEPTO As String,  _
                    ByVal DAZ_POSICION As String,  _
                    ByVal DAZ_CAJA As String,  _
                    ByVal DAZ_FECHADOC As Date,  _
                    ByVal DAZ_TEXTOPOS As String,  _
                    ByVal DAZ_FECHAz As Date,  _
                    ByVal DAZ_MEDIOPAGO As String,  _
                    ByVal DAZ_RETENCION As String,  _
                    ByVal DAZ_FECHADEP As Date,  _
                    ByVal DAZ_DIAS As Integer,  _
                    ByVal DAZ_UNIDAD As String,  _
                    ByVal DAZ_VIA As String,  _
                    ByVal DAZ_CLAVEBANCO As String,  _
                    ByVal DAZ_ESTATUS As String,  _
                    ByVal DAZ_ENVIADOBANCO As String,  _
                    ByVal DAZ_ANULADO As String,  _
                    ByVal DAZ_FECHAANU As Date,  _
                    ByVal DAZ_ESTADO As String,  _
                    ByVal PLA_CODIGO As Long,  _
                    ByVal DAZ_FECHADIS As Date,  _
                    ByVal DAZ_GLOSA As String,  _
                    ByVal DAZ_COLUMNA As Integer) As PartidasPendientesSAPRow
            Dim rowPartidasPendientesSAPRow As PartidasPendientesSAPRow = CType(Me.NewRow,PartidasPendientesSAPRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, DAZ_MANDANTE, DAZ_SOCIEDAD, DAZ_DOCCONT, DAZ_EJERCICIO, DAZ_CLASEDOC, DAZ_CUENTABANCO, DAZ_MONTO, DAZ_MONTOMON, DAZ_MONEDA, DAZ_CONCEPTO, DAZ_POSICION, DAZ_CAJA, DAZ_FECHADOC, DAZ_TEXTOPOS, DAZ_FECHAz, DAZ_MEDIOPAGO, DAZ_RETENCION, DAZ_FECHADEP, DAZ_DIAS, DAZ_UNIDAD, DAZ_VIA, DAZ_CLAVEBANCO, DAZ_ESTATUS, DAZ_ENVIADOBANCO, DAZ_ANULADO, DAZ_FECHAANU, DAZ_ESTADO, PLA_CODIGO, DAZ_FECHADIS, DAZ_GLOSA, DAZ_COLUMNA}
            rowPartidasPendientesSAPRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPartidasPendientesSAPRow)
            Return rowPartidasPendientesSAPRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByDAZ_CODIGO(ByVal DAZ_CODIGO As Long) As PartidasPendientesSAPRow
            Return CType(Me.Rows.Find(New Object() {DAZ_CODIGO}),PartidasPendientesSAPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PartidasPendientesSAPDataTable = CType(MyBase.Clone,PartidasPendientesSAPDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PartidasPendientesSAPDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDAZ_CODIGO = MyBase.Columns("DAZ_CODIGO")
            Me.columnDAZ_MANDANTE = MyBase.Columns("DAZ_MANDANTE")
            Me.columnDAZ_SOCIEDAD = MyBase.Columns("DAZ_SOCIEDAD")
            Me.columnDAZ_DOCCONT = MyBase.Columns("DAZ_DOCCONT")
            Me.columnDAZ_EJERCICIO = MyBase.Columns("DAZ_EJERCICIO")
            Me.columnDAZ_CLASEDOC = MyBase.Columns("DAZ_CLASEDOC")
            Me.columnDAZ_CUENTABANCO = MyBase.Columns("DAZ_CUENTABANCO")
            Me.columnDAZ_MONTO = MyBase.Columns("DAZ_MONTO")
            Me.columnDAZ_MONTOMON = MyBase.Columns("DAZ_MONTOMON")
            Me.columnDAZ_MONEDA = MyBase.Columns("DAZ_MONEDA")
            Me.columnDAZ_CONCEPTO = MyBase.Columns("DAZ_CONCEPTO")
            Me.columnDAZ_POSICION = MyBase.Columns("DAZ_POSICION")
            Me.columnDAZ_CAJA = MyBase.Columns("DAZ_CAJA")
            Me.columnDAZ_FECHADOC = MyBase.Columns("DAZ_FECHADOC")
            Me.columnDAZ_TEXTOPOS = MyBase.Columns("DAZ_TEXTOPOS")
            Me.columnDAZ_FECHAz = MyBase.Columns("DAZ_FECHAz")
            Me.columnDAZ_MEDIOPAGO = MyBase.Columns("DAZ_MEDIOPAGO")
            Me.columnDAZ_RETENCION = MyBase.Columns("DAZ_RETENCION")
            Me.columnDAZ_FECHADEP = MyBase.Columns("DAZ_FECHADEP")
            Me.columnDAZ_DIAS = MyBase.Columns("DAZ_DIAS")
            Me.columnDAZ_UNIDAD = MyBase.Columns("DAZ_UNIDAD")
            Me.columnDAZ_VIA = MyBase.Columns("DAZ_VIA")
            Me.columnDAZ_CLAVEBANCO = MyBase.Columns("DAZ_CLAVEBANCO")
            Me.columnDAZ_ESTATUS = MyBase.Columns("DAZ_ESTATUS")
            Me.columnDAZ_ENVIADOBANCO = MyBase.Columns("DAZ_ENVIADOBANCO")
            Me.columnDAZ_ANULADO = MyBase.Columns("DAZ_ANULADO")
            Me.columnDAZ_FECHAANU = MyBase.Columns("DAZ_FECHAANU")
            Me.columnDAZ_ESTADO = MyBase.Columns("DAZ_ESTADO")
            Me.columnPLA_CODIGO = MyBase.Columns("PLA_CODIGO")
            Me.columnDAZ_FECHADIS = MyBase.Columns("DAZ_FECHADIS")
            Me.columnDAZ_GLOSA = MyBase.Columns("DAZ_GLOSA")
            Me.columnDAZ_COLUMNA = MyBase.Columns("DAZ_COLUMNA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDAZ_CODIGO = New Global.System.Data.DataColumn("DAZ_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_CODIGO)
            Me.columnDAZ_MANDANTE = New Global.System.Data.DataColumn("DAZ_MANDANTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_MANDANTE)
            Me.columnDAZ_SOCIEDAD = New Global.System.Data.DataColumn("DAZ_SOCIEDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_SOCIEDAD)
            Me.columnDAZ_DOCCONT = New Global.System.Data.DataColumn("DAZ_DOCCONT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_DOCCONT)
            Me.columnDAZ_EJERCICIO = New Global.System.Data.DataColumn("DAZ_EJERCICIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_EJERCICIO)
            Me.columnDAZ_CLASEDOC = New Global.System.Data.DataColumn("DAZ_CLASEDOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_CLASEDOC)
            Me.columnDAZ_CUENTABANCO = New Global.System.Data.DataColumn("DAZ_CUENTABANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_CUENTABANCO)
            Me.columnDAZ_MONTO = New Global.System.Data.DataColumn("DAZ_MONTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_MONTO)
            Me.columnDAZ_MONTOMON = New Global.System.Data.DataColumn("DAZ_MONTOMON", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_MONTOMON)
            Me.columnDAZ_MONEDA = New Global.System.Data.DataColumn("DAZ_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_MONEDA)
            Me.columnDAZ_CONCEPTO = New Global.System.Data.DataColumn("DAZ_CONCEPTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_CONCEPTO)
            Me.columnDAZ_POSICION = New Global.System.Data.DataColumn("DAZ_POSICION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_POSICION)
            Me.columnDAZ_CAJA = New Global.System.Data.DataColumn("DAZ_CAJA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_CAJA)
            Me.columnDAZ_FECHADOC = New Global.System.Data.DataColumn("DAZ_FECHADOC", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_FECHADOC)
            Me.columnDAZ_TEXTOPOS = New Global.System.Data.DataColumn("DAZ_TEXTOPOS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_TEXTOPOS)
            Me.columnDAZ_FECHAz = New Global.System.Data.DataColumn("DAZ_FECHAz", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_FECHAz)
            Me.columnDAZ_MEDIOPAGO = New Global.System.Data.DataColumn("DAZ_MEDIOPAGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_MEDIOPAGO)
            Me.columnDAZ_RETENCION = New Global.System.Data.DataColumn("DAZ_RETENCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_RETENCION)
            Me.columnDAZ_FECHADEP = New Global.System.Data.DataColumn("DAZ_FECHADEP", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_FECHADEP)
            Me.columnDAZ_DIAS = New Global.System.Data.DataColumn("DAZ_DIAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_DIAS)
            Me.columnDAZ_UNIDAD = New Global.System.Data.DataColumn("DAZ_UNIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_UNIDAD)
            Me.columnDAZ_VIA = New Global.System.Data.DataColumn("DAZ_VIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_VIA)
            Me.columnDAZ_CLAVEBANCO = New Global.System.Data.DataColumn("DAZ_CLAVEBANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_CLAVEBANCO)
            Me.columnDAZ_ESTATUS = New Global.System.Data.DataColumn("DAZ_ESTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_ESTATUS)
            Me.columnDAZ_ENVIADOBANCO = New Global.System.Data.DataColumn("DAZ_ENVIADOBANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_ENVIADOBANCO)
            Me.columnDAZ_ANULADO = New Global.System.Data.DataColumn("DAZ_ANULADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_ANULADO)
            Me.columnDAZ_FECHAANU = New Global.System.Data.DataColumn("DAZ_FECHAANU", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_FECHAANU)
            Me.columnDAZ_ESTADO = New Global.System.Data.DataColumn("DAZ_ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_ESTADO)
            Me.columnPLA_CODIGO = New Global.System.Data.DataColumn("PLA_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLA_CODIGO)
            Me.columnDAZ_FECHADIS = New Global.System.Data.DataColumn("DAZ_FECHADIS", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_FECHADIS)
            Me.columnDAZ_GLOSA = New Global.System.Data.DataColumn("DAZ_GLOSA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_GLOSA)
            Me.columnDAZ_COLUMNA = New Global.System.Data.DataColumn("DAZ_COLUMNA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_COLUMNA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDAZ_CODIGO}, true))
            Me.columnDAZ_CODIGO.AutoIncrement = true
            Me.columnDAZ_CODIGO.AutoIncrementSeed = -1
            Me.columnDAZ_CODIGO.AutoIncrementStep = -1
            Me.columnDAZ_CODIGO.AllowDBNull = false
            Me.columnDAZ_CODIGO.ReadOnly = true
            Me.columnDAZ_CODIGO.Unique = true
            Me.columnDAZ_SOCIEDAD.MaxLength = 4
            Me.columnDAZ_DOCCONT.MaxLength = 10
            Me.columnDAZ_CLASEDOC.MaxLength = 2
            Me.columnDAZ_CUENTABANCO.MaxLength = 10
            Me.columnDAZ_MONEDA.MaxLength = 5
            Me.columnDAZ_CONCEPTO.MaxLength = 2
            Me.columnDAZ_POSICION.MaxLength = 3
            Me.columnDAZ_CAJA.MaxLength = 16
            Me.columnDAZ_TEXTOPOS.MaxLength = 50
            Me.columnDAZ_MEDIOPAGO.MaxLength = 12
            Me.columnDAZ_RETENCION.MaxLength = 30
            Me.columnDAZ_UNIDAD.MaxLength = 20
            Me.columnDAZ_VIA.MaxLength = 1
            Me.columnDAZ_CLAVEBANCO.MaxLength = 5
            Me.columnDAZ_ESTATUS.MaxLength = 2
            Me.columnDAZ_ENVIADOBANCO.MaxLength = 1
            Me.columnDAZ_ANULADO.MaxLength = 1
            Me.columnDAZ_ESTADO.MaxLength = 1
            Me.columnDAZ_GLOSA.MaxLength = 25
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPartidasPendientesSAPRow() As PartidasPendientesSAPRow
            Return CType(Me.NewRow,PartidasPendientesSAPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PartidasPendientesSAPRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PartidasPendientesSAPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PartidasPendientesSAPRowChangedEvent) Is Nothing) Then
                RaiseEvent PartidasPendientesSAPRowChanged(Me, New PartidasPendientesSAPRowChangeEvent(CType(e.Row,PartidasPendientesSAPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PartidasPendientesSAPRowChangingEvent) Is Nothing) Then
                RaiseEvent PartidasPendientesSAPRowChanging(Me, New PartidasPendientesSAPRowChangeEvent(CType(e.Row,PartidasPendientesSAPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PartidasPendientesSAPRowDeletedEvent) Is Nothing) Then
                RaiseEvent PartidasPendientesSAPRowDeleted(Me, New PartidasPendientesSAPRowChangeEvent(CType(e.Row,PartidasPendientesSAPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PartidasPendientesSAPRowDeletingEvent) Is Nothing) Then
                RaiseEvent PartidasPendientesSAPRowDeleting(Me, New PartidasPendientesSAPRowChangeEvent(CType(e.Row,PartidasPendientesSAPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePartidasPendientesSAPRow(ByVal row As PartidasPendientesSAPRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALPPE = New dsWALPPE()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PartidasPendientesSAPDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TESDOPDataTable
        Inherits Global.System.Data.TypedTableBase(Of TESDOPRow)
        
        Private columnDOP_CODIGO As Global.System.Data.DataColumn
        
        Private columnDPL_CODIGO As Global.System.Data.DataColumn
        
        Private columnCOL_CODIGO As Global.System.Data.DataColumn
        
        Private columnDOP_MONTO As Global.System.Data.DataColumn
        
        Private columnDOP_TIPO As Global.System.Data.DataColumn
        
        Private columnDOP_NUMERO As Global.System.Data.DataColumn
        
        Private columnDOP_GLOSAADIC As Global.System.Data.DataColumn
        
        Private columnDOP_AUDITORIA As Global.System.Data.DataColumn
        
        Private columnDOP_TIPOREC As Global.System.Data.DataColumn
        
        Private columnDAZ_CODIGO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TESDOP"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPL_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPL_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COL_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOL_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_MONTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_MONTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_NUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_NUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_GLOSAADICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_GLOSAADIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_AUDITORIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_AUDITORIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_TIPORECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_TIPOREC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TESDOPRow
            Get
                Return CType(Me.Rows(index),TESDOPRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESDOPRowChanging As TESDOPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESDOPRowChanged As TESDOPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESDOPRowDeleting As TESDOPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESDOPRowDeleted As TESDOPRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTESDOPRow(ByVal row As TESDOPRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTESDOPRow(ByVal DPL_CODIGO As Long, ByVal COL_CODIGO As Integer, ByVal DOP_MONTO As Decimal, ByVal DOP_TIPO As String, ByVal DOP_NUMERO As String, ByVal DOP_GLOSAADIC As String, ByVal DOP_AUDITORIA As String, ByVal DOP_TIPOREC As String, ByVal DAZ_CODIGO As Long) As TESDOPRow
            Dim rowTESDOPRow As TESDOPRow = CType(Me.NewRow,TESDOPRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, DPL_CODIGO, COL_CODIGO, DOP_MONTO, DOP_TIPO, DOP_NUMERO, DOP_GLOSAADIC, DOP_AUDITORIA, DOP_TIPOREC, DAZ_CODIGO}
            rowTESDOPRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTESDOPRow)
            Return rowTESDOPRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByDOP_CODIGO(ByVal DOP_CODIGO As Long) As TESDOPRow
            Return CType(Me.Rows.Find(New Object() {DOP_CODIGO}),TESDOPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TESDOPDataTable = CType(MyBase.Clone,TESDOPDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TESDOPDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDOP_CODIGO = MyBase.Columns("DOP_CODIGO")
            Me.columnDPL_CODIGO = MyBase.Columns("DPL_CODIGO")
            Me.columnCOL_CODIGO = MyBase.Columns("COL_CODIGO")
            Me.columnDOP_MONTO = MyBase.Columns("DOP_MONTO")
            Me.columnDOP_TIPO = MyBase.Columns("DOP_TIPO")
            Me.columnDOP_NUMERO = MyBase.Columns("DOP_NUMERO")
            Me.columnDOP_GLOSAADIC = MyBase.Columns("DOP_GLOSAADIC")
            Me.columnDOP_AUDITORIA = MyBase.Columns("DOP_AUDITORIA")
            Me.columnDOP_TIPOREC = MyBase.Columns("DOP_TIPOREC")
            Me.columnDAZ_CODIGO = MyBase.Columns("DAZ_CODIGO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDOP_CODIGO = New Global.System.Data.DataColumn("DOP_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_CODIGO)
            Me.columnDPL_CODIGO = New Global.System.Data.DataColumn("DPL_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPL_CODIGO)
            Me.columnCOL_CODIGO = New Global.System.Data.DataColumn("COL_CODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOL_CODIGO)
            Me.columnDOP_MONTO = New Global.System.Data.DataColumn("DOP_MONTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_MONTO)
            Me.columnDOP_TIPO = New Global.System.Data.DataColumn("DOP_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_TIPO)
            Me.columnDOP_NUMERO = New Global.System.Data.DataColumn("DOP_NUMERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_NUMERO)
            Me.columnDOP_GLOSAADIC = New Global.System.Data.DataColumn("DOP_GLOSAADIC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_GLOSAADIC)
            Me.columnDOP_AUDITORIA = New Global.System.Data.DataColumn("DOP_AUDITORIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_AUDITORIA)
            Me.columnDOP_TIPOREC = New Global.System.Data.DataColumn("DOP_TIPOREC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_TIPOREC)
            Me.columnDAZ_CODIGO = New Global.System.Data.DataColumn("DAZ_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_CODIGO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDOP_CODIGO}, true))
            Me.columnDOP_CODIGO.AutoIncrement = true
            Me.columnDOP_CODIGO.AutoIncrementSeed = -1
            Me.columnDOP_CODIGO.AutoIncrementStep = -1
            Me.columnDOP_CODIGO.AllowDBNull = false
            Me.columnDOP_CODIGO.ReadOnly = true
            Me.columnDOP_CODIGO.Unique = true
            Me.columnDOP_TIPO.MaxLength = 1
            Me.columnDOP_NUMERO.MaxLength = 10
            Me.columnDOP_GLOSAADIC.MaxLength = 50
            Me.columnDOP_AUDITORIA.MaxLength = 44
            Me.columnDOP_TIPOREC.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTESDOPRow() As TESDOPRow
            Return CType(Me.NewRow,TESDOPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TESDOPRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TESDOPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TESDOPRowChangedEvent) Is Nothing) Then
                RaiseEvent TESDOPRowChanged(Me, New TESDOPRowChangeEvent(CType(e.Row,TESDOPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TESDOPRowChangingEvent) Is Nothing) Then
                RaiseEvent TESDOPRowChanging(Me, New TESDOPRowChangeEvent(CType(e.Row,TESDOPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TESDOPRowDeletedEvent) Is Nothing) Then
                RaiseEvent TESDOPRowDeleted(Me, New TESDOPRowChangeEvent(CType(e.Row,TESDOPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TESDOPRowDeletingEvent) Is Nothing) Then
                RaiseEvent TESDOPRowDeleting(Me, New TESDOPRowChangeEvent(CType(e.Row,TESDOPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTESDOPRow(ByVal row As TESDOPRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALPPE = New dsWALPPE()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TESDOPDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Cuentas_PlanillaRow
        Inherits Global.System.Data.DataRow
        
        Private tableCuentas_Planilla As Cuentas_PlanillaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCuentas_Planilla = CType(Me.Table,Cuentas_PlanillaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CODIGO() As Integer
            Get
                Return CType(Me(Me.tableCuentas_Planilla.CTE_CODIGOColumn),Integer)
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CTE_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_CODIGO() As Long
            Get
                Return CType(Me(Me.tableCuentas_Planilla.ENT_CODIGOColumn),Long)
            End Get
            Set
                Me(Me.tableCuentas_Planilla.ENT_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CON_CODIGO() As Long
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.CON_CODIGOColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CON_CODIGO' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CON_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MON_CODIGO() As String
            Get
                Return CType(Me(Me.tableCuentas_Planilla.MON_CODIGOColumn),String)
            End Get
            Set
                Me(Me.tableCuentas_Planilla.MON_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMP_CODIGO() As Long
            Get
                Return CType(Me(Me.tableCuentas_Planilla.EMP_CODIGOColumn),Long)
            End Get
            Set
                Me(Me.tableCuentas_Planilla.EMP_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_NUMERO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.CTE_NUMEROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_NUMERO' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CTE_NUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.CTE_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CUENTA' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CTE_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_SIGLA() As String
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.CTE_SIGLAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_SIGLA' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CTE_SIGLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_GRUPO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.CTE_GRUPOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_GRUPO' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CTE_GRUPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_TIPO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.CTE_TIPOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_TIPO' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CTE_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_SECUENCIA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.CTE_SECUENCIAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_SECUENCIA' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CTE_SECUENCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_COLCHON1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.CTE_COLCHON1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_COLCHON1' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CTE_COLCHON1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_COLCHON2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.CTE_COLCHON2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_COLCHON2' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CTE_COLCHON2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_PLAZA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.CTE_PLAZAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_PLAZA' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CTE_PLAZAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_MADRE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.CTE_MADREColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_MADRE' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CTE_MADREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_AUDITORIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.CTE_AUDITORIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_AUDITORIA' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CTE_AUDITORIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_SOCIEDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.CTE_SOCIEDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_SOCIEDAD' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CTE_SOCIEDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CODBANCO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.CTE_CODBANCOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CODBANCO' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CTE_CODBANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CUENTAID() As String
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.CTE_CUENTAIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CUENTAID' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CTE_CUENTAIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_GLOSA() As String
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.CTE_GLOSAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_GLOSA' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CTE_GLOSAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CONTABLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.CTE_CONTABLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CONTABLE' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CTE_CONTABLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_MONEDASAP() As String
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.CTE_MONEDASAPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_MONEDASAP' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CTE_MONEDASAPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_VIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.CTE_VIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_VIA' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CTE_VIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CODCTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.CTE_CODCTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CODCTE' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.CTE_CODCTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_RAZON() As String
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.ENT_RAZONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENT_RAZON' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.ENT_RAZONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_ABREVIATURA() As String
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.ENT_ABREVIATURAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENT_ABREVIATURA' de la tabla 'Cuentas_Planilla' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.ENT_ABREVIATURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property largo() As String
            Get
                Try 
                    Return CType(Me(Me.tableCuentas_Planilla.largoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'largo' de la tabla 'Cuentas_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCuentas_Planilla.largoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCON_CODIGONull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.CON_CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCON_CODIGONull()
            Me(Me.tableCuentas_Planilla.CON_CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_NUMERONull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.CTE_NUMEROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_NUMERONull()
            Me(Me.tableCuentas_Planilla.CTE_NUMEROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.CTE_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CUENTANull()
            Me(Me.tableCuentas_Planilla.CTE_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_SIGLANull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.CTE_SIGLAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_SIGLANull()
            Me(Me.tableCuentas_Planilla.CTE_SIGLAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_GRUPONull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.CTE_GRUPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_GRUPONull()
            Me(Me.tableCuentas_Planilla.CTE_GRUPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_TIPONull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.CTE_TIPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_TIPONull()
            Me(Me.tableCuentas_Planilla.CTE_TIPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_SECUENCIANull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.CTE_SECUENCIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_SECUENCIANull()
            Me(Me.tableCuentas_Planilla.CTE_SECUENCIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_COLCHON1Null() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.CTE_COLCHON1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_COLCHON1Null()
            Me(Me.tableCuentas_Planilla.CTE_COLCHON1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_COLCHON2Null() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.CTE_COLCHON2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_COLCHON2Null()
            Me(Me.tableCuentas_Planilla.CTE_COLCHON2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_PLAZANull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.CTE_PLAZAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_PLAZANull()
            Me(Me.tableCuentas_Planilla.CTE_PLAZAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_MADRENull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.CTE_MADREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_MADRENull()
            Me(Me.tableCuentas_Planilla.CTE_MADREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_AUDITORIANull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.CTE_AUDITORIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_AUDITORIANull()
            Me(Me.tableCuentas_Planilla.CTE_AUDITORIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_SOCIEDADNull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.CTE_SOCIEDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_SOCIEDADNull()
            Me(Me.tableCuentas_Planilla.CTE_SOCIEDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CODBANCONull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.CTE_CODBANCOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CODBANCONull()
            Me(Me.tableCuentas_Planilla.CTE_CODBANCOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CUENTAIDNull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.CTE_CUENTAIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CUENTAIDNull()
            Me(Me.tableCuentas_Planilla.CTE_CUENTAIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_GLOSANull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.CTE_GLOSAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_GLOSANull()
            Me(Me.tableCuentas_Planilla.CTE_GLOSAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CONTABLENull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.CTE_CONTABLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CONTABLENull()
            Me(Me.tableCuentas_Planilla.CTE_CONTABLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_MONEDASAPNull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.CTE_MONEDASAPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_MONEDASAPNull()
            Me(Me.tableCuentas_Planilla.CTE_MONEDASAPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_VIANull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.CTE_VIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_VIANull()
            Me(Me.tableCuentas_Planilla.CTE_VIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CODCTENull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.CTE_CODCTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CODCTENull()
            Me(Me.tableCuentas_Planilla.CTE_CODCTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENT_RAZONNull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.ENT_RAZONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENT_RAZONNull()
            Me(Me.tableCuentas_Planilla.ENT_RAZONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENT_ABREVIATURANull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.ENT_ABREVIATURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENT_ABREVIATURANull()
            Me(Me.tableCuentas_Planilla.ENT_ABREVIATURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IslargoNull() As Boolean
            Return Me.IsNull(Me.tableCuentas_Planilla.largoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetlargoNull()
            Me(Me.tableCuentas_Planilla.largoColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TraeBancosPlanillaRow
        Inherits Global.System.Data.DataRow
        
        Private tableTraeBancosPlanilla As TraeBancosPlanillaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTraeBancosPlanilla = CType(Me.Table,TraeBancosPlanillaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CODIGO() As Integer
            Get
                Return CType(Me(Me.tableTraeBancosPlanilla.CTE_CODIGOColumn),Integer)
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_CODIGO() As Long
            Get
                Return CType(Me(Me.tableTraeBancosPlanilla.ENT_CODIGOColumn),Long)
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.ENT_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CON_CODIGO() As Long
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CON_CODIGOColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CON_CODIGO' de la tabla 'TraeBancosPlanilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CON_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MON_CODIGO() As String
            Get
                Return CType(Me(Me.tableTraeBancosPlanilla.MON_CODIGOColumn),String)
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.MON_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMP_CODIGO() As Long
            Get
                Return CType(Me(Me.tableTraeBancosPlanilla.EMP_CODIGOColumn),Long)
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.EMP_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_NUMERO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CTE_NUMEROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_NUMERO' de la tabla 'TraeBancosPlanilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_NUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CTE_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CUENTA' de la tabla 'TraeBancosPlanilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_SIGLA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CTE_SIGLAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_SIGLA' de la tabla 'TraeBancosPlanilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_SIGLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_GRUPO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CTE_GRUPOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_GRUPO' de la tabla 'TraeBancosPlanilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_GRUPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_TIPO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CTE_TIPOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_TIPO' de la tabla 'TraeBancosPlanilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_SECUENCIA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CTE_SECUENCIAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_SECUENCIA' de la tabla 'TraeBancosPlanilla' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_SECUENCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_COLCHON1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CTE_COLCHON1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_COLCHON1' de la tabla 'TraeBancosPlanilla' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_COLCHON1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_COLCHON2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CTE_COLCHON2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_COLCHON2' de la tabla 'TraeBancosPlanilla' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_COLCHON2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_PLAZA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CTE_PLAZAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_PLAZA' de la tabla 'TraeBancosPlanilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_PLAZAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_MADRE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CTE_MADREColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_MADRE' de la tabla 'TraeBancosPlanilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_MADREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_AUDITORIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CTE_AUDITORIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_AUDITORIA' de la tabla 'TraeBancosPlanilla' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_AUDITORIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_SOCIEDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CTE_SOCIEDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_SOCIEDAD' de la tabla 'TraeBancosPlanilla' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_SOCIEDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CODBANCO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CTE_CODBANCOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CODBANCO' de la tabla 'TraeBancosPlanilla' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_CODBANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CUENTAID() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CTE_CUENTAIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CUENTAID' de la tabla 'TraeBancosPlanilla' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_CUENTAIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_GLOSA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CTE_GLOSAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_GLOSA' de la tabla 'TraeBancosPlanilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_GLOSAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CONTABLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CTE_CONTABLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CONTABLE' de la tabla 'TraeBancosPlanilla' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_CONTABLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_MONEDASAP() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CTE_MONEDASAPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_MONEDASAP' de la tabla 'TraeBancosPlanilla' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_MONEDASAPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_VIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CTE_VIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_VIA' de la tabla 'TraeBancosPlanilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_VIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CODCTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CTE_CODCTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CODCTE' de la tabla 'TraeBancosPlanilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_CODCTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TEN_CODIGO() As Integer
            Get
                Return CType(Me(Me.tableTraeBancosPlanilla.TEN_CODIGOColumn),Integer)
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.TEN_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_RAZON() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.ENT_RAZONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENT_RAZON' de la tabla 'TraeBancosPlanilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.ENT_RAZONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_ABREVIATURA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.ENT_ABREVIATURAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENT_ABREVIATURA' de la tabla 'TraeBancosPlanilla' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.ENT_ABREVIATURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_RUT() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.ENT_RUTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENT_RUT' de la tabla 'TraeBancosPlanilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.ENT_RUTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_LIMITE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.ENT_LIMITEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENT_LIMITE' de la tabla 'TraeBancosPlanilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.ENT_LIMITEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_ESTADO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.ENT_ESTADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENT_ESTADO' de la tabla 'TraeBancosPlanilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.ENT_ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_SITIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.ENT_SITIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENT_SITIO' de la tabla 'TraeBancosPlanilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.ENT_SITIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_AUDITORIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.ENT_AUDITORIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENT_AUDITORIA' de la tabla 'TraeBancosPlanilla' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.ENT_AUDITORIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_SAP() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.ENT_SAPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENT_SAP' de la tabla 'TraeBancosPlanilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.ENT_SAPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_SECUENCIA1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTraeBancosPlanilla.CTE_SECUENCIA1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_SECUENCIA1' de la tabla 'TraeBancosPlanilla' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.CTE_SECUENCIA1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_CODIGO1() As Long
            Get
                Return CType(Me(Me.tableTraeBancosPlanilla.ENT_CODIGO1Column),Long)
            End Get
            Set
                Me(Me.tableTraeBancosPlanilla.ENT_CODIGO1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCON_CODIGONull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CON_CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCON_CODIGONull()
            Me(Me.tableTraeBancosPlanilla.CON_CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_NUMERONull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CTE_NUMEROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_NUMERONull()
            Me(Me.tableTraeBancosPlanilla.CTE_NUMEROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CTE_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CUENTANull()
            Me(Me.tableTraeBancosPlanilla.CTE_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_SIGLANull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CTE_SIGLAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_SIGLANull()
            Me(Me.tableTraeBancosPlanilla.CTE_SIGLAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_GRUPONull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CTE_GRUPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_GRUPONull()
            Me(Me.tableTraeBancosPlanilla.CTE_GRUPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_TIPONull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CTE_TIPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_TIPONull()
            Me(Me.tableTraeBancosPlanilla.CTE_TIPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_SECUENCIANull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CTE_SECUENCIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_SECUENCIANull()
            Me(Me.tableTraeBancosPlanilla.CTE_SECUENCIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_COLCHON1Null() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CTE_COLCHON1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_COLCHON1Null()
            Me(Me.tableTraeBancosPlanilla.CTE_COLCHON1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_COLCHON2Null() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CTE_COLCHON2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_COLCHON2Null()
            Me(Me.tableTraeBancosPlanilla.CTE_COLCHON2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_PLAZANull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CTE_PLAZAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_PLAZANull()
            Me(Me.tableTraeBancosPlanilla.CTE_PLAZAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_MADRENull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CTE_MADREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_MADRENull()
            Me(Me.tableTraeBancosPlanilla.CTE_MADREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_AUDITORIANull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CTE_AUDITORIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_AUDITORIANull()
            Me(Me.tableTraeBancosPlanilla.CTE_AUDITORIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_SOCIEDADNull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CTE_SOCIEDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_SOCIEDADNull()
            Me(Me.tableTraeBancosPlanilla.CTE_SOCIEDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CODBANCONull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CTE_CODBANCOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CODBANCONull()
            Me(Me.tableTraeBancosPlanilla.CTE_CODBANCOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CUENTAIDNull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CTE_CUENTAIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CUENTAIDNull()
            Me(Me.tableTraeBancosPlanilla.CTE_CUENTAIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_GLOSANull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CTE_GLOSAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_GLOSANull()
            Me(Me.tableTraeBancosPlanilla.CTE_GLOSAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CONTABLENull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CTE_CONTABLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CONTABLENull()
            Me(Me.tableTraeBancosPlanilla.CTE_CONTABLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_MONEDASAPNull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CTE_MONEDASAPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_MONEDASAPNull()
            Me(Me.tableTraeBancosPlanilla.CTE_MONEDASAPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_VIANull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CTE_VIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_VIANull()
            Me(Me.tableTraeBancosPlanilla.CTE_VIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CODCTENull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CTE_CODCTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CODCTENull()
            Me(Me.tableTraeBancosPlanilla.CTE_CODCTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENT_RAZONNull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.ENT_RAZONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENT_RAZONNull()
            Me(Me.tableTraeBancosPlanilla.ENT_RAZONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENT_ABREVIATURANull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.ENT_ABREVIATURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENT_ABREVIATURANull()
            Me(Me.tableTraeBancosPlanilla.ENT_ABREVIATURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENT_RUTNull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.ENT_RUTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENT_RUTNull()
            Me(Me.tableTraeBancosPlanilla.ENT_RUTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENT_LIMITENull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.ENT_LIMITEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENT_LIMITENull()
            Me(Me.tableTraeBancosPlanilla.ENT_LIMITEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENT_ESTADONull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.ENT_ESTADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENT_ESTADONull()
            Me(Me.tableTraeBancosPlanilla.ENT_ESTADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENT_SITIONull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.ENT_SITIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENT_SITIONull()
            Me(Me.tableTraeBancosPlanilla.ENT_SITIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENT_AUDITORIANull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.ENT_AUDITORIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENT_AUDITORIANull()
            Me(Me.tableTraeBancosPlanilla.ENT_AUDITORIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENT_SAPNull() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.ENT_SAPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENT_SAPNull()
            Me(Me.tableTraeBancosPlanilla.ENT_SAPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_SECUENCIA1Null() As Boolean
            Return Me.IsNull(Me.tableTraeBancosPlanilla.CTE_SECUENCIA1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_SECUENCIA1Null()
            Me(Me.tableTraeBancosPlanilla.CTE_SECUENCIA1Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PartidasPendientesSAPRow
        Inherits Global.System.Data.DataRow
        
        Private tablePartidasPendientesSAP As PartidasPendientesSAPDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePartidasPendientesSAP = CType(Me.Table,PartidasPendientesSAPDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_CODIGO() As Long
            Get
                Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_CODIGOColumn),Long)
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_MANDANTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_MANDANTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_MANDANTE' de la tabla 'PartidasPendientesSAP' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_MANDANTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_SOCIEDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_SOCIEDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_SOCIEDAD' de la tabla 'PartidasPendientesSAP' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_SOCIEDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_DOCCONT() As String
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_DOCCONTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_DOCCONT' de la tabla 'PartidasPendientesSAP' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_DOCCONTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_EJERCICIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_EJERCICIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_EJERCICIO' de la tabla 'PartidasPendientesSAP' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_EJERCICIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_CLASEDOC() As String
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_CLASEDOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_CLASEDOC' de la tabla 'PartidasPendientesSAP' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_CLASEDOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_CUENTABANCO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_CUENTABANCOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_CUENTABANCO' de la tabla 'PartidasPendientesSAP' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_CUENTABANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_MONTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_MONTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_MONTO' de la tabla 'PartidasPendientesSAP' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_MONTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_MONTOMON() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_MONTOMONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_MONTOMON' de la tabla 'PartidasPendientesSAP' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_MONTOMONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_MONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_MONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_MONEDA' de la tabla 'PartidasPendientesSAP' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_CONCEPTO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_CONCEPTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_CONCEPTO' de la tabla 'PartidasPendientesSAP' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_CONCEPTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_POSICION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_POSICIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_POSICION' de la tabla 'PartidasPendientesSAP' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_POSICIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_CAJA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_CAJAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_CAJA' de la tabla 'PartidasPendientesSAP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_CAJAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_FECHADOC() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_FECHADOCColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_FECHADOC' de la tabla 'PartidasPendientesSAP' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_FECHADOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_TEXTOPOS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_TEXTOPOSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_TEXTOPOS' de la tabla 'PartidasPendientesSAP' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_TEXTOPOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_FECHAz() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_FECHAzColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_FECHAz' de la tabla 'PartidasPendientesSAP' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_FECHAzColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_MEDIOPAGO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_MEDIOPAGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_MEDIOPAGO' de la tabla 'PartidasPendientesSAP' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_MEDIOPAGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_RETENCION() As String
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_RETENCIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_RETENCION' de la tabla 'PartidasPendientesSAP' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_RETENCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_FECHADEP() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_FECHADEPColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_FECHADEP' de la tabla 'PartidasPendientesSAP' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_FECHADEPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_DIAS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_DIASColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_DIAS' de la tabla 'PartidasPendientesSAP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_DIASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_UNIDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_UNIDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_UNIDAD' de la tabla 'PartidasPendientesSAP' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_UNIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_VIA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_VIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_VIA' de la tabla 'PartidasPendientesSAP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_VIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_CLAVEBANCO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_CLAVEBANCOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_CLAVEBANCO' de la tabla 'PartidasPendientesSAP' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_CLAVEBANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_ESTATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_ESTATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_ESTATUS' de la tabla 'PartidasPendientesSAP' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_ESTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_ENVIADOBANCO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_ENVIADOBANCOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_ENVIADOBANCO' de la tabla 'PartidasPendientesSAP' es "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_ENVIADOBANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_ANULADO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_ANULADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_ANULADO' de la tabla 'PartidasPendientesSAP' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_ANULADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_FECHAANU() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_FECHAANUColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_FECHAANU' de la tabla 'PartidasPendientesSAP' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_FECHAANUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_ESTADO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_ESTADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_ESTADO' de la tabla 'PartidasPendientesSAP' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLA_CODIGO() As Long
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.PLA_CODIGOColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PLA_CODIGO' de la tabla 'PartidasPendientesSAP' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.PLA_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_FECHADIS() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_FECHADISColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_FECHADIS' de la tabla 'PartidasPendientesSAP' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_FECHADISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_GLOSA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_GLOSAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_GLOSA' de la tabla 'PartidasPendientesSAP' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_GLOSAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_COLUMNA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tablePartidasPendientesSAP.DAZ_COLUMNAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_COLUMNA' de la tabla 'PartidasPendientesSAP' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tablePartidasPendientesSAP.DAZ_COLUMNAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_MANDANTENull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_MANDANTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_MANDANTENull()
            Me(Me.tablePartidasPendientesSAP.DAZ_MANDANTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_SOCIEDADNull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_SOCIEDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_SOCIEDADNull()
            Me(Me.tablePartidasPendientesSAP.DAZ_SOCIEDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_DOCCONTNull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_DOCCONTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_DOCCONTNull()
            Me(Me.tablePartidasPendientesSAP.DAZ_DOCCONTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_EJERCICIONull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_EJERCICIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_EJERCICIONull()
            Me(Me.tablePartidasPendientesSAP.DAZ_EJERCICIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_CLASEDOCNull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_CLASEDOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_CLASEDOCNull()
            Me(Me.tablePartidasPendientesSAP.DAZ_CLASEDOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_CUENTABANCONull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_CUENTABANCOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_CUENTABANCONull()
            Me(Me.tablePartidasPendientesSAP.DAZ_CUENTABANCOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_MONTONull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_MONTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_MONTONull()
            Me(Me.tablePartidasPendientesSAP.DAZ_MONTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_MONTOMONNull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_MONTOMONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_MONTOMONNull()
            Me(Me.tablePartidasPendientesSAP.DAZ_MONTOMONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_MONEDANull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_MONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_MONEDANull()
            Me(Me.tablePartidasPendientesSAP.DAZ_MONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_CONCEPTONull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_CONCEPTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_CONCEPTONull()
            Me(Me.tablePartidasPendientesSAP.DAZ_CONCEPTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_POSICIONNull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_POSICIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_POSICIONNull()
            Me(Me.tablePartidasPendientesSAP.DAZ_POSICIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_CAJANull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_CAJAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_CAJANull()
            Me(Me.tablePartidasPendientesSAP.DAZ_CAJAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_FECHADOCNull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_FECHADOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_FECHADOCNull()
            Me(Me.tablePartidasPendientesSAP.DAZ_FECHADOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_TEXTOPOSNull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_TEXTOPOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_TEXTOPOSNull()
            Me(Me.tablePartidasPendientesSAP.DAZ_TEXTOPOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_FECHAzNull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_FECHAzColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_FECHAzNull()
            Me(Me.tablePartidasPendientesSAP.DAZ_FECHAzColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_MEDIOPAGONull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_MEDIOPAGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_MEDIOPAGONull()
            Me(Me.tablePartidasPendientesSAP.DAZ_MEDIOPAGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_RETENCIONNull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_RETENCIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_RETENCIONNull()
            Me(Me.tablePartidasPendientesSAP.DAZ_RETENCIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_FECHADEPNull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_FECHADEPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_FECHADEPNull()
            Me(Me.tablePartidasPendientesSAP.DAZ_FECHADEPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_DIASNull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_DIASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_DIASNull()
            Me(Me.tablePartidasPendientesSAP.DAZ_DIASColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_UNIDADNull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_UNIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_UNIDADNull()
            Me(Me.tablePartidasPendientesSAP.DAZ_UNIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_VIANull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_VIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_VIANull()
            Me(Me.tablePartidasPendientesSAP.DAZ_VIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_CLAVEBANCONull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_CLAVEBANCOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_CLAVEBANCONull()
            Me(Me.tablePartidasPendientesSAP.DAZ_CLAVEBANCOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_ESTATUSNull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_ESTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_ESTATUSNull()
            Me(Me.tablePartidasPendientesSAP.DAZ_ESTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_ENVIADOBANCONull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_ENVIADOBANCOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_ENVIADOBANCONull()
            Me(Me.tablePartidasPendientesSAP.DAZ_ENVIADOBANCOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_ANULADONull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_ANULADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_ANULADONull()
            Me(Me.tablePartidasPendientesSAP.DAZ_ANULADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_FECHAANUNull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_FECHAANUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_FECHAANUNull()
            Me(Me.tablePartidasPendientesSAP.DAZ_FECHAANUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_ESTADONull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_ESTADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_ESTADONull()
            Me(Me.tablePartidasPendientesSAP.DAZ_ESTADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPLA_CODIGONull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.PLA_CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPLA_CODIGONull()
            Me(Me.tablePartidasPendientesSAP.PLA_CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_FECHADISNull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_FECHADISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_FECHADISNull()
            Me(Me.tablePartidasPendientesSAP.DAZ_FECHADISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_GLOSANull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_GLOSAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_GLOSANull()
            Me(Me.tablePartidasPendientesSAP.DAZ_GLOSAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_COLUMNANull() As Boolean
            Return Me.IsNull(Me.tablePartidasPendientesSAP.DAZ_COLUMNAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_COLUMNANull()
            Me(Me.tablePartidasPendientesSAP.DAZ_COLUMNAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TESDOPRow
        Inherits Global.System.Data.DataRow
        
        Private tableTESDOP As TESDOPDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTESDOP = CType(Me.Table,TESDOPDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_CODIGO() As Long
            Get
                Return CType(Me(Me.tableTESDOP.DOP_CODIGOColumn),Long)
            End Get
            Set
                Me(Me.tableTESDOP.DOP_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPL_CODIGO() As Long
            Get
                Try 
                    Return CType(Me(Me.tableTESDOP.DPL_CODIGOColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DPL_CODIGO' de la tabla 'TESDOP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDOP.DPL_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COL_CODIGO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTESDOP.COL_CODIGOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COL_CODIGO' de la tabla 'TESDOP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDOP.COL_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_MONTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDOP.DOP_MONTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DOP_MONTO' de la tabla 'TESDOP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDOP.DOP_MONTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_TIPO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDOP.DOP_TIPOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DOP_TIPO' de la tabla 'TESDOP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDOP.DOP_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_NUMERO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDOP.DOP_NUMEROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DOP_NUMERO' de la tabla 'TESDOP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDOP.DOP_NUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_GLOSAADIC() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDOP.DOP_GLOSAADICColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DOP_GLOSAADIC' de la tabla 'TESDOP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDOP.DOP_GLOSAADICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_AUDITORIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDOP.DOP_AUDITORIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DOP_AUDITORIA' de la tabla 'TESDOP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDOP.DOP_AUDITORIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_TIPOREC() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDOP.DOP_TIPORECColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DOP_TIPOREC' de la tabla 'TESDOP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDOP.DOP_TIPORECColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_CODIGO() As Long
            Get
                Try 
                    Return CType(Me(Me.tableTESDOP.DAZ_CODIGOColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_CODIGO' de la tabla 'TESDOP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDOP.DAZ_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPL_CODIGONull() As Boolean
            Return Me.IsNull(Me.tableTESDOP.DPL_CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPL_CODIGONull()
            Me(Me.tableTESDOP.DPL_CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOL_CODIGONull() As Boolean
            Return Me.IsNull(Me.tableTESDOP.COL_CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOL_CODIGONull()
            Me(Me.tableTESDOP.COL_CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOP_MONTONull() As Boolean
            Return Me.IsNull(Me.tableTESDOP.DOP_MONTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOP_MONTONull()
            Me(Me.tableTESDOP.DOP_MONTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOP_TIPONull() As Boolean
            Return Me.IsNull(Me.tableTESDOP.DOP_TIPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOP_TIPONull()
            Me(Me.tableTESDOP.DOP_TIPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOP_NUMERONull() As Boolean
            Return Me.IsNull(Me.tableTESDOP.DOP_NUMEROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOP_NUMERONull()
            Me(Me.tableTESDOP.DOP_NUMEROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOP_GLOSAADICNull() As Boolean
            Return Me.IsNull(Me.tableTESDOP.DOP_GLOSAADICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOP_GLOSAADICNull()
            Me(Me.tableTESDOP.DOP_GLOSAADICColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOP_AUDITORIANull() As Boolean
            Return Me.IsNull(Me.tableTESDOP.DOP_AUDITORIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOP_AUDITORIANull()
            Me(Me.tableTESDOP.DOP_AUDITORIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOP_TIPORECNull() As Boolean
            Return Me.IsNull(Me.tableTESDOP.DOP_TIPORECColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOP_TIPORECNull()
            Me(Me.tableTESDOP.DOP_TIPORECColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_CODIGONull() As Boolean
            Return Me.IsNull(Me.tableTESDOP.DAZ_CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_CODIGONull()
            Me(Me.tableTESDOP.DAZ_CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Cuentas_PlanillaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Cuentas_PlanillaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Cuentas_PlanillaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Cuentas_PlanillaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TraeBancosPlanillaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TraeBancosPlanillaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TraeBancosPlanillaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TraeBancosPlanillaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PartidasPendientesSAPRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PartidasPendientesSAPRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PartidasPendientesSAPRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PartidasPendientesSAPRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TESDOPRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TESDOPRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TESDOPRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TESDOPRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsWALPPETableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Cuentas_PlanillaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Cuentas_Planilla"
            tableMapping.ColumnMappings.Add("CTE_CODIGO", "CTE_CODIGO")
            tableMapping.ColumnMappings.Add("ENT_CODIGO", "ENT_CODIGO")
            tableMapping.ColumnMappings.Add("CON_CODIGO", "CON_CODIGO")
            tableMapping.ColumnMappings.Add("MON_CODIGO", "MON_CODIGO")
            tableMapping.ColumnMappings.Add("EMP_CODIGO", "EMP_CODIGO")
            tableMapping.ColumnMappings.Add("CTE_NUMERO", "CTE_NUMERO")
            tableMapping.ColumnMappings.Add("CTE_CUENTA", "CTE_CUENTA")
            tableMapping.ColumnMappings.Add("CTE_SIGLA", "CTE_SIGLA")
            tableMapping.ColumnMappings.Add("CTE_GRUPO", "CTE_GRUPO")
            tableMapping.ColumnMappings.Add("CTE_TIPO", "CTE_TIPO")
            tableMapping.ColumnMappings.Add("CTE_SECUENCIA", "CTE_SECUENCIA")
            tableMapping.ColumnMappings.Add("CTE_COLCHON1", "CTE_COLCHON1")
            tableMapping.ColumnMappings.Add("CTE_COLCHON2", "CTE_COLCHON2")
            tableMapping.ColumnMappings.Add("CTE_PLAZA", "CTE_PLAZA")
            tableMapping.ColumnMappings.Add("CTE_MADRE", "CTE_MADRE")
            tableMapping.ColumnMappings.Add("CTE_AUDITORIA", "CTE_AUDITORIA")
            tableMapping.ColumnMappings.Add("CTE_SOCIEDAD", "CTE_SOCIEDAD")
            tableMapping.ColumnMappings.Add("CTE_CODBANCO", "CTE_CODBANCO")
            tableMapping.ColumnMappings.Add("CTE_CUENTAID", "CTE_CUENTAID")
            tableMapping.ColumnMappings.Add("CTE_GLOSA", "CTE_GLOSA")
            tableMapping.ColumnMappings.Add("CTE_CONTABLE", "CTE_CONTABLE")
            tableMapping.ColumnMappings.Add("CTE_MONEDASAP", "CTE_MONEDASAP")
            tableMapping.ColumnMappings.Add("CTE_VIA", "CTE_VIA")
            tableMapping.ColumnMappings.Add("CTE_CODCTE", "CTE_CODCTE")
            tableMapping.ColumnMappings.Add("ENT_RAZON", "ENT_RAZON")
            tableMapping.ColumnMappings.Add("ENT_ABREVIATURA", "ENT_ABREVIATURA")
            tableMapping.ColumnMappings.Add("largo", "largo")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT TESCTE.*, TESENT.ENT_RAZON, TESENT.ENT_ABREVIATURA, TESENT.ENT_ABREVIATURA"& _ 
                " AS largo FROM TESCTE INNER JOIN TESENT ON TESCTE.ENT_CODIGO = TESENT.ENT_CODIGO"& _ 
                " WHERE (TESCTE.CTE_SECUENCIA >= 100) AND (TESCTE.CTE_SECUENCIA <= 999) ORDER BY "& _ 
                "TESCTE.CTE_SECUENCIA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsWALPPE.Cuentas_PlanillaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsWALPPE.Cuentas_PlanillaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsWALPPE.Cuentas_PlanillaDataTable = New dsWALPPE.Cuentas_PlanillaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TraeBancosPlanillaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TraeBancosPlanilla"
            tableMapping.ColumnMappings.Add("CTE_CODIGO", "CTE_CODIGO")
            tableMapping.ColumnMappings.Add("ENT_CODIGO", "ENT_CODIGO")
            tableMapping.ColumnMappings.Add("CON_CODIGO", "CON_CODIGO")
            tableMapping.ColumnMappings.Add("MON_CODIGO", "MON_CODIGO")
            tableMapping.ColumnMappings.Add("EMP_CODIGO", "EMP_CODIGO")
            tableMapping.ColumnMappings.Add("CTE_NUMERO", "CTE_NUMERO")
            tableMapping.ColumnMappings.Add("CTE_CUENTA", "CTE_CUENTA")
            tableMapping.ColumnMappings.Add("CTE_SIGLA", "CTE_SIGLA")
            tableMapping.ColumnMappings.Add("CTE_GRUPO", "CTE_GRUPO")
            tableMapping.ColumnMappings.Add("CTE_TIPO", "CTE_TIPO")
            tableMapping.ColumnMappings.Add("CTE_SECUENCIA", "CTE_SECUENCIA")
            tableMapping.ColumnMappings.Add("CTE_COLCHON1", "CTE_COLCHON1")
            tableMapping.ColumnMappings.Add("CTE_COLCHON2", "CTE_COLCHON2")
            tableMapping.ColumnMappings.Add("CTE_PLAZA", "CTE_PLAZA")
            tableMapping.ColumnMappings.Add("CTE_MADRE", "CTE_MADRE")
            tableMapping.ColumnMappings.Add("CTE_AUDITORIA", "CTE_AUDITORIA")
            tableMapping.ColumnMappings.Add("CTE_SOCIEDAD", "CTE_SOCIEDAD")
            tableMapping.ColumnMappings.Add("CTE_CODBANCO", "CTE_CODBANCO")
            tableMapping.ColumnMappings.Add("CTE_CUENTAID", "CTE_CUENTAID")
            tableMapping.ColumnMappings.Add("CTE_GLOSA", "CTE_GLOSA")
            tableMapping.ColumnMappings.Add("CTE_CONTABLE", "CTE_CONTABLE")
            tableMapping.ColumnMappings.Add("CTE_MONEDASAP", "CTE_MONEDASAP")
            tableMapping.ColumnMappings.Add("CTE_VIA", "CTE_VIA")
            tableMapping.ColumnMappings.Add("CTE_CODCTE", "CTE_CODCTE")
            tableMapping.ColumnMappings.Add("TEN_CODIGO", "TEN_CODIGO")
            tableMapping.ColumnMappings.Add("ENT_RAZON", "ENT_RAZON")
            tableMapping.ColumnMappings.Add("ENT_ABREVIATURA", "ENT_ABREVIATURA")
            tableMapping.ColumnMappings.Add("ENT_RUT", "ENT_RUT")
            tableMapping.ColumnMappings.Add("ENT_LIMITE", "ENT_LIMITE")
            tableMapping.ColumnMappings.Add("ENT_ESTADO", "ENT_ESTADO")
            tableMapping.ColumnMappings.Add("ENT_SITIO", "ENT_SITIO")
            tableMapping.ColumnMappings.Add("ENT_AUDITORIA", "ENT_AUDITORIA")
            tableMapping.ColumnMappings.Add("ENT_SAP", "ENT_SAP")
            tableMapping.ColumnMappings.Add("CTE_SECUENCIA1", "CTE_SECUENCIA1")
            tableMapping.ColumnMappings.Add("ENT_CODIGO1", "ENT_CODIGO1")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TESCTE.CTE_CODIGO, TESCTE.ENT_CODIGO, TESCTE.CON_CODIGO, TESCTE.MON"& _ 
                "_CODIGO, TESCTE.EMP_CODIGO, TESCTE.CTE_NUMERO, TESCTE.CTE_CUENTA, TESCTE.CTE_SIG"& _ 
                "LA, TESCTE.CTE_GRUPO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESCTE.CTE_TIPO, TESCTE.CTE_SEC"& _ 
                "UENCIA, TESCTE.CTE_COLCHON1, TESCTE.CTE_COLCHON2, TESCTE.CTE_PLAZA, TESCTE.CTE_M"& _ 
                "ADRE, TESCTE.CTE_AUDITORIA, TESCTE.CTE_SOCIEDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESC"& _ 
                "TE.CTE_CODBANCO, TESCTE.CTE_CUENTAID, TESCTE.CTE_GLOSA, TESCTE.CTE_CONTABLE, TES"& _ 
                "CTE.CTE_MONEDASAP, TESCTE.CTE_VIA, TESCTE.CTE_CODCTE, TESCTE.CTE_SECUENCIA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       TESENT.ENT_CODIGO, TESENT.TEN_CODIGO, TESENT.ENT_RAZON, T"& _ 
                "ESENT.ENT_ABREVIATURA, TESENT.ENT_RUT, TESENT.ENT_LIMITE, TESENT.ENT_ESTADO, TES"& _ 
                "ENT.ENT_SITIO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESENT.ENT_AUDITORIA, TESENT.ENT_SAP"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "FROM            TESCTE INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESENT ON TESCTE.ENT"& _ 
                "_CODIGO = TESENT.ENT_CODIGO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (TESCTE.CTE_SECUENCIA > 99) AND (TESCT"& _ 
                "E.CTE_SECUENCIA < 200)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY TESCTE.CTE_SECUENCIA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsWALPPE.TraeBancosPlanillaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsWALPPE.TraeBancosPlanillaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsWALPPE.TraeBancosPlanillaDataTable = New dsWALPPE.TraeBancosPlanillaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PartidasPendientesSAPTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PartidasPendientesSAP"
            tableMapping.ColumnMappings.Add("DAZ_CODIGO", "DAZ_CODIGO")
            tableMapping.ColumnMappings.Add("DAZ_MANDANTE", "DAZ_MANDANTE")
            tableMapping.ColumnMappings.Add("DAZ_SOCIEDAD", "DAZ_SOCIEDAD")
            tableMapping.ColumnMappings.Add("DAZ_DOCCONT", "DAZ_DOCCONT")
            tableMapping.ColumnMappings.Add("DAZ_EJERCICIO", "DAZ_EJERCICIO")
            tableMapping.ColumnMappings.Add("DAZ_CLASEDOC", "DAZ_CLASEDOC")
            tableMapping.ColumnMappings.Add("DAZ_CUENTABANCO", "DAZ_CUENTABANCO")
            tableMapping.ColumnMappings.Add("DAZ_MONTO", "DAZ_MONTO")
            tableMapping.ColumnMappings.Add("DAZ_MONTOMON", "DAZ_MONTOMON")
            tableMapping.ColumnMappings.Add("DAZ_MONEDA", "DAZ_MONEDA")
            tableMapping.ColumnMappings.Add("DAZ_CONCEPTO", "DAZ_CONCEPTO")
            tableMapping.ColumnMappings.Add("DAZ_POSICION", "DAZ_POSICION")
            tableMapping.ColumnMappings.Add("DAZ_CAJA", "DAZ_CAJA")
            tableMapping.ColumnMappings.Add("DAZ_FECHADOC", "DAZ_FECHADOC")
            tableMapping.ColumnMappings.Add("DAZ_TEXTOPOS", "DAZ_TEXTOPOS")
            tableMapping.ColumnMappings.Add("DAZ_FECHAz", "DAZ_FECHAz")
            tableMapping.ColumnMappings.Add("DAZ_MEDIOPAGO", "DAZ_MEDIOPAGO")
            tableMapping.ColumnMappings.Add("DAZ_RETENCION", "DAZ_RETENCION")
            tableMapping.ColumnMappings.Add("DAZ_FECHADEP", "DAZ_FECHADEP")
            tableMapping.ColumnMappings.Add("DAZ_DIAS", "DAZ_DIAS")
            tableMapping.ColumnMappings.Add("DAZ_UNIDAD", "DAZ_UNIDAD")
            tableMapping.ColumnMappings.Add("DAZ_VIA", "DAZ_VIA")
            tableMapping.ColumnMappings.Add("DAZ_CLAVEBANCO", "DAZ_CLAVEBANCO")
            tableMapping.ColumnMappings.Add("DAZ_ESTATUS", "DAZ_ESTATUS")
            tableMapping.ColumnMappings.Add("DAZ_ENVIADOBANCO", "DAZ_ENVIADOBANCO")
            tableMapping.ColumnMappings.Add("DAZ_ANULADO", "DAZ_ANULADO")
            tableMapping.ColumnMappings.Add("DAZ_FECHAANU", "DAZ_FECHAANU")
            tableMapping.ColumnMappings.Add("DAZ_ESTADO", "DAZ_ESTADO")
            tableMapping.ColumnMappings.Add("PLA_CODIGO", "PLA_CODIGO")
            tableMapping.ColumnMappings.Add("DAZ_FECHADIS", "DAZ_FECHADIS")
            tableMapping.ColumnMappings.Add("DAZ_GLOSA", "DAZ_GLOSA")
            tableMapping.ColumnMappings.Add("DAZ_COLUMNA", "DAZ_COLUMNA")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [TESDAZ] WHERE (([DAZ_CODIGO] = @Original_DAZ_CODIGO) AND ((@IsNull_D"& _ 
                "AZ_MANDANTE = 1 AND [DAZ_MANDANTE] IS NULL) OR ([DAZ_MANDANTE] = @Original_DAZ_M"& _ 
                "ANDANTE)) AND ((@IsNull_DAZ_SOCIEDAD = 1 AND [DAZ_SOCIEDAD] IS NULL) OR ([DAZ_SO"& _ 
                "CIEDAD] = @Original_DAZ_SOCIEDAD)) AND ((@IsNull_DAZ_DOCCONT = 1 AND [DAZ_DOCCON"& _ 
                "T] IS NULL) OR ([DAZ_DOCCONT] = @Original_DAZ_DOCCONT)) AND ((@IsNull_DAZ_EJERCI"& _ 
                "CIO = 1 AND [DAZ_EJERCICIO] IS NULL) OR ([DAZ_EJERCICIO] = @Original_DAZ_EJERCIC"& _ 
                "IO)) AND ((@IsNull_DAZ_CLASEDOC = 1 AND [DAZ_CLASEDOC] IS NULL) OR ([DAZ_CLASEDO"& _ 
                "C] = @Original_DAZ_CLASEDOC)) AND ((@IsNull_DAZ_CUENTABANCO = 1 AND [DAZ_CUENTAB"& _ 
                "ANCO] IS NULL) OR ([DAZ_CUENTABANCO] = @Original_DAZ_CUENTABANCO)) AND ((@IsNull"& _ 
                "_DAZ_MONTO = 1 AND [DAZ_MONTO] IS NULL) OR ([DAZ_MONTO] = @Original_DAZ_MONTO)) "& _ 
                "AND ((@IsNull_DAZ_MONTOMON = 1 AND [DAZ_MONTOMON] IS NULL) OR ([DAZ_MONTOMON] = "& _ 
                "@Original_DAZ_MONTOMON)) AND ((@IsNull_DAZ_MONEDA = 1 AND [DAZ_MONEDA] IS NULL) "& _ 
                "OR ([DAZ_MONEDA] = @Original_DAZ_MONEDA)) AND ((@IsNull_DAZ_CONCEPTO = 1 AND [DA"& _ 
                "Z_CONCEPTO] IS NULL) OR ([DAZ_CONCEPTO] = @Original_DAZ_CONCEPTO)) AND ((@IsNull"& _ 
                "_DAZ_POSICION = 1 AND [DAZ_POSICION] IS NULL) OR ([DAZ_POSICION] = @Original_DAZ"& _ 
                "_POSICION)) AND ((@IsNull_DAZ_CAJA = 1 AND [DAZ_CAJA] IS NULL) OR ([DAZ_CAJA] = "& _ 
                "@Original_DAZ_CAJA)) AND ((@IsNull_DAZ_FECHADOC = 1 AND [DAZ_FECHADOC] IS NULL) "& _ 
                "OR ([DAZ_FECHADOC] = @Original_DAZ_FECHADOC)) AND ((@IsNull_DAZ_TEXTOPOS = 1 AND"& _ 
                " [DAZ_TEXTOPOS] IS NULL) OR ([DAZ_TEXTOPOS] = @Original_DAZ_TEXTOPOS)) AND ((@Is"& _ 
                "Null_DAZ_FECHAz = 1 AND [DAZ_FECHAz] IS NULL) OR ([DAZ_FECHAz] = @Original_DAZ_F"& _ 
                "ECHAz)) AND ((@IsNull_DAZ_MEDIOPAGO = 1 AND [DAZ_MEDIOPAGO] IS NULL) OR ([DAZ_ME"& _ 
                "DIOPAGO] = @Original_DAZ_MEDIOPAGO)) AND ((@IsNull_DAZ_RETENCION = 1 AND [DAZ_RE"& _ 
                "TENCION] IS NULL) OR ([DAZ_RETENCION] = @Original_DAZ_RETENCION)) AND ((@IsNull_"& _ 
                "DAZ_FECHADEP = 1 AND [DAZ_FECHADEP] IS NULL) OR ([DAZ_FECHADEP] = @Original_DAZ_"& _ 
                "FECHADEP)) AND ((@IsNull_DAZ_DIAS = 1 AND [DAZ_DIAS] IS NULL) OR ([DAZ_DIAS] = @"& _ 
                "Original_DAZ_DIAS)) AND ((@IsNull_DAZ_UNIDAD = 1 AND [DAZ_UNIDAD] IS NULL) OR (["& _ 
                "DAZ_UNIDAD] = @Original_DAZ_UNIDAD)) AND ((@IsNull_DAZ_VIA = 1 AND [DAZ_VIA] IS "& _ 
                "NULL) OR ([DAZ_VIA] = @Original_DAZ_VIA)) AND ((@IsNull_DAZ_CLAVEBANCO = 1 AND ["& _ 
                "DAZ_CLAVEBANCO] IS NULL) OR ([DAZ_CLAVEBANCO] = @Original_DAZ_CLAVEBANCO)) AND ("& _ 
                "(@IsNull_DAZ_ESTATUS = 1 AND [DAZ_ESTATUS] IS NULL) OR ([DAZ_ESTATUS] = @Origina"& _ 
                "l_DAZ_ESTATUS)) AND ((@IsNull_DAZ_ENVIADOBANCO = 1 AND [DAZ_ENVIADOBANCO] IS NUL"& _ 
                "L) OR ([DAZ_ENVIADOBANCO] = @Original_DAZ_ENVIADOBANCO)) AND ((@IsNull_DAZ_ANULA"& _ 
                "DO = 1 AND [DAZ_ANULADO] IS NULL) OR ([DAZ_ANULADO] = @Original_DAZ_ANULADO)) AN"& _ 
                "D ((@IsNull_DAZ_FECHAANU = 1 AND [DAZ_FECHAANU] IS NULL) OR ([DAZ_FECHAANU] = @O"& _ 
                "riginal_DAZ_FECHAANU)) AND ((@IsNull_DAZ_ESTADO = 1 AND [DAZ_ESTADO] IS NULL) OR"& _ 
                " ([DAZ_ESTADO] = @Original_DAZ_ESTADO)) AND ((@IsNull_PLA_CODIGO = 1 AND [PLA_CO"& _ 
                "DIGO] IS NULL) OR ([PLA_CODIGO] = @Original_PLA_CODIGO)) AND ((@IsNull_DAZ_FECHA"& _ 
                "DIS = 1 AND [DAZ_FECHADIS] IS NULL) OR ([DAZ_FECHADIS] = @Original_DAZ_FECHADIS)"& _ 
                ") AND ((@IsNull_DAZ_GLOSA = 1 AND [DAZ_GLOSA] IS NULL) OR ([DAZ_GLOSA] = @Origin"& _ 
                "al_DAZ_GLOSA)) AND ((@IsNull_DAZ_COLUMNA = 1 AND [DAZ_COLUMNA] IS NULL) OR ([DAZ"& _ 
                "_COLUMNA] = @Original_DAZ_COLUMNA)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_MANDANTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MANDANTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_MANDANTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DAZ_MANDANTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_SOCIEDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_SOCIEDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_SOCIEDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_SOCIEDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_DOCCONT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DOCCONT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_DOCCONT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DOCCONT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_EJERCICIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_EJERCICIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_EJERCICIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DAZ_EJERCICIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CLASEDOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLASEDOC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CLASEDOC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLASEDOC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CUENTABANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CUENTABANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_MONTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MONTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_MONTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DAZ_MONTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_MONTOMON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MONTOMON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_MONTOMON", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DAZ_MONTOMON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_MONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_MONEDA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CONCEPTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CONCEPTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CONCEPTO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CONCEPTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_POSICION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_POSICION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_POSICION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_POSICION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CAJA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CAJA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_FECHADOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADOC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_FECHADOC", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADOC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_TEXTOPOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_TEXTOPOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_TEXTOPOS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_TEXTOPOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_FECHAz", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAz", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_FECHAz", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAz", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_MEDIOPAGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MEDIOPAGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_MEDIOPAGO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MEDIOPAGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_RETENCION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_RETENCION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_RETENCION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_RETENCION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_FECHADEP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADEP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_FECHADEP", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADEP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_DIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DIAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_DIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_UNIDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_UNIDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_UNIDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_UNIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_VIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_VIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_VIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_VIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CLAVEBANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLAVEBANCO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CLAVEBANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLAVEBANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_ESTATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_ESTATUS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_ENVIADOBANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ENVIADOBANCO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_ENVIADOBANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ENVIADOBANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_ANULADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ANULADO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_ANULADO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ANULADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_FECHAANU", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAANU", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_FECHAANU", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAANU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTADO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_ESTADO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PLA_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PLA_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_FECHADIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_FECHADIS", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_GLOSA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_GLOSA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_GLOSA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_GLOSA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_COLUMNA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_COLUMNA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_COLUMNA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_COLUMNA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [TESDAZ] ([DAZ_MANDANTE], [DAZ_SOCIEDAD], [DAZ_DOCCONT], [DAZ_EJERCIC"& _ 
                "IO], [DAZ_CLASEDOC], [DAZ_CUENTABANCO], [DAZ_MONTO], [DAZ_MONTOMON], [DAZ_MONEDA"& _ 
                "], [DAZ_CONCEPTO], [DAZ_POSICION], [DAZ_CAJA], [DAZ_FECHADOC], [DAZ_TEXTOPOS], ["& _ 
                "DAZ_FECHAz], [DAZ_MEDIOPAGO], [DAZ_RETENCION], [DAZ_FECHADEP], [DAZ_DIAS], [DAZ_"& _ 
                "UNIDAD], [DAZ_VIA], [DAZ_CLAVEBANCO], [DAZ_ESTATUS], [DAZ_ENVIADOBANCO], [DAZ_AN"& _ 
                "ULADO], [DAZ_FECHAANU], [DAZ_ESTADO], [PLA_CODIGO], [DAZ_FECHADIS], [DAZ_GLOSA],"& _ 
                " [DAZ_COLUMNA]) VALUES (@DAZ_MANDANTE, @DAZ_SOCIEDAD, @DAZ_DOCCONT, @DAZ_EJERCIC"& _ 
                "IO, @DAZ_CLASEDOC, @DAZ_CUENTABANCO, @DAZ_MONTO, @DAZ_MONTOMON, @DAZ_MONEDA, @DA"& _ 
                "Z_CONCEPTO, @DAZ_POSICION, @DAZ_CAJA, @DAZ_FECHADOC, @DAZ_TEXTOPOS, @DAZ_FECHAz,"& _ 
                " @DAZ_MEDIOPAGO, @DAZ_RETENCION, @DAZ_FECHADEP, @DAZ_DIAS, @DAZ_UNIDAD, @DAZ_VIA"& _ 
                ", @DAZ_CLAVEBANCO, @DAZ_ESTATUS, @DAZ_ENVIADOBANCO, @DAZ_ANULADO, @DAZ_FECHAANU,"& _ 
                " @DAZ_ESTADO, @PLA_CODIGO, @DAZ_FECHADIS, @DAZ_GLOSA, @DAZ_COLUMNA);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DAZ"& _ 
                "_CODIGO, DAZ_MANDANTE, DAZ_SOCIEDAD, DAZ_DOCCONT, DAZ_EJERCICIO, DAZ_CLASEDOC, D"& _ 
                "AZ_CUENTABANCO, DAZ_MONTO, DAZ_MONTOMON, DAZ_MONEDA, DAZ_CONCEPTO, DAZ_POSICION,"& _ 
                " DAZ_CAJA, DAZ_FECHADOC, DAZ_TEXTOPOS, DAZ_FECHAz, DAZ_MEDIOPAGO, DAZ_RETENCION,"& _ 
                " DAZ_FECHADEP, DAZ_DIAS, DAZ_UNIDAD, DAZ_VIA, DAZ_CLAVEBANCO, DAZ_ESTATUS, DAZ_E"& _ 
                "NVIADOBANCO, DAZ_ANULADO, DAZ_FECHAANU, DAZ_ESTADO, PLA_CODIGO, DAZ_FECHADIS, DA"& _ 
                "Z_GLOSA, DAZ_COLUMNA FROM TESDAZ WHERE (DAZ_CODIGO = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_MANDANTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DAZ_MANDANTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_SOCIEDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_SOCIEDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_DOCCONT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DOCCONT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_EJERCICIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DAZ_EJERCICIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CLASEDOC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLASEDOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CUENTABANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_MONTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DAZ_MONTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_MONTOMON", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DAZ_MONTOMON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_MONEDA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CONCEPTO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CONCEPTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_POSICION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_POSICION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CAJA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_FECHADOC", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_TEXTOPOS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_TEXTOPOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_FECHAz", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAz", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_MEDIOPAGO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MEDIOPAGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_RETENCION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_RETENCION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_FECHADEP", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADEP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_DIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_UNIDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_UNIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_VIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_VIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CLAVEBANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLAVEBANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_ESTATUS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_ENVIADOBANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ENVIADOBANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_ANULADO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ANULADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_FECHAANU", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAANU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_ESTADO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLA_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_FECHADIS", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_GLOSA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_GLOSA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_COLUMNA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_COLUMNA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [TESDAZ] SET [DAZ_MANDANTE] = @DAZ_MANDANTE, [DAZ_SOCIEDAD] = @DAZ_SOCIEDA"& _ 
                "D, [DAZ_DOCCONT] = @DAZ_DOCCONT, [DAZ_EJERCICIO] = @DAZ_EJERCICIO, [DAZ_CLASEDOC"& _ 
                "] = @DAZ_CLASEDOC, [DAZ_CUENTABANCO] = @DAZ_CUENTABANCO, [DAZ_MONTO] = @DAZ_MONT"& _ 
                "O, [DAZ_MONTOMON] = @DAZ_MONTOMON, [DAZ_MONEDA] = @DAZ_MONEDA, [DAZ_CONCEPTO] = "& _ 
                "@DAZ_CONCEPTO, [DAZ_POSICION] = @DAZ_POSICION, [DAZ_CAJA] = @DAZ_CAJA, [DAZ_FECH"& _ 
                "ADOC] = @DAZ_FECHADOC, [DAZ_TEXTOPOS] = @DAZ_TEXTOPOS, [DAZ_FECHAz] = @DAZ_FECHA"& _ 
                "z, [DAZ_MEDIOPAGO] = @DAZ_MEDIOPAGO, [DAZ_RETENCION] = @DAZ_RETENCION, [DAZ_FECH"& _ 
                "ADEP] = @DAZ_FECHADEP, [DAZ_DIAS] = @DAZ_DIAS, [DAZ_UNIDAD] = @DAZ_UNIDAD, [DAZ_"& _ 
                "VIA] = @DAZ_VIA, [DAZ_CLAVEBANCO] = @DAZ_CLAVEBANCO, [DAZ_ESTATUS] = @DAZ_ESTATU"& _ 
                "S, [DAZ_ENVIADOBANCO] = @DAZ_ENVIADOBANCO, [DAZ_ANULADO] = @DAZ_ANULADO, [DAZ_FE"& _ 
                "CHAANU] = @DAZ_FECHAANU, [DAZ_ESTADO] = @DAZ_ESTADO, [PLA_CODIGO] = @PLA_CODIGO,"& _ 
                " [DAZ_FECHADIS] = @DAZ_FECHADIS, [DAZ_GLOSA] = @DAZ_GLOSA, [DAZ_COLUMNA] = @DAZ_"& _ 
                "COLUMNA WHERE (([DAZ_CODIGO] = @Original_DAZ_CODIGO) AND ((@IsNull_DAZ_MANDANTE "& _ 
                "= 1 AND [DAZ_MANDANTE] IS NULL) OR ([DAZ_MANDANTE] = @Original_DAZ_MANDANTE)) AN"& _ 
                "D ((@IsNull_DAZ_SOCIEDAD = 1 AND [DAZ_SOCIEDAD] IS NULL) OR ([DAZ_SOCIEDAD] = @O"& _ 
                "riginal_DAZ_SOCIEDAD)) AND ((@IsNull_DAZ_DOCCONT = 1 AND [DAZ_DOCCONT] IS NULL) "& _ 
                "OR ([DAZ_DOCCONT] = @Original_DAZ_DOCCONT)) AND ((@IsNull_DAZ_EJERCICIO = 1 AND "& _ 
                "[DAZ_EJERCICIO] IS NULL) OR ([DAZ_EJERCICIO] = @Original_DAZ_EJERCICIO)) AND ((@"& _ 
                "IsNull_DAZ_CLASEDOC = 1 AND [DAZ_CLASEDOC] IS NULL) OR ([DAZ_CLASEDOC] = @Origin"& _ 
                "al_DAZ_CLASEDOC)) AND ((@IsNull_DAZ_CUENTABANCO = 1 AND [DAZ_CUENTABANCO] IS NUL"& _ 
                "L) OR ([DAZ_CUENTABANCO] = @Original_DAZ_CUENTABANCO)) AND ((@IsNull_DAZ_MONTO ="& _ 
                " 1 AND [DAZ_MONTO] IS NULL) OR ([DAZ_MONTO] = @Original_DAZ_MONTO)) AND ((@IsNul"& _ 
                "l_DAZ_MONTOMON = 1 AND [DAZ_MONTOMON] IS NULL) OR ([DAZ_MONTOMON] = @Original_DA"& _ 
                "Z_MONTOMON)) AND ((@IsNull_DAZ_MONEDA = 1 AND [DAZ_MONEDA] IS NULL) OR ([DAZ_MON"& _ 
                "EDA] = @Original_DAZ_MONEDA)) AND ((@IsNull_DAZ_CONCEPTO = 1 AND [DAZ_CONCEPTO] "& _ 
                "IS NULL) OR ([DAZ_CONCEPTO] = @Original_DAZ_CONCEPTO)) AND ((@IsNull_DAZ_POSICIO"& _ 
                "N = 1 AND [DAZ_POSICION] IS NULL) OR ([DAZ_POSICION] = @Original_DAZ_POSICION)) "& _ 
                "AND ((@IsNull_DAZ_CAJA = 1 AND [DAZ_CAJA] IS NULL) OR ([DAZ_CAJA] = @Original_DA"& _ 
                "Z_CAJA)) AND ((@IsNull_DAZ_FECHADOC = 1 AND [DAZ_FECHADOC] IS NULL) OR ([DAZ_FEC"& _ 
                "HADOC] = @Original_DAZ_FECHADOC)) AND ((@IsNull_DAZ_TEXTOPOS = 1 AND [DAZ_TEXTOP"& _ 
                "OS] IS NULL) OR ([DAZ_TEXTOPOS] = @Original_DAZ_TEXTOPOS)) AND ((@IsNull_DAZ_FEC"& _ 
                "HAz = 1 AND [DAZ_FECHAz] IS NULL) OR ([DAZ_FECHAz] = @Original_DAZ_FECHAz)) AND "& _ 
                "((@IsNull_DAZ_MEDIOPAGO = 1 AND [DAZ_MEDIOPAGO] IS NULL) OR ([DAZ_MEDIOPAGO] = @"& _ 
                "Original_DAZ_MEDIOPAGO)) AND ((@IsNull_DAZ_RETENCION = 1 AND [DAZ_RETENCION] IS "& _ 
                "NULL) OR ([DAZ_RETENCION] = @Original_DAZ_RETENCION)) AND ((@IsNull_DAZ_FECHADEP"& _ 
                " = 1 AND [DAZ_FECHADEP] IS NULL) OR ([DAZ_FECHADEP] = @Original_DAZ_FECHADEP)) A"& _ 
                "ND ((@IsNull_DAZ_DIAS = 1 AND [DAZ_DIAS] IS NULL) OR ([DAZ_DIAS] = @Original_DAZ"& _ 
                "_DIAS)) AND ((@IsNull_DAZ_UNIDAD = 1 AND [DAZ_UNIDAD] IS NULL) OR ([DAZ_UNIDAD] "& _ 
                "= @Original_DAZ_UNIDAD)) AND ((@IsNull_DAZ_VIA = 1 AND [DAZ_VIA] IS NULL) OR ([D"& _ 
                "AZ_VIA] = @Original_DAZ_VIA)) AND ((@IsNull_DAZ_CLAVEBANCO = 1 AND [DAZ_CLAVEBAN"& _ 
                "CO] IS NULL) OR ([DAZ_CLAVEBANCO] = @Original_DAZ_CLAVEBANCO)) AND ((@IsNull_DAZ"& _ 
                "_ESTATUS = 1 AND [DAZ_ESTATUS] IS NULL) OR ([DAZ_ESTATUS] = @Original_DAZ_ESTATU"& _ 
                "S)) AND ((@IsNull_DAZ_ENVIADOBANCO = 1 AND [DAZ_ENVIADOBANCO] IS NULL) OR ([DAZ_"& _ 
                "ENVIADOBANCO] = @Original_DAZ_ENVIADOBANCO)) AND ((@IsNull_DAZ_ANULADO = 1 AND ["& _ 
                "DAZ_ANULADO] IS NULL) OR ([DAZ_ANULADO] = @Original_DAZ_ANULADO)) AND ((@IsNull_"& _ 
                "DAZ_FECHAANU = 1 AND [DAZ_FECHAANU] IS NULL) OR ([DAZ_FECHAANU] = @Original_DAZ_"& _ 
                "FECHAANU)) AND ((@IsNull_DAZ_ESTADO = 1 AND [DAZ_ESTADO] IS NULL) OR ([DAZ_ESTAD"& _ 
                "O] = @Original_DAZ_ESTADO)) AND ((@IsNull_PLA_CODIGO = 1 AND [PLA_CODIGO] IS NUL"& _ 
                "L) OR ([PLA_CODIGO] = @Original_PLA_CODIGO)) AND ((@IsNull_DAZ_FECHADIS = 1 AND "& _ 
                "[DAZ_FECHADIS] IS NULL) OR ([DAZ_FECHADIS] = @Original_DAZ_FECHADIS)) AND ((@IsN"& _ 
                "ull_DAZ_GLOSA = 1 AND [DAZ_GLOSA] IS NULL) OR ([DAZ_GLOSA] = @Original_DAZ_GLOSA"& _ 
                ")) AND ((@IsNull_DAZ_COLUMNA = 1 AND [DAZ_COLUMNA] IS NULL) OR ([DAZ_COLUMNA] = "& _ 
                "@Original_DAZ_COLUMNA)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DAZ_CODIGO, DAZ_MANDANTE, DAZ_SOCIEDAD, DAZ_DO"& _ 
                "CCONT, DAZ_EJERCICIO, DAZ_CLASEDOC, DAZ_CUENTABANCO, DAZ_MONTO, DAZ_MONTOMON, DA"& _ 
                "Z_MONEDA, DAZ_CONCEPTO, DAZ_POSICION, DAZ_CAJA, DAZ_FECHADOC, DAZ_TEXTOPOS, DAZ_"& _ 
                "FECHAz, DAZ_MEDIOPAGO, DAZ_RETENCION, DAZ_FECHADEP, DAZ_DIAS, DAZ_UNIDAD, DAZ_VI"& _ 
                "A, DAZ_CLAVEBANCO, DAZ_ESTATUS, DAZ_ENVIADOBANCO, DAZ_ANULADO, DAZ_FECHAANU, DAZ"& _ 
                "_ESTADO, PLA_CODIGO, DAZ_FECHADIS, DAZ_GLOSA, DAZ_COLUMNA FROM TESDAZ WHERE (DAZ"& _ 
                "_CODIGO = @DAZ_CODIGO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_MANDANTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DAZ_MANDANTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_SOCIEDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_SOCIEDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_DOCCONT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DOCCONT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_EJERCICIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DAZ_EJERCICIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CLASEDOC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLASEDOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CUENTABANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_MONTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DAZ_MONTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_MONTOMON", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DAZ_MONTOMON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_MONEDA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CONCEPTO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CONCEPTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_POSICION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_POSICION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CAJA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_FECHADOC", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_TEXTOPOS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_TEXTOPOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_FECHAz", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAz", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_MEDIOPAGO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MEDIOPAGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_RETENCION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_RETENCION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_FECHADEP", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADEP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_DIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_UNIDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_UNIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_VIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_VIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CLAVEBANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLAVEBANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_ESTATUS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_ENVIADOBANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ENVIADOBANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_ANULADO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ANULADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_FECHAANU", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAANU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_ESTADO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLA_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_FECHADIS", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_GLOSA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_GLOSA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_COLUMNA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_COLUMNA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_MANDANTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MANDANTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_MANDANTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DAZ_MANDANTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_SOCIEDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_SOCIEDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_SOCIEDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_SOCIEDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_DOCCONT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DOCCONT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_DOCCONT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DOCCONT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_EJERCICIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_EJERCICIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_EJERCICIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DAZ_EJERCICIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CLASEDOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLASEDOC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CLASEDOC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLASEDOC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CUENTABANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CUENTABANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_MONTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MONTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_MONTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DAZ_MONTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_MONTOMON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MONTOMON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_MONTOMON", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DAZ_MONTOMON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_MONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_MONEDA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CONCEPTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CONCEPTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CONCEPTO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CONCEPTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_POSICION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_POSICION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_POSICION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_POSICION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CAJA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CAJA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_FECHADOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADOC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_FECHADOC", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADOC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_TEXTOPOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_TEXTOPOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_TEXTOPOS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_TEXTOPOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_FECHAz", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAz", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_FECHAz", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAz", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_MEDIOPAGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MEDIOPAGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_MEDIOPAGO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MEDIOPAGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_RETENCION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_RETENCION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_RETENCION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_RETENCION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_FECHADEP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADEP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_FECHADEP", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADEP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_DIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DIAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_DIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_UNIDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_UNIDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_UNIDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_UNIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_VIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_VIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_VIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_VIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CLAVEBANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLAVEBANCO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CLAVEBANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLAVEBANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_ESTATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_ESTATUS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_ENVIADOBANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ENVIADOBANCO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_ENVIADOBANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ENVIADOBANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_ANULADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ANULADO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_ANULADO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ANULADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_FECHAANU", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAANU", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_FECHAANU", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAANU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTADO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_ESTADO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PLA_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PLA_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_FECHADIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_FECHADIS", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_GLOSA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_GLOSA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_GLOSA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_GLOSA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_COLUMNA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_COLUMNA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_COLUMNA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_COLUMNA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CODIGO", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT TESDAZ.* FROM TESDAZ WHERE (PLA_CODIGO IS NULL) AND (DAZ_ANULADO <> 'S') A"& _ 
                "ND (DAZ_CLASEDOC = @ClaseDoc) AND (DAZ_MONEDA = 'CLP') AND (DAZ_cuentaBANCO IN ("& _ 
                "@Banco)) AND (DAZ_MANDANTE = @Mandante)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ClaseDoc", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLASEDOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Banco", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Mandante", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "DAZ_MANDANTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillbyClasedocBancoMandante(ByVal dataTable As dsWALPPE.PartidasPendientesSAPDataTable, ByVal ClaseDoc As String, ByVal Banco As String, ByVal Mandante As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (ClaseDoc Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(ClaseDoc,String)
            End If
            If (Banco Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Banco")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Banco,String)
            End If
            If (Mandante.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Mandante.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetDatabyClasedocBancoMandante(ByVal ClaseDoc As String, ByVal Banco As String, ByVal Mandante As Global.System.Nullable(Of Decimal)) As dsWALPPE.PartidasPendientesSAPDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (ClaseDoc Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(ClaseDoc,String)
            End If
            If (Banco Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Banco")
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Banco,String)
            End If
            If (Mandante.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Mandante.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsWALPPE.PartidasPendientesSAPDataTable = New dsWALPPE.PartidasPendientesSAPDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsWALPPE.PartidasPendientesSAPDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsWALPPE) As Integer
            Return Me.Adapter.Update(dataSet, "PartidasPendientesSAP")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_DAZ_CODIGO As Long,  _
                    ByVal Original_DAZ_MANDANTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_SOCIEDAD As String,  _
                    ByVal Original_DAZ_DOCCONT As String,  _
                    ByVal Original_DAZ_EJERCICIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_CLASEDOC As String,  _
                    ByVal Original_DAZ_CUENTABANCO As String,  _
                    ByVal Original_DAZ_MONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_MONTOMON As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_MONEDA As String,  _
                    ByVal Original_DAZ_CONCEPTO As String,  _
                    ByVal Original_DAZ_POSICION As String,  _
                    ByVal Original_DAZ_CAJA As String,  _
                    ByVal Original_DAZ_FECHADOC As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_TEXTOPOS As String,  _
                    ByVal Original_DAZ_FECHAz As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_MEDIOPAGO As String,  _
                    ByVal Original_DAZ_RETENCION As String,  _
                    ByVal Original_DAZ_FECHADEP As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_DIAS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DAZ_UNIDAD As String,  _
                    ByVal Original_DAZ_VIA As String,  _
                    ByVal Original_DAZ_CLAVEBANCO As String,  _
                    ByVal Original_DAZ_ESTATUS As String,  _
                    ByVal Original_DAZ_ENVIADOBANCO As String,  _
                    ByVal Original_DAZ_ANULADO As String,  _
                    ByVal Original_DAZ_FECHAANU As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_ESTADO As String,  _
                    ByVal Original_PLA_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal Original_DAZ_FECHADIS As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_GLOSA As String,  _
                    ByVal Original_DAZ_COLUMNA As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_DAZ_CODIGO,Long)
            If (Original_DAZ_MANDANTE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_DAZ_MANDANTE.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_SOCIEDAD Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_DAZ_SOCIEDAD,String)
            End If
            If (Original_DAZ_DOCCONT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_DAZ_DOCCONT,String)
            End If
            If (Original_DAZ_EJERCICIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_DAZ_EJERCICIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_CLASEDOC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_DAZ_CLASEDOC,String)
            End If
            If (Original_DAZ_CUENTABANCO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_DAZ_CUENTABANCO,String)
            End If
            If (Original_DAZ_MONTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_DAZ_MONTO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_MONTOMON.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_DAZ_MONTOMON.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_MONEDA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_DAZ_MONEDA,String)
            End If
            If (Original_DAZ_CONCEPTO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_DAZ_CONCEPTO,String)
            End If
            If (Original_DAZ_POSICION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_DAZ_POSICION,String)
            End If
            If (Original_DAZ_CAJA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_DAZ_CAJA,String)
            End If
            If (Original_DAZ_FECHADOC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_DAZ_FECHADOC.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_TEXTOPOS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_DAZ_TEXTOPOS,String)
            End If
            If (Original_DAZ_FECHAz.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_DAZ_FECHAz.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_MEDIOPAGO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_DAZ_MEDIOPAGO,String)
            End If
            If (Original_DAZ_RETENCION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_DAZ_RETENCION,String)
            End If
            If (Original_DAZ_FECHADEP.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_DAZ_FECHADEP.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_DIAS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_DAZ_DIAS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_UNIDAD Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_DAZ_UNIDAD,String)
            End If
            If (Original_DAZ_VIA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_DAZ_VIA,String)
            End If
            If (Original_DAZ_CLAVEBANCO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_DAZ_CLAVEBANCO,String)
            End If
            If (Original_DAZ_ESTATUS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_DAZ_ESTATUS,String)
            End If
            If (Original_DAZ_ENVIADOBANCO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_DAZ_ENVIADOBANCO,String)
            End If
            If (Original_DAZ_ANULADO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_DAZ_ANULADO,String)
            End If
            If (Original_DAZ_FECHAANU.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_DAZ_FECHAANU.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_ESTADO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_DAZ_ESTADO,String)
            End If
            If (Original_PLA_CODIGO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_PLA_CODIGO.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_FECHADIS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_DAZ_FECHADIS.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_GLOSA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_DAZ_GLOSA,String)
            End If
            If (Original_DAZ_COLUMNA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_DAZ_COLUMNA.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal DAZ_MANDANTE As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_SOCIEDAD As String,  _
                    ByVal DAZ_DOCCONT As String,  _
                    ByVal DAZ_EJERCICIO As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_CLASEDOC As String,  _
                    ByVal DAZ_CUENTABANCO As String,  _
                    ByVal DAZ_MONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_MONTOMON As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_MONEDA As String,  _
                    ByVal DAZ_CONCEPTO As String,  _
                    ByVal DAZ_POSICION As String,  _
                    ByVal DAZ_CAJA As String,  _
                    ByVal DAZ_FECHADOC As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_TEXTOPOS As String,  _
                    ByVal DAZ_FECHAz As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_MEDIOPAGO As String,  _
                    ByVal DAZ_RETENCION As String,  _
                    ByVal DAZ_FECHADEP As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_DIAS As Global.System.Nullable(Of Integer),  _
                    ByVal DAZ_UNIDAD As String,  _
                    ByVal DAZ_VIA As String,  _
                    ByVal DAZ_CLAVEBANCO As String,  _
                    ByVal DAZ_ESTATUS As String,  _
                    ByVal DAZ_ENVIADOBANCO As String,  _
                    ByVal DAZ_ANULADO As String,  _
                    ByVal DAZ_FECHAANU As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_ESTADO As String,  _
                    ByVal PLA_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal DAZ_FECHADIS As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_GLOSA As String,  _
                    ByVal DAZ_COLUMNA As Global.System.Nullable(Of Integer)) As Integer
            If (DAZ_MANDANTE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(DAZ_MANDANTE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (DAZ_SOCIEDAD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DAZ_SOCIEDAD,String)
            End If
            If (DAZ_DOCCONT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DAZ_DOCCONT,String)
            End If
            If (DAZ_EJERCICIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(DAZ_EJERCICIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (DAZ_CLASEDOC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(DAZ_CLASEDOC,String)
            End If
            If (DAZ_CUENTABANCO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DAZ_CUENTABANCO,String)
            End If
            If (DAZ_MONTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(DAZ_MONTO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (DAZ_MONTOMON.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(DAZ_MONTOMON.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (DAZ_MONEDA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(DAZ_MONEDA,String)
            End If
            If (DAZ_CONCEPTO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(DAZ_CONCEPTO,String)
            End If
            If (DAZ_POSICION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(DAZ_POSICION,String)
            End If
            If (DAZ_CAJA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(DAZ_CAJA,String)
            End If
            If (DAZ_FECHADOC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(DAZ_FECHADOC.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (DAZ_TEXTOPOS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(DAZ_TEXTOPOS,String)
            End If
            If (DAZ_FECHAz.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(DAZ_FECHAz.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (DAZ_MEDIOPAGO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(DAZ_MEDIOPAGO,String)
            End If
            If (DAZ_RETENCION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(DAZ_RETENCION,String)
            End If
            If (DAZ_FECHADEP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(DAZ_FECHADEP.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (DAZ_DIAS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(DAZ_DIAS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (DAZ_UNIDAD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(DAZ_UNIDAD,String)
            End If
            If (DAZ_VIA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(DAZ_VIA,String)
            End If
            If (DAZ_CLAVEBANCO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(DAZ_CLAVEBANCO,String)
            End If
            If (DAZ_ESTATUS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(DAZ_ESTATUS,String)
            End If
            If (DAZ_ENVIADOBANCO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(DAZ_ENVIADOBANCO,String)
            End If
            If (DAZ_ANULADO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(DAZ_ANULADO,String)
            End If
            If (DAZ_FECHAANU.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(DAZ_FECHAANU.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (DAZ_ESTADO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(DAZ_ESTADO,String)
            End If
            If (PLA_CODIGO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(PLA_CODIGO.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (DAZ_FECHADIS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(DAZ_FECHADIS.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (DAZ_GLOSA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(DAZ_GLOSA,String)
            End If
            If (DAZ_COLUMNA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(DAZ_COLUMNA.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal DAZ_MANDANTE As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_SOCIEDAD As String,  _
                    ByVal DAZ_DOCCONT As String,  _
                    ByVal DAZ_EJERCICIO As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_CLASEDOC As String,  _
                    ByVal DAZ_CUENTABANCO As String,  _
                    ByVal DAZ_MONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_MONTOMON As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_MONEDA As String,  _
                    ByVal DAZ_CONCEPTO As String,  _
                    ByVal DAZ_POSICION As String,  _
                    ByVal DAZ_CAJA As String,  _
                    ByVal DAZ_FECHADOC As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_TEXTOPOS As String,  _
                    ByVal DAZ_FECHAz As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_MEDIOPAGO As String,  _
                    ByVal DAZ_RETENCION As String,  _
                    ByVal DAZ_FECHADEP As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_DIAS As Global.System.Nullable(Of Integer),  _
                    ByVal DAZ_UNIDAD As String,  _
                    ByVal DAZ_VIA As String,  _
                    ByVal DAZ_CLAVEBANCO As String,  _
                    ByVal DAZ_ESTATUS As String,  _
                    ByVal DAZ_ENVIADOBANCO As String,  _
                    ByVal DAZ_ANULADO As String,  _
                    ByVal DAZ_FECHAANU As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_ESTADO As String,  _
                    ByVal PLA_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal DAZ_FECHADIS As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_GLOSA As String,  _
                    ByVal DAZ_COLUMNA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DAZ_CODIGO As Long,  _
                    ByVal Original_DAZ_MANDANTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_SOCIEDAD As String,  _
                    ByVal Original_DAZ_DOCCONT As String,  _
                    ByVal Original_DAZ_EJERCICIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_CLASEDOC As String,  _
                    ByVal Original_DAZ_CUENTABANCO As String,  _
                    ByVal Original_DAZ_MONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_MONTOMON As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_MONEDA As String,  _
                    ByVal Original_DAZ_CONCEPTO As String,  _
                    ByVal Original_DAZ_POSICION As String,  _
                    ByVal Original_DAZ_CAJA As String,  _
                    ByVal Original_DAZ_FECHADOC As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_TEXTOPOS As String,  _
                    ByVal Original_DAZ_FECHAz As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_MEDIOPAGO As String,  _
                    ByVal Original_DAZ_RETENCION As String,  _
                    ByVal Original_DAZ_FECHADEP As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_DIAS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DAZ_UNIDAD As String,  _
                    ByVal Original_DAZ_VIA As String,  _
                    ByVal Original_DAZ_CLAVEBANCO As String,  _
                    ByVal Original_DAZ_ESTATUS As String,  _
                    ByVal Original_DAZ_ENVIADOBANCO As String,  _
                    ByVal Original_DAZ_ANULADO As String,  _
                    ByVal Original_DAZ_FECHAANU As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_ESTADO As String,  _
                    ByVal Original_PLA_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal Original_DAZ_FECHADIS As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_GLOSA As String,  _
                    ByVal Original_DAZ_COLUMNA As Global.System.Nullable(Of Integer),  _
                    ByVal DAZ_CODIGO As Long) As Integer
            If (DAZ_MANDANTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(DAZ_MANDANTE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (DAZ_SOCIEDAD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(DAZ_SOCIEDAD,String)
            End If
            If (DAZ_DOCCONT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DAZ_DOCCONT,String)
            End If
            If (DAZ_EJERCICIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DAZ_EJERCICIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (DAZ_CLASEDOC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(DAZ_CLASEDOC,String)
            End If
            If (DAZ_CUENTABANCO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(DAZ_CUENTABANCO,String)
            End If
            If (DAZ_MONTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(DAZ_MONTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (DAZ_MONTOMON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(DAZ_MONTOMON.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (DAZ_MONEDA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(DAZ_MONEDA,String)
            End If
            If (DAZ_CONCEPTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(DAZ_CONCEPTO,String)
            End If
            If (DAZ_POSICION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(DAZ_POSICION,String)
            End If
            If (DAZ_CAJA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(DAZ_CAJA,String)
            End If
            If (DAZ_FECHADOC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(DAZ_FECHADOC.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (DAZ_TEXTOPOS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(DAZ_TEXTOPOS,String)
            End If
            If (DAZ_FECHAz.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(DAZ_FECHAz.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (DAZ_MEDIOPAGO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(DAZ_MEDIOPAGO,String)
            End If
            If (DAZ_RETENCION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(DAZ_RETENCION,String)
            End If
            If (DAZ_FECHADEP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(DAZ_FECHADEP.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (DAZ_DIAS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(DAZ_DIAS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (DAZ_UNIDAD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(DAZ_UNIDAD,String)
            End If
            If (DAZ_VIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(DAZ_VIA,String)
            End If
            If (DAZ_CLAVEBANCO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(DAZ_CLAVEBANCO,String)
            End If
            If (DAZ_ESTATUS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(DAZ_ESTATUS,String)
            End If
            If (DAZ_ENVIADOBANCO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(DAZ_ENVIADOBANCO,String)
            End If
            If (DAZ_ANULADO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(DAZ_ANULADO,String)
            End If
            If (DAZ_FECHAANU.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(DAZ_FECHAANU.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (DAZ_ESTADO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(DAZ_ESTADO,String)
            End If
            If (PLA_CODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(PLA_CODIGO.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (DAZ_FECHADIS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(DAZ_FECHADIS.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (DAZ_GLOSA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(DAZ_GLOSA,String)
            End If
            If (DAZ_COLUMNA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(DAZ_COLUMNA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_DAZ_CODIGO,Long)
            If (Original_DAZ_MANDANTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_DAZ_MANDANTE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_SOCIEDAD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_DAZ_SOCIEDAD,String)
            End If
            If (Original_DAZ_DOCCONT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_DAZ_DOCCONT,String)
            End If
            If (Original_DAZ_EJERCICIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_DAZ_EJERCICIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_CLASEDOC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_DAZ_CLASEDOC,String)
            End If
            If (Original_DAZ_CUENTABANCO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_DAZ_CUENTABANCO,String)
            End If
            If (Original_DAZ_MONTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_DAZ_MONTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_MONTOMON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_DAZ_MONTOMON.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_MONEDA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_DAZ_MONEDA,String)
            End If
            If (Original_DAZ_CONCEPTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_DAZ_CONCEPTO,String)
            End If
            If (Original_DAZ_POSICION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_DAZ_POSICION,String)
            End If
            If (Original_DAZ_CAJA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_DAZ_CAJA,String)
            End If
            If (Original_DAZ_FECHADOC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_DAZ_FECHADOC.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_TEXTOPOS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_DAZ_TEXTOPOS,String)
            End If
            If (Original_DAZ_FECHAz.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_DAZ_FECHAz.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_MEDIOPAGO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_DAZ_MEDIOPAGO,String)
            End If
            If (Original_DAZ_RETENCION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_DAZ_RETENCION,String)
            End If
            If (Original_DAZ_FECHADEP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_DAZ_FECHADEP.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_DIAS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_DAZ_DIAS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_UNIDAD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_DAZ_UNIDAD,String)
            End If
            If (Original_DAZ_VIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_DAZ_VIA,String)
            End If
            If (Original_DAZ_CLAVEBANCO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_DAZ_CLAVEBANCO,String)
            End If
            If (Original_DAZ_ESTATUS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_DAZ_ESTATUS,String)
            End If
            If (Original_DAZ_ENVIADOBANCO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_DAZ_ENVIADOBANCO,String)
            End If
            If (Original_DAZ_ANULADO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_DAZ_ANULADO,String)
            End If
            If (Original_DAZ_FECHAANU.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_DAZ_FECHAANU.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_ESTADO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_DAZ_ESTADO,String)
            End If
            If (Original_PLA_CODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_PLA_CODIGO.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_FECHADIS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_DAZ_FECHADIS.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_GLOSA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_DAZ_GLOSA,String)
            End If
            If (Original_DAZ_COLUMNA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_DAZ_COLUMNA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(94).Value = CType(DAZ_CODIGO,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal DAZ_MANDANTE As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_SOCIEDAD As String,  _
                    ByVal DAZ_DOCCONT As String,  _
                    ByVal DAZ_EJERCICIO As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_CLASEDOC As String,  _
                    ByVal DAZ_CUENTABANCO As String,  _
                    ByVal DAZ_MONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_MONTOMON As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_MONEDA As String,  _
                    ByVal DAZ_CONCEPTO As String,  _
                    ByVal DAZ_POSICION As String,  _
                    ByVal DAZ_CAJA As String,  _
                    ByVal DAZ_FECHADOC As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_TEXTOPOS As String,  _
                    ByVal DAZ_FECHAz As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_MEDIOPAGO As String,  _
                    ByVal DAZ_RETENCION As String,  _
                    ByVal DAZ_FECHADEP As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_DIAS As Global.System.Nullable(Of Integer),  _
                    ByVal DAZ_UNIDAD As String,  _
                    ByVal DAZ_VIA As String,  _
                    ByVal DAZ_CLAVEBANCO As String,  _
                    ByVal DAZ_ESTATUS As String,  _
                    ByVal DAZ_ENVIADOBANCO As String,  _
                    ByVal DAZ_ANULADO As String,  _
                    ByVal DAZ_FECHAANU As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_ESTADO As String,  _
                    ByVal PLA_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal DAZ_FECHADIS As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_GLOSA As String,  _
                    ByVal DAZ_COLUMNA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DAZ_CODIGO As Long,  _
                    ByVal Original_DAZ_MANDANTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_SOCIEDAD As String,  _
                    ByVal Original_DAZ_DOCCONT As String,  _
                    ByVal Original_DAZ_EJERCICIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_CLASEDOC As String,  _
                    ByVal Original_DAZ_CUENTABANCO As String,  _
                    ByVal Original_DAZ_MONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_MONTOMON As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_MONEDA As String,  _
                    ByVal Original_DAZ_CONCEPTO As String,  _
                    ByVal Original_DAZ_POSICION As String,  _
                    ByVal Original_DAZ_CAJA As String,  _
                    ByVal Original_DAZ_FECHADOC As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_TEXTOPOS As String,  _
                    ByVal Original_DAZ_FECHAz As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_MEDIOPAGO As String,  _
                    ByVal Original_DAZ_RETENCION As String,  _
                    ByVal Original_DAZ_FECHADEP As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_DIAS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DAZ_UNIDAD As String,  _
                    ByVal Original_DAZ_VIA As String,  _
                    ByVal Original_DAZ_CLAVEBANCO As String,  _
                    ByVal Original_DAZ_ESTATUS As String,  _
                    ByVal Original_DAZ_ENVIADOBANCO As String,  _
                    ByVal Original_DAZ_ANULADO As String,  _
                    ByVal Original_DAZ_FECHAANU As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_ESTADO As String,  _
                    ByVal Original_PLA_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal Original_DAZ_FECHADIS As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_GLOSA As String,  _
                    ByVal Original_DAZ_COLUMNA As Global.System.Nullable(Of Integer)) As Integer
            Return Me.Update(DAZ_MANDANTE, DAZ_SOCIEDAD, DAZ_DOCCONT, DAZ_EJERCICIO, DAZ_CLASEDOC, DAZ_CUENTABANCO, DAZ_MONTO, DAZ_MONTOMON, DAZ_MONEDA, DAZ_CONCEPTO, DAZ_POSICION, DAZ_CAJA, DAZ_FECHADOC, DAZ_TEXTOPOS, DAZ_FECHAz, DAZ_MEDIOPAGO, DAZ_RETENCION, DAZ_FECHADEP, DAZ_DIAS, DAZ_UNIDAD, DAZ_VIA, DAZ_CLAVEBANCO, DAZ_ESTATUS, DAZ_ENVIADOBANCO, DAZ_ANULADO, DAZ_FECHAANU, DAZ_ESTADO, PLA_CODIGO, DAZ_FECHADIS, DAZ_GLOSA, DAZ_COLUMNA, Original_DAZ_CODIGO, Original_DAZ_MANDANTE, Original_DAZ_SOCIEDAD, Original_DAZ_DOCCONT, Original_DAZ_EJERCICIO, Original_DAZ_CLASEDOC, Original_DAZ_CUENTABANCO, Original_DAZ_MONTO, Original_DAZ_MONTOMON, Original_DAZ_MONEDA, Original_DAZ_CONCEPTO, Original_DAZ_POSICION, Original_DAZ_CAJA, Original_DAZ_FECHADOC, Original_DAZ_TEXTOPOS, Original_DAZ_FECHAz, Original_DAZ_MEDIOPAGO, Original_DAZ_RETENCION, Original_DAZ_FECHADEP, Original_DAZ_DIAS, Original_DAZ_UNIDAD, Original_DAZ_VIA, Original_DAZ_CLAVEBANCO, Original_DAZ_ESTATUS, Original_DAZ_ENVIADOBANCO, Original_DAZ_ANULADO, Original_DAZ_FECHAANU, Original_DAZ_ESTADO, Original_PLA_CODIGO, Original_DAZ_FECHADIS, Original_DAZ_GLOSA, Original_DAZ_COLUMNA, Original_DAZ_CODIGO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TESDOPTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TESDOP"
            tableMapping.ColumnMappings.Add("DOP_CODIGO", "DOP_CODIGO")
            tableMapping.ColumnMappings.Add("DPL_CODIGO", "DPL_CODIGO")
            tableMapping.ColumnMappings.Add("COL_CODIGO", "COL_CODIGO")
            tableMapping.ColumnMappings.Add("DOP_MONTO", "DOP_MONTO")
            tableMapping.ColumnMappings.Add("DOP_TIPO", "DOP_TIPO")
            tableMapping.ColumnMappings.Add("DOP_NUMERO", "DOP_NUMERO")
            tableMapping.ColumnMappings.Add("DOP_GLOSAADIC", "DOP_GLOSAADIC")
            tableMapping.ColumnMappings.Add("DOP_AUDITORIA", "DOP_AUDITORIA")
            tableMapping.ColumnMappings.Add("DOP_TIPOREC", "DOP_TIPOREC")
            tableMapping.ColumnMappings.Add("DAZ_CODIGO", "DAZ_CODIGO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TESDOP] WHERE (([DOP_CODIGO] = @Original_DOP_CODIGO) AND ((@Is"& _ 
                "Null_DPL_CODIGO = 1 AND [DPL_CODIGO] IS NULL) OR ([DPL_CODIGO] = @Original_DPL_C"& _ 
                "ODIGO)) AND ((@IsNull_COL_CODIGO = 1 AND [COL_CODIGO] IS NULL) OR ([COL_CODIGO] "& _ 
                "= @Original_COL_CODIGO)) AND ((@IsNull_DOP_MONTO = 1 AND [DOP_MONTO] IS NULL) OR"& _ 
                " ([DOP_MONTO] = @Original_DOP_MONTO)) AND ((@IsNull_DOP_TIPO = 1 AND [DOP_TIPO] "& _ 
                "IS NULL) OR ([DOP_TIPO] = @Original_DOP_TIPO)) AND ((@IsNull_DOP_NUMERO = 1 AND "& _ 
                "[DOP_NUMERO] IS NULL) OR ([DOP_NUMERO] = @Original_DOP_NUMERO)) AND ((@IsNull_DO"& _ 
                "P_GLOSAADIC = 1 AND [DOP_GLOSAADIC] IS NULL) OR ([DOP_GLOSAADIC] = @Original_DOP"& _ 
                "_GLOSAADIC)) AND ((@IsNull_DOP_AUDITORIA = 1 AND [DOP_AUDITORIA] IS NULL) OR ([D"& _ 
                "OP_AUDITORIA] = @Original_DOP_AUDITORIA)) AND ((@IsNull_DOP_TIPOREC = 1 AND [DOP"& _ 
                "_TIPOREC] IS NULL) OR ([DOP_TIPOREC] = @Original_DOP_TIPOREC)) AND ((@IsNull_DAZ"& _ 
                "_CODIGO = 1 AND [DAZ_CODIGO] IS NULL) OR ([DAZ_CODIGO] = @Original_DAZ_CODIGO)))"& _ 
                ""
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DPL_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DPL_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DPL_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DPL_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COL_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COL_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COL_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COL_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_MONTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_MONTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_MONTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "DOP_MONTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_TIPO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_TIPO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_NUMERO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_NUMERO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_NUMERO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_NUMERO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_GLOSAADIC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_GLOSAADIC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_GLOSAADIC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_GLOSAADIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_AUDITORIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_AUDITORIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_AUDITORIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_AUDITORIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_TIPOREC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPOREC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_TIPOREC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPOREC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TESDOP] ([DPL_CODIGO], [COL_CODIGO], [DOP_MONTO], [DOP_TIPO], "& _ 
                "[DOP_NUMERO], [DOP_GLOSAADIC], [DOP_AUDITORIA], [DOP_TIPOREC], [DAZ_CODIGO]) VAL"& _ 
                "UES (@DPL_CODIGO, @COL_CODIGO, @DOP_MONTO, @DOP_TIPO, @DOP_NUMERO, @DOP_GLOSAADI"& _ 
                "C, @DOP_AUDITORIA, @DOP_TIPOREC, @DAZ_CODIGO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DOP_CODIGO, DPL_CODIGO, C"& _ 
                "OL_CODIGO, DOP_MONTO, DOP_TIPO, DOP_NUMERO, DOP_GLOSAADIC, DOP_AUDITORIA, DOP_TI"& _ 
                "POREC, DAZ_CODIGO FROM TESDOP WHERE (DOP_CODIGO = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DPL_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DPL_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COL_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COL_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_MONTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "DOP_MONTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_TIPO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_NUMERO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_NUMERO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_GLOSAADIC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_GLOSAADIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_AUDITORIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_AUDITORIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_TIPOREC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPOREC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TESDOP] SET [DPL_CODIGO] = @DPL_CODIGO, [COL_CODIGO] = @COL_CODIGO,"& _ 
                " [DOP_MONTO] = @DOP_MONTO, [DOP_TIPO] = @DOP_TIPO, [DOP_NUMERO] = @DOP_NUMERO, ["& _ 
                "DOP_GLOSAADIC] = @DOP_GLOSAADIC, [DOP_AUDITORIA] = @DOP_AUDITORIA, [DOP_TIPOREC]"& _ 
                " = @DOP_TIPOREC, [DAZ_CODIGO] = @DAZ_CODIGO WHERE (([DOP_CODIGO] = @Original_DOP"& _ 
                "_CODIGO) AND ((@IsNull_DPL_CODIGO = 1 AND [DPL_CODIGO] IS NULL) OR ([DPL_CODIGO]"& _ 
                " = @Original_DPL_CODIGO)) AND ((@IsNull_COL_CODIGO = 1 AND [COL_CODIGO] IS NULL)"& _ 
                " OR ([COL_CODIGO] = @Original_COL_CODIGO)) AND ((@IsNull_DOP_MONTO = 1 AND [DOP_"& _ 
                "MONTO] IS NULL) OR ([DOP_MONTO] = @Original_DOP_MONTO)) AND ((@IsNull_DOP_TIPO ="& _ 
                " 1 AND [DOP_TIPO] IS NULL) OR ([DOP_TIPO] = @Original_DOP_TIPO)) AND ((@IsNull_D"& _ 
                "OP_NUMERO = 1 AND [DOP_NUMERO] IS NULL) OR ([DOP_NUMERO] = @Original_DOP_NUMERO)"& _ 
                ") AND ((@IsNull_DOP_GLOSAADIC = 1 AND [DOP_GLOSAADIC] IS NULL) OR ([DOP_GLOSAADI"& _ 
                "C] = @Original_DOP_GLOSAADIC)) AND ((@IsNull_DOP_AUDITORIA = 1 AND [DOP_AUDITORI"& _ 
                "A] IS NULL) OR ([DOP_AUDITORIA] = @Original_DOP_AUDITORIA)) AND ((@IsNull_DOP_TI"& _ 
                "POREC = 1 AND [DOP_TIPOREC] IS NULL) OR ([DOP_TIPOREC] = @Original_DOP_TIPOREC))"& _ 
                " AND ((@IsNull_DAZ_CODIGO = 1 AND [DAZ_CODIGO] IS NULL) OR ([DAZ_CODIGO] = @Orig"& _ 
                "inal_DAZ_CODIGO)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DOP_CODIGO, DPL_CODIGO, COL_CODIGO, DOP_MONTO, DOP_T"& _ 
                "IPO, DOP_NUMERO, DOP_GLOSAADIC, DOP_AUDITORIA, DOP_TIPOREC, DAZ_CODIGO FROM TESD"& _ 
                "OP WHERE (DOP_CODIGO = @DOP_CODIGO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DPL_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DPL_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COL_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COL_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_MONTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "DOP_MONTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_TIPO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_NUMERO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_NUMERO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_GLOSAADIC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_GLOSAADIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_AUDITORIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_AUDITORIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_TIPOREC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPOREC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DPL_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DPL_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DPL_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DPL_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COL_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COL_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COL_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COL_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_MONTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_MONTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_MONTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "DOP_MONTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_TIPO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_TIPO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_NUMERO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_NUMERO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_NUMERO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_NUMERO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_GLOSAADIC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_GLOSAADIC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_GLOSAADIC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_GLOSAADIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_AUDITORIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_AUDITORIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_AUDITORIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_AUDITORIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_TIPOREC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPOREC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_TIPOREC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPOREC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_CODIGO", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DOP_CODIGO, DPL_CODIGO, COL_CODIGO, DOP_MONTO, DOP_TIPO, DOP_NUMERO, DOP_G"& _ 
                "LOSAADIC, DOP_AUDITORIA, DOP_TIPOREC, DAZ_CODIGO FROM dbo.TESDOP"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsWALPPE.TESDOPDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsWALPPE.TESDOPDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsWALPPE.TESDOPDataTable = New dsWALPPE.TESDOPDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsWALPPE.TESDOPDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsWALPPE) As Integer
            Return Me.Adapter.Update(dataSet, "TESDOP")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_DOP_CODIGO As Long, ByVal Original_DPL_CODIGO As Global.System.Nullable(Of Long), ByVal Original_COL_CODIGO As Global.System.Nullable(Of Integer), ByVal Original_DOP_MONTO As Global.System.Nullable(Of Decimal), ByVal Original_DOP_TIPO As String, ByVal Original_DOP_NUMERO As String, ByVal Original_DOP_GLOSAADIC As String, ByVal Original_DOP_AUDITORIA As String, ByVal Original_DOP_TIPOREC As String, ByVal Original_DAZ_CODIGO As Global.System.Nullable(Of Long)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_DOP_CODIGO,Long)
            If (Original_DPL_CODIGO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_DPL_CODIGO.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_COL_CODIGO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_COL_CODIGO.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_DOP_MONTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_DOP_MONTO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_DOP_TIPO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_DOP_TIPO,String)
            End If
            If (Original_DOP_NUMERO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_DOP_NUMERO,String)
            End If
            If (Original_DOP_GLOSAADIC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_DOP_GLOSAADIC,String)
            End If
            If (Original_DOP_AUDITORIA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_DOP_AUDITORIA,String)
            End If
            If (Original_DOP_TIPOREC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_DOP_TIPOREC,String)
            End If
            If (Original_DAZ_CODIGO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_DAZ_CODIGO.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal DPL_CODIGO As Global.System.Nullable(Of Long), ByVal COL_CODIGO As Global.System.Nullable(Of Integer), ByVal DOP_MONTO As Global.System.Nullable(Of Decimal), ByVal DOP_TIPO As String, ByVal DOP_NUMERO As String, ByVal DOP_GLOSAADIC As String, ByVal DOP_AUDITORIA As String, ByVal DOP_TIPOREC As String, ByVal DAZ_CODIGO As Global.System.Nullable(Of Long)) As Integer
            If (DPL_CODIGO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(DPL_CODIGO.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (COL_CODIGO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(COL_CODIGO.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DOP_MONTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DOP_MONTO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DOP_TIPO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(DOP_TIPO,String)
            End If
            If (DOP_NUMERO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(DOP_NUMERO,String)
            End If
            If (DOP_GLOSAADIC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DOP_GLOSAADIC,String)
            End If
            If (DOP_AUDITORIA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(DOP_AUDITORIA,String)
            End If
            If (DOP_TIPOREC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(DOP_TIPOREC,String)
            End If
            If (DAZ_CODIGO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(DAZ_CODIGO.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal DPL_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal COL_CODIGO As Global.System.Nullable(Of Integer),  _
                    ByVal DOP_MONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal DOP_TIPO As String,  _
                    ByVal DOP_NUMERO As String,  _
                    ByVal DOP_GLOSAADIC As String,  _
                    ByVal DOP_AUDITORIA As String,  _
                    ByVal DOP_TIPOREC As String,  _
                    ByVal DAZ_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal Original_DOP_CODIGO As Long,  _
                    ByVal Original_DPL_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal Original_COL_CODIGO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DOP_MONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DOP_TIPO As String,  _
                    ByVal Original_DOP_NUMERO As String,  _
                    ByVal Original_DOP_GLOSAADIC As String,  _
                    ByVal Original_DOP_AUDITORIA As String,  _
                    ByVal Original_DOP_TIPOREC As String,  _
                    ByVal Original_DAZ_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal DOP_CODIGO As Long) As Integer
            If (DPL_CODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(DPL_CODIGO.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (COL_CODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(COL_CODIGO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DOP_MONTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DOP_MONTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DOP_TIPO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DOP_TIPO,String)
            End If
            If (DOP_NUMERO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(DOP_NUMERO,String)
            End If
            If (DOP_GLOSAADIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(DOP_GLOSAADIC,String)
            End If
            If (DOP_AUDITORIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(DOP_AUDITORIA,String)
            End If
            If (DOP_TIPOREC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(DOP_TIPOREC,String)
            End If
            If (DAZ_CODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(DAZ_CODIGO.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_DOP_CODIGO,Long)
            If (Original_DPL_CODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_DPL_CODIGO.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_COL_CODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_COL_CODIGO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_DOP_MONTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_DOP_MONTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_DOP_TIPO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_DOP_TIPO,String)
            End If
            If (Original_DOP_NUMERO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_DOP_NUMERO,String)
            End If
            If (Original_DOP_GLOSAADIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_DOP_GLOSAADIC,String)
            End If
            If (Original_DOP_AUDITORIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_DOP_AUDITORIA,String)
            End If
            If (Original_DOP_TIPOREC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_DOP_TIPOREC,String)
            End If
            If (Original_DAZ_CODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_DAZ_CODIGO.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(DOP_CODIGO,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal DPL_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal COL_CODIGO As Global.System.Nullable(Of Integer),  _
                    ByVal DOP_MONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal DOP_TIPO As String,  _
                    ByVal DOP_NUMERO As String,  _
                    ByVal DOP_GLOSAADIC As String,  _
                    ByVal DOP_AUDITORIA As String,  _
                    ByVal DOP_TIPOREC As String,  _
                    ByVal DAZ_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal Original_DOP_CODIGO As Long,  _
                    ByVal Original_DPL_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal Original_COL_CODIGO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DOP_MONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DOP_TIPO As String,  _
                    ByVal Original_DOP_NUMERO As String,  _
                    ByVal Original_DOP_GLOSAADIC As String,  _
                    ByVal Original_DOP_AUDITORIA As String,  _
                    ByVal Original_DOP_TIPOREC As String,  _
                    ByVal Original_DAZ_CODIGO As Global.System.Nullable(Of Long)) As Integer
            Return Me.Update(DPL_CODIGO, COL_CODIGO, DOP_MONTO, DOP_TIPO, DOP_NUMERO, DOP_GLOSAADIC, DOP_AUDITORIA, DOP_TIPOREC, DAZ_CODIGO, Original_DOP_CODIGO, Original_DPL_CODIGO, Original_COL_CODIGO, Original_DOP_MONTO, Original_DOP_TIPO, Original_DOP_NUMERO, Original_DOP_GLOSAADIC, Original_DOP_AUDITORIA, Original_DOP_TIPOREC, Original_DAZ_CODIGO, Original_DOP_CODIGO)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _partidasPendientesSAPTableAdapter As PartidasPendientesSAPTableAdapter
        
        Private _tESDOPTableAdapter As TESDOPTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property PartidasPendientesSAPTableAdapter() As PartidasPendientesSAPTableAdapter
            Get
                Return Me._partidasPendientesSAPTableAdapter
            End Get
            Set
                Me._partidasPendientesSAPTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TESDOPTableAdapter() As TESDOPTableAdapter
            Get
                Return Me._tESDOPTableAdapter
            End Get
            Set
                Me._tESDOPTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._partidasPendientesSAPTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._partidasPendientesSAPTableAdapter.Connection) Is Nothing)) Then
                    Return Me._partidasPendientesSAPTableAdapter.Connection
                End If
                If ((Not (Me._tESDOPTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tESDOPTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tESDOPTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._partidasPendientesSAPTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tESDOPTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As dsWALPPE, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._partidasPendientesSAPTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.PartidasPendientesSAP.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._partidasPendientesSAPTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tESDOPTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TESDOP.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tESDOPTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As dsWALPPE, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._partidasPendientesSAPTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.PartidasPendientesSAP.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._partidasPendientesSAPTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tESDOPTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TESDOP.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tESDOPTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As dsWALPPE, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tESDOPTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TESDOP.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tESDOPTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._partidasPendientesSAPTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.PartidasPendientesSAP.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._partidasPendientesSAPTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As dsWALPPE) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._partidasPendientesSAPTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._partidasPendientesSAPTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._tESDOPTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tESDOPTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._partidasPendientesSAPTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._partidasPendientesSAPTableAdapter, Me._partidasPendientesSAPTableAdapter.Connection)
                    Me._partidasPendientesSAPTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._partidasPendientesSAPTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._partidasPendientesSAPTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._partidasPendientesSAPTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._partidasPendientesSAPTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tESDOPTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tESDOPTableAdapter, Me._tESDOPTableAdapter.Connection)
                    Me._tESDOPTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tESDOPTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tESDOPTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tESDOPTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tESDOPTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._partidasPendientesSAPTableAdapter) Is Nothing) Then
                    Me._partidasPendientesSAPTableAdapter.Connection = CType(revertConnections(Me._partidasPendientesSAPTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._partidasPendientesSAPTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tESDOPTableAdapter) Is Nothing) Then
                    Me._tESDOPTableAdapter.Connection = CType(revertConnections(Me._tESDOPTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tESDOPTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
