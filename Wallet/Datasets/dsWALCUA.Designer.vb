'------------------------------------------------------------------------------
' <auto-generated>
'     Este código fue generado por una herramienta.
'     Versión de runtime:4.0.30319.42000
'
'     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
'     se vuelve a generar el código.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsWALCUA"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsWALCUA
    Inherits Global.System.Data.DataSet
    
    Private tableOP_Trae2Rescates As OP_Trae2RescatesDataTable
    
    Private tableOP_Trae2ChequesDevueltos As OP_Trae2ChequesDevueltosDataTable
    
    Private tableOP_Trae2OtrosIngresos As OP_Trae2OtrosIngresosDataTable
    
    Private tableOP_TraeColocaciones As OP_TraeColocacionesDataTable
    
    Private tableOP_TraePagosConCheque As OP_TraePagosConChequeDataTable
    
    Private tableOP_TraeRecaudacion As OP_TraeRecaudacionDataTable
    
    Private tableOP_TraeTotales As OP_TraeTotalesDataTable
    
    Private tableOP_TraeTransferenciasNeg As OP_TraeTransferenciasNegDataTable
    
    Private tableOP_TraeTransferenciasPos As OP_TraeTransferenciasPosDataTable
    
    Private tableTESDPL As TESDPLDataTable
    
    Private tableTESCUA As TESCUADataTable
    
    Private tableActualiza_Planilla As Actualiza_PlanillaDataTable
    
    Private tableTESDOP As TESDOPDataTable
    
    Private tableTESPAR As TESPARDataTable
    
    Private tableTESDAZ As TESDAZDataTable
    
    Private tableAjustesManuales As AjustesManualesDataTable
    
    Private tableTESCTE As TESCTEDataTable
    
    Private tableTraeCuadratura As TraeCuadraturaDataTable
    
    Private tableOP_TraeOtrosCargos As OP_TraeOtrosCargosDataTable
    
    Private tableDiferencias As DiferenciasDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("OP_Trae2Rescates")) Is Nothing) Then
                MyBase.Tables.Add(New OP_Trae2RescatesDataTable(ds.Tables("OP_Trae2Rescates")))
            End If
            If (Not (ds.Tables("OP_Trae2ChequesDevueltos")) Is Nothing) Then
                MyBase.Tables.Add(New OP_Trae2ChequesDevueltosDataTable(ds.Tables("OP_Trae2ChequesDevueltos")))
            End If
            If (Not (ds.Tables("OP_Trae2OtrosIngresos")) Is Nothing) Then
                MyBase.Tables.Add(New OP_Trae2OtrosIngresosDataTable(ds.Tables("OP_Trae2OtrosIngresos")))
            End If
            If (Not (ds.Tables("OP_TraeColocaciones")) Is Nothing) Then
                MyBase.Tables.Add(New OP_TraeColocacionesDataTable(ds.Tables("OP_TraeColocaciones")))
            End If
            If (Not (ds.Tables("OP_TraePagosConCheque")) Is Nothing) Then
                MyBase.Tables.Add(New OP_TraePagosConChequeDataTable(ds.Tables("OP_TraePagosConCheque")))
            End If
            If (Not (ds.Tables("OP_TraeRecaudacion")) Is Nothing) Then
                MyBase.Tables.Add(New OP_TraeRecaudacionDataTable(ds.Tables("OP_TraeRecaudacion")))
            End If
            If (Not (ds.Tables("OP_TraeTotales")) Is Nothing) Then
                MyBase.Tables.Add(New OP_TraeTotalesDataTable(ds.Tables("OP_TraeTotales")))
            End If
            If (Not (ds.Tables("OP_TraeTransferenciasNeg")) Is Nothing) Then
                MyBase.Tables.Add(New OP_TraeTransferenciasNegDataTable(ds.Tables("OP_TraeTransferenciasNeg")))
            End If
            If (Not (ds.Tables("OP_TraeTransferenciasPos")) Is Nothing) Then
                MyBase.Tables.Add(New OP_TraeTransferenciasPosDataTable(ds.Tables("OP_TraeTransferenciasPos")))
            End If
            If (Not (ds.Tables("TESDPL")) Is Nothing) Then
                MyBase.Tables.Add(New TESDPLDataTable(ds.Tables("TESDPL")))
            End If
            If (Not (ds.Tables("TESCUA")) Is Nothing) Then
                MyBase.Tables.Add(New TESCUADataTable(ds.Tables("TESCUA")))
            End If
            If (Not (ds.Tables("Actualiza_Planilla")) Is Nothing) Then
                MyBase.Tables.Add(New Actualiza_PlanillaDataTable(ds.Tables("Actualiza_Planilla")))
            End If
            If (Not (ds.Tables("TESDOP")) Is Nothing) Then
                MyBase.Tables.Add(New TESDOPDataTable(ds.Tables("TESDOP")))
            End If
            If (Not (ds.Tables("TESPAR")) Is Nothing) Then
                MyBase.Tables.Add(New TESPARDataTable(ds.Tables("TESPAR")))
            End If
            If (Not (ds.Tables("TESDAZ")) Is Nothing) Then
                MyBase.Tables.Add(New TESDAZDataTable(ds.Tables("TESDAZ")))
            End If
            If (Not (ds.Tables("AjustesManuales")) Is Nothing) Then
                MyBase.Tables.Add(New AjustesManualesDataTable(ds.Tables("AjustesManuales")))
            End If
            If (Not (ds.Tables("TESCTE")) Is Nothing) Then
                MyBase.Tables.Add(New TESCTEDataTable(ds.Tables("TESCTE")))
            End If
            If (Not (ds.Tables("TraeCuadratura")) Is Nothing) Then
                MyBase.Tables.Add(New TraeCuadraturaDataTable(ds.Tables("TraeCuadratura")))
            End If
            If (Not (ds.Tables("OP_TraeOtrosCargos")) Is Nothing) Then
                MyBase.Tables.Add(New OP_TraeOtrosCargosDataTable(ds.Tables("OP_TraeOtrosCargos")))
            End If
            If (Not (ds.Tables("Diferencias")) Is Nothing) Then
                MyBase.Tables.Add(New DiferenciasDataTable(ds.Tables("Diferencias")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OP_Trae2Rescates() As OP_Trae2RescatesDataTable
        Get
            Return Me.tableOP_Trae2Rescates
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OP_Trae2ChequesDevueltos() As OP_Trae2ChequesDevueltosDataTable
        Get
            Return Me.tableOP_Trae2ChequesDevueltos
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OP_Trae2OtrosIngresos() As OP_Trae2OtrosIngresosDataTable
        Get
            Return Me.tableOP_Trae2OtrosIngresos
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OP_TraeColocaciones() As OP_TraeColocacionesDataTable
        Get
            Return Me.tableOP_TraeColocaciones
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OP_TraePagosConCheque() As OP_TraePagosConChequeDataTable
        Get
            Return Me.tableOP_TraePagosConCheque
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OP_TraeRecaudacion() As OP_TraeRecaudacionDataTable
        Get
            Return Me.tableOP_TraeRecaudacion
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OP_TraeTotales() As OP_TraeTotalesDataTable
        Get
            Return Me.tableOP_TraeTotales
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OP_TraeTransferenciasNeg() As OP_TraeTransferenciasNegDataTable
        Get
            Return Me.tableOP_TraeTransferenciasNeg
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OP_TraeTransferenciasPos() As OP_TraeTransferenciasPosDataTable
        Get
            Return Me.tableOP_TraeTransferenciasPos
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TESDPL() As TESDPLDataTable
        Get
            Return Me.tableTESDPL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TESCUA() As TESCUADataTable
        Get
            Return Me.tableTESCUA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Actualiza_Planilla() As Actualiza_PlanillaDataTable
        Get
            Return Me.tableActualiza_Planilla
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TESDOP() As TESDOPDataTable
        Get
            Return Me.tableTESDOP
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TESPAR() As TESPARDataTable
        Get
            Return Me.tableTESPAR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TESDAZ() As TESDAZDataTable
        Get
            Return Me.tableTESDAZ
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property AjustesManuales() As AjustesManualesDataTable
        Get
            Return Me.tableAjustesManuales
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TESCTE() As TESCTEDataTable
        Get
            Return Me.tableTESCTE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TraeCuadratura() As TraeCuadraturaDataTable
        Get
            Return Me.tableTraeCuadratura
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OP_TraeOtrosCargos() As OP_TraeOtrosCargosDataTable
        Get
            Return Me.tableOP_TraeOtrosCargos
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Diferencias() As DiferenciasDataTable
        Get
            Return Me.tableDiferencias
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsWALCUA = CType(MyBase.Clone,dsWALCUA)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("OP_Trae2Rescates")) Is Nothing) Then
                MyBase.Tables.Add(New OP_Trae2RescatesDataTable(ds.Tables("OP_Trae2Rescates")))
            End If
            If (Not (ds.Tables("OP_Trae2ChequesDevueltos")) Is Nothing) Then
                MyBase.Tables.Add(New OP_Trae2ChequesDevueltosDataTable(ds.Tables("OP_Trae2ChequesDevueltos")))
            End If
            If (Not (ds.Tables("OP_Trae2OtrosIngresos")) Is Nothing) Then
                MyBase.Tables.Add(New OP_Trae2OtrosIngresosDataTable(ds.Tables("OP_Trae2OtrosIngresos")))
            End If
            If (Not (ds.Tables("OP_TraeColocaciones")) Is Nothing) Then
                MyBase.Tables.Add(New OP_TraeColocacionesDataTable(ds.Tables("OP_TraeColocaciones")))
            End If
            If (Not (ds.Tables("OP_TraePagosConCheque")) Is Nothing) Then
                MyBase.Tables.Add(New OP_TraePagosConChequeDataTable(ds.Tables("OP_TraePagosConCheque")))
            End If
            If (Not (ds.Tables("OP_TraeRecaudacion")) Is Nothing) Then
                MyBase.Tables.Add(New OP_TraeRecaudacionDataTable(ds.Tables("OP_TraeRecaudacion")))
            End If
            If (Not (ds.Tables("OP_TraeTotales")) Is Nothing) Then
                MyBase.Tables.Add(New OP_TraeTotalesDataTable(ds.Tables("OP_TraeTotales")))
            End If
            If (Not (ds.Tables("OP_TraeTransferenciasNeg")) Is Nothing) Then
                MyBase.Tables.Add(New OP_TraeTransferenciasNegDataTable(ds.Tables("OP_TraeTransferenciasNeg")))
            End If
            If (Not (ds.Tables("OP_TraeTransferenciasPos")) Is Nothing) Then
                MyBase.Tables.Add(New OP_TraeTransferenciasPosDataTable(ds.Tables("OP_TraeTransferenciasPos")))
            End If
            If (Not (ds.Tables("TESDPL")) Is Nothing) Then
                MyBase.Tables.Add(New TESDPLDataTable(ds.Tables("TESDPL")))
            End If
            If (Not (ds.Tables("TESCUA")) Is Nothing) Then
                MyBase.Tables.Add(New TESCUADataTable(ds.Tables("TESCUA")))
            End If
            If (Not (ds.Tables("Actualiza_Planilla")) Is Nothing) Then
                MyBase.Tables.Add(New Actualiza_PlanillaDataTable(ds.Tables("Actualiza_Planilla")))
            End If
            If (Not (ds.Tables("TESDOP")) Is Nothing) Then
                MyBase.Tables.Add(New TESDOPDataTable(ds.Tables("TESDOP")))
            End If
            If (Not (ds.Tables("TESPAR")) Is Nothing) Then
                MyBase.Tables.Add(New TESPARDataTable(ds.Tables("TESPAR")))
            End If
            If (Not (ds.Tables("TESDAZ")) Is Nothing) Then
                MyBase.Tables.Add(New TESDAZDataTable(ds.Tables("TESDAZ")))
            End If
            If (Not (ds.Tables("AjustesManuales")) Is Nothing) Then
                MyBase.Tables.Add(New AjustesManualesDataTable(ds.Tables("AjustesManuales")))
            End If
            If (Not (ds.Tables("TESCTE")) Is Nothing) Then
                MyBase.Tables.Add(New TESCTEDataTable(ds.Tables("TESCTE")))
            End If
            If (Not (ds.Tables("TraeCuadratura")) Is Nothing) Then
                MyBase.Tables.Add(New TraeCuadraturaDataTable(ds.Tables("TraeCuadratura")))
            End If
            If (Not (ds.Tables("OP_TraeOtrosCargos")) Is Nothing) Then
                MyBase.Tables.Add(New OP_TraeOtrosCargosDataTable(ds.Tables("OP_TraeOtrosCargos")))
            End If
            If (Not (ds.Tables("Diferencias")) Is Nothing) Then
                MyBase.Tables.Add(New DiferenciasDataTable(ds.Tables("Diferencias")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableOP_Trae2Rescates = CType(MyBase.Tables("OP_Trae2Rescates"),OP_Trae2RescatesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOP_Trae2Rescates) Is Nothing) Then
                Me.tableOP_Trae2Rescates.InitVars
            End If
        End If
        Me.tableOP_Trae2ChequesDevueltos = CType(MyBase.Tables("OP_Trae2ChequesDevueltos"),OP_Trae2ChequesDevueltosDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOP_Trae2ChequesDevueltos) Is Nothing) Then
                Me.tableOP_Trae2ChequesDevueltos.InitVars
            End If
        End If
        Me.tableOP_Trae2OtrosIngresos = CType(MyBase.Tables("OP_Trae2OtrosIngresos"),OP_Trae2OtrosIngresosDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOP_Trae2OtrosIngresos) Is Nothing) Then
                Me.tableOP_Trae2OtrosIngresos.InitVars
            End If
        End If
        Me.tableOP_TraeColocaciones = CType(MyBase.Tables("OP_TraeColocaciones"),OP_TraeColocacionesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOP_TraeColocaciones) Is Nothing) Then
                Me.tableOP_TraeColocaciones.InitVars
            End If
        End If
        Me.tableOP_TraePagosConCheque = CType(MyBase.Tables("OP_TraePagosConCheque"),OP_TraePagosConChequeDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOP_TraePagosConCheque) Is Nothing) Then
                Me.tableOP_TraePagosConCheque.InitVars
            End If
        End If
        Me.tableOP_TraeRecaudacion = CType(MyBase.Tables("OP_TraeRecaudacion"),OP_TraeRecaudacionDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOP_TraeRecaudacion) Is Nothing) Then
                Me.tableOP_TraeRecaudacion.InitVars
            End If
        End If
        Me.tableOP_TraeTotales = CType(MyBase.Tables("OP_TraeTotales"),OP_TraeTotalesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOP_TraeTotales) Is Nothing) Then
                Me.tableOP_TraeTotales.InitVars
            End If
        End If
        Me.tableOP_TraeTransferenciasNeg = CType(MyBase.Tables("OP_TraeTransferenciasNeg"),OP_TraeTransferenciasNegDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOP_TraeTransferenciasNeg) Is Nothing) Then
                Me.tableOP_TraeTransferenciasNeg.InitVars
            End If
        End If
        Me.tableOP_TraeTransferenciasPos = CType(MyBase.Tables("OP_TraeTransferenciasPos"),OP_TraeTransferenciasPosDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOP_TraeTransferenciasPos) Is Nothing) Then
                Me.tableOP_TraeTransferenciasPos.InitVars
            End If
        End If
        Me.tableTESDPL = CType(MyBase.Tables("TESDPL"),TESDPLDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTESDPL) Is Nothing) Then
                Me.tableTESDPL.InitVars
            End If
        End If
        Me.tableTESCUA = CType(MyBase.Tables("TESCUA"),TESCUADataTable)
        If (initTable = true) Then
            If (Not (Me.tableTESCUA) Is Nothing) Then
                Me.tableTESCUA.InitVars
            End If
        End If
        Me.tableActualiza_Planilla = CType(MyBase.Tables("Actualiza_Planilla"),Actualiza_PlanillaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableActualiza_Planilla) Is Nothing) Then
                Me.tableActualiza_Planilla.InitVars
            End If
        End If
        Me.tableTESDOP = CType(MyBase.Tables("TESDOP"),TESDOPDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTESDOP) Is Nothing) Then
                Me.tableTESDOP.InitVars
            End If
        End If
        Me.tableTESPAR = CType(MyBase.Tables("TESPAR"),TESPARDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTESPAR) Is Nothing) Then
                Me.tableTESPAR.InitVars
            End If
        End If
        Me.tableTESDAZ = CType(MyBase.Tables("TESDAZ"),TESDAZDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTESDAZ) Is Nothing) Then
                Me.tableTESDAZ.InitVars
            End If
        End If
        Me.tableAjustesManuales = CType(MyBase.Tables("AjustesManuales"),AjustesManualesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableAjustesManuales) Is Nothing) Then
                Me.tableAjustesManuales.InitVars
            End If
        End If
        Me.tableTESCTE = CType(MyBase.Tables("TESCTE"),TESCTEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTESCTE) Is Nothing) Then
                Me.tableTESCTE.InitVars
            End If
        End If
        Me.tableTraeCuadratura = CType(MyBase.Tables("TraeCuadratura"),TraeCuadraturaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableTraeCuadratura) Is Nothing) Then
                Me.tableTraeCuadratura.InitVars
            End If
        End If
        Me.tableOP_TraeOtrosCargos = CType(MyBase.Tables("OP_TraeOtrosCargos"),OP_TraeOtrosCargosDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOP_TraeOtrosCargos) Is Nothing) Then
                Me.tableOP_TraeOtrosCargos.InitVars
            End If
        End If
        Me.tableDiferencias = CType(MyBase.Tables("Diferencias"),DiferenciasDataTable)
        If (initTable = true) Then
            If (Not (Me.tableDiferencias) Is Nothing) Then
                Me.tableDiferencias.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsWALCUA"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsWALCUA.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableOP_Trae2Rescates = New OP_Trae2RescatesDataTable()
        MyBase.Tables.Add(Me.tableOP_Trae2Rescates)
        Me.tableOP_Trae2ChequesDevueltos = New OP_Trae2ChequesDevueltosDataTable()
        MyBase.Tables.Add(Me.tableOP_Trae2ChequesDevueltos)
        Me.tableOP_Trae2OtrosIngresos = New OP_Trae2OtrosIngresosDataTable()
        MyBase.Tables.Add(Me.tableOP_Trae2OtrosIngresos)
        Me.tableOP_TraeColocaciones = New OP_TraeColocacionesDataTable()
        MyBase.Tables.Add(Me.tableOP_TraeColocaciones)
        Me.tableOP_TraePagosConCheque = New OP_TraePagosConChequeDataTable()
        MyBase.Tables.Add(Me.tableOP_TraePagosConCheque)
        Me.tableOP_TraeRecaudacion = New OP_TraeRecaudacionDataTable()
        MyBase.Tables.Add(Me.tableOP_TraeRecaudacion)
        Me.tableOP_TraeTotales = New OP_TraeTotalesDataTable()
        MyBase.Tables.Add(Me.tableOP_TraeTotales)
        Me.tableOP_TraeTransferenciasNeg = New OP_TraeTransferenciasNegDataTable()
        MyBase.Tables.Add(Me.tableOP_TraeTransferenciasNeg)
        Me.tableOP_TraeTransferenciasPos = New OP_TraeTransferenciasPosDataTable()
        MyBase.Tables.Add(Me.tableOP_TraeTransferenciasPos)
        Me.tableTESDPL = New TESDPLDataTable()
        MyBase.Tables.Add(Me.tableTESDPL)
        Me.tableTESCUA = New TESCUADataTable()
        MyBase.Tables.Add(Me.tableTESCUA)
        Me.tableActualiza_Planilla = New Actualiza_PlanillaDataTable()
        MyBase.Tables.Add(Me.tableActualiza_Planilla)
        Me.tableTESDOP = New TESDOPDataTable()
        MyBase.Tables.Add(Me.tableTESDOP)
        Me.tableTESPAR = New TESPARDataTable()
        MyBase.Tables.Add(Me.tableTESPAR)
        Me.tableTESDAZ = New TESDAZDataTable()
        MyBase.Tables.Add(Me.tableTESDAZ)
        Me.tableAjustesManuales = New AjustesManualesDataTable()
        MyBase.Tables.Add(Me.tableAjustesManuales)
        Me.tableTESCTE = New TESCTEDataTable()
        MyBase.Tables.Add(Me.tableTESCTE)
        Me.tableTraeCuadratura = New TraeCuadraturaDataTable()
        MyBase.Tables.Add(Me.tableTraeCuadratura)
        Me.tableOP_TraeOtrosCargos = New OP_TraeOtrosCargosDataTable()
        MyBase.Tables.Add(Me.tableOP_TraeOtrosCargos)
        Me.tableDiferencias = New DiferenciasDataTable()
        MyBase.Tables.Add(Me.tableDiferencias)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeOP_Trae2Rescates() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeOP_Trae2ChequesDevueltos() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeOP_Trae2OtrosIngresos() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeOP_TraeColocaciones() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeOP_TraePagosConCheque() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeOP_TraeRecaudacion() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeOP_TraeTotales() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeOP_TraeTransferenciasNeg() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeOP_TraeTransferenciasPos() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTESDPL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTESCUA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeActualiza_Planilla() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTESDOP() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTESPAR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTESDAZ() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeAjustesManuales() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTESCTE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTraeCuadratura() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeOP_TraeOtrosCargos() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeDiferencias() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsWALCUA = New dsWALCUA()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub OP_Trae2RescatesRowChangeEventHandler(ByVal sender As Object, ByVal e As OP_Trae2RescatesRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub OP_Trae2ChequesDevueltosRowChangeEventHandler(ByVal sender As Object, ByVal e As OP_Trae2ChequesDevueltosRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub OP_Trae2OtrosIngresosRowChangeEventHandler(ByVal sender As Object, ByVal e As OP_Trae2OtrosIngresosRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub OP_TraeColocacionesRowChangeEventHandler(ByVal sender As Object, ByVal e As OP_TraeColocacionesRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub OP_TraePagosConChequeRowChangeEventHandler(ByVal sender As Object, ByVal e As OP_TraePagosConChequeRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub OP_TraeRecaudacionRowChangeEventHandler(ByVal sender As Object, ByVal e As OP_TraeRecaudacionRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub OP_TraeTotalesRowChangeEventHandler(ByVal sender As Object, ByVal e As OP_TraeTotalesRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub OP_TraeTransferenciasNegRowChangeEventHandler(ByVal sender As Object, ByVal e As OP_TraeTransferenciasNegRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub OP_TraeTransferenciasPosRowChangeEventHandler(ByVal sender As Object, ByVal e As OP_TraeTransferenciasPosRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TESDPLRowChangeEventHandler(ByVal sender As Object, ByVal e As TESDPLRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TESCUARowChangeEventHandler(ByVal sender As Object, ByVal e As TESCUARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub Actualiza_PlanillaRowChangeEventHandler(ByVal sender As Object, ByVal e As Actualiza_PlanillaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TESDOPRowChangeEventHandler(ByVal sender As Object, ByVal e As TESDOPRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TESPARRowChangeEventHandler(ByVal sender As Object, ByVal e As TESPARRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TESDAZRowChangeEventHandler(ByVal sender As Object, ByVal e As TESDAZRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub AjustesManualesRowChangeEventHandler(ByVal sender As Object, ByVal e As AjustesManualesRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TESCTERowChangeEventHandler(ByVal sender As Object, ByVal e As TESCTERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TraeCuadraturaRowChangeEventHandler(ByVal sender As Object, ByVal e As TraeCuadraturaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub OP_TraeOtrosCargosRowChangeEventHandler(ByVal sender As Object, ByVal e As OP_TraeOtrosCargosRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub DiferenciasRowChangeEventHandler(ByVal sender As Object, ByVal e As DiferenciasRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OP_Trae2RescatesDataTable
        Inherits Global.System.Data.TypedTableBase(Of OP_Trae2RescatesRow)
        
        Private columndaz_cuentabanco As Global.System.Data.DataColumn
        
        Private columntotales As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OP_Trae2Rescates"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property daz_cuentabancoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndaz_cuentabanco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property totalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OP_Trae2RescatesRow
            Get
                Return CType(Me.Rows(index),OP_Trae2RescatesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_Trae2RescatesRowChanging As OP_Trae2RescatesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_Trae2RescatesRowChanged As OP_Trae2RescatesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_Trae2RescatesRowDeleting As OP_Trae2RescatesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_Trae2RescatesRowDeleted As OP_Trae2RescatesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddOP_Trae2RescatesRow(ByVal row As OP_Trae2RescatesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddOP_Trae2RescatesRow(ByVal daz_cuentabanco As String, ByVal totales As Decimal) As OP_Trae2RescatesRow
            Dim rowOP_Trae2RescatesRow As OP_Trae2RescatesRow = CType(Me.NewRow,OP_Trae2RescatesRow)
            Dim columnValuesArray() As Object = New Object() {daz_cuentabanco, totales}
            rowOP_Trae2RescatesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOP_Trae2RescatesRow)
            Return rowOP_Trae2RescatesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OP_Trae2RescatesDataTable = CType(MyBase.Clone,OP_Trae2RescatesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OP_Trae2RescatesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columndaz_cuentabanco = MyBase.Columns("daz_cuentabanco")
            Me.columntotales = MyBase.Columns("totales")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columndaz_cuentabanco = New Global.System.Data.DataColumn("daz_cuentabanco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndaz_cuentabanco)
            Me.columntotales = New Global.System.Data.DataColumn("totales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotales)
            Me.columndaz_cuentabanco.MaxLength = 10
            Me.columntotales.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewOP_Trae2RescatesRow() As OP_Trae2RescatesRow
            Return CType(Me.NewRow,OP_Trae2RescatesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OP_Trae2RescatesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OP_Trae2RescatesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OP_Trae2RescatesRowChangedEvent) Is Nothing) Then
                RaiseEvent OP_Trae2RescatesRowChanged(Me, New OP_Trae2RescatesRowChangeEvent(CType(e.Row,OP_Trae2RescatesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OP_Trae2RescatesRowChangingEvent) Is Nothing) Then
                RaiseEvent OP_Trae2RescatesRowChanging(Me, New OP_Trae2RescatesRowChangeEvent(CType(e.Row,OP_Trae2RescatesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OP_Trae2RescatesRowDeletedEvent) Is Nothing) Then
                RaiseEvent OP_Trae2RescatesRowDeleted(Me, New OP_Trae2RescatesRowChangeEvent(CType(e.Row,OP_Trae2RescatesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OP_Trae2RescatesRowDeletingEvent) Is Nothing) Then
                RaiseEvent OP_Trae2RescatesRowDeleting(Me, New OP_Trae2RescatesRowChangeEvent(CType(e.Row,OP_Trae2RescatesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveOP_Trae2RescatesRow(ByVal row As OP_Trae2RescatesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALCUA = New dsWALCUA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OP_Trae2RescatesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OP_Trae2ChequesDevueltosDataTable
        Inherits Global.System.Data.TypedTableBase(Of OP_Trae2ChequesDevueltosRow)
        
        Private columndaz_cuentabanco As Global.System.Data.DataColumn
        
        Private columntotales As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OP_Trae2ChequesDevueltos"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property daz_cuentabancoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndaz_cuentabanco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property totalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OP_Trae2ChequesDevueltosRow
            Get
                Return CType(Me.Rows(index),OP_Trae2ChequesDevueltosRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_Trae2ChequesDevueltosRowChanging As OP_Trae2ChequesDevueltosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_Trae2ChequesDevueltosRowChanged As OP_Trae2ChequesDevueltosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_Trae2ChequesDevueltosRowDeleting As OP_Trae2ChequesDevueltosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_Trae2ChequesDevueltosRowDeleted As OP_Trae2ChequesDevueltosRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddOP_Trae2ChequesDevueltosRow(ByVal row As OP_Trae2ChequesDevueltosRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddOP_Trae2ChequesDevueltosRow(ByVal daz_cuentabanco As String, ByVal totales As Decimal) As OP_Trae2ChequesDevueltosRow
            Dim rowOP_Trae2ChequesDevueltosRow As OP_Trae2ChequesDevueltosRow = CType(Me.NewRow,OP_Trae2ChequesDevueltosRow)
            Dim columnValuesArray() As Object = New Object() {daz_cuentabanco, totales}
            rowOP_Trae2ChequesDevueltosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOP_Trae2ChequesDevueltosRow)
            Return rowOP_Trae2ChequesDevueltosRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OP_Trae2ChequesDevueltosDataTable = CType(MyBase.Clone,OP_Trae2ChequesDevueltosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OP_Trae2ChequesDevueltosDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columndaz_cuentabanco = MyBase.Columns("daz_cuentabanco")
            Me.columntotales = MyBase.Columns("totales")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columndaz_cuentabanco = New Global.System.Data.DataColumn("daz_cuentabanco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndaz_cuentabanco)
            Me.columntotales = New Global.System.Data.DataColumn("totales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotales)
            Me.columndaz_cuentabanco.MaxLength = 10
            Me.columntotales.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewOP_Trae2ChequesDevueltosRow() As OP_Trae2ChequesDevueltosRow
            Return CType(Me.NewRow,OP_Trae2ChequesDevueltosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OP_Trae2ChequesDevueltosRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OP_Trae2ChequesDevueltosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OP_Trae2ChequesDevueltosRowChangedEvent) Is Nothing) Then
                RaiseEvent OP_Trae2ChequesDevueltosRowChanged(Me, New OP_Trae2ChequesDevueltosRowChangeEvent(CType(e.Row,OP_Trae2ChequesDevueltosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OP_Trae2ChequesDevueltosRowChangingEvent) Is Nothing) Then
                RaiseEvent OP_Trae2ChequesDevueltosRowChanging(Me, New OP_Trae2ChequesDevueltosRowChangeEvent(CType(e.Row,OP_Trae2ChequesDevueltosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OP_Trae2ChequesDevueltosRowDeletedEvent) Is Nothing) Then
                RaiseEvent OP_Trae2ChequesDevueltosRowDeleted(Me, New OP_Trae2ChequesDevueltosRowChangeEvent(CType(e.Row,OP_Trae2ChequesDevueltosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OP_Trae2ChequesDevueltosRowDeletingEvent) Is Nothing) Then
                RaiseEvent OP_Trae2ChequesDevueltosRowDeleting(Me, New OP_Trae2ChequesDevueltosRowChangeEvent(CType(e.Row,OP_Trae2ChequesDevueltosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveOP_Trae2ChequesDevueltosRow(ByVal row As OP_Trae2ChequesDevueltosRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALCUA = New dsWALCUA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OP_Trae2ChequesDevueltosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OP_Trae2OtrosIngresosDataTable
        Inherits Global.System.Data.TypedTableBase(Of OP_Trae2OtrosIngresosRow)
        
        Private columndaz_cuentabanco As Global.System.Data.DataColumn
        
        Private columntotales As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OP_Trae2OtrosIngresos"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property daz_cuentabancoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndaz_cuentabanco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property totalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OP_Trae2OtrosIngresosRow
            Get
                Return CType(Me.Rows(index),OP_Trae2OtrosIngresosRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_Trae2OtrosIngresosRowChanging As OP_Trae2OtrosIngresosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_Trae2OtrosIngresosRowChanged As OP_Trae2OtrosIngresosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_Trae2OtrosIngresosRowDeleting As OP_Trae2OtrosIngresosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_Trae2OtrosIngresosRowDeleted As OP_Trae2OtrosIngresosRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddOP_Trae2OtrosIngresosRow(ByVal row As OP_Trae2OtrosIngresosRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddOP_Trae2OtrosIngresosRow(ByVal daz_cuentabanco As String, ByVal totales As Decimal) As OP_Trae2OtrosIngresosRow
            Dim rowOP_Trae2OtrosIngresosRow As OP_Trae2OtrosIngresosRow = CType(Me.NewRow,OP_Trae2OtrosIngresosRow)
            Dim columnValuesArray() As Object = New Object() {daz_cuentabanco, totales}
            rowOP_Trae2OtrosIngresosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOP_Trae2OtrosIngresosRow)
            Return rowOP_Trae2OtrosIngresosRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OP_Trae2OtrosIngresosDataTable = CType(MyBase.Clone,OP_Trae2OtrosIngresosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OP_Trae2OtrosIngresosDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columndaz_cuentabanco = MyBase.Columns("daz_cuentabanco")
            Me.columntotales = MyBase.Columns("totales")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columndaz_cuentabanco = New Global.System.Data.DataColumn("daz_cuentabanco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndaz_cuentabanco)
            Me.columntotales = New Global.System.Data.DataColumn("totales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotales)
            Me.columndaz_cuentabanco.MaxLength = 10
            Me.columntotales.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewOP_Trae2OtrosIngresosRow() As OP_Trae2OtrosIngresosRow
            Return CType(Me.NewRow,OP_Trae2OtrosIngresosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OP_Trae2OtrosIngresosRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OP_Trae2OtrosIngresosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OP_Trae2OtrosIngresosRowChangedEvent) Is Nothing) Then
                RaiseEvent OP_Trae2OtrosIngresosRowChanged(Me, New OP_Trae2OtrosIngresosRowChangeEvent(CType(e.Row,OP_Trae2OtrosIngresosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OP_Trae2OtrosIngresosRowChangingEvent) Is Nothing) Then
                RaiseEvent OP_Trae2OtrosIngresosRowChanging(Me, New OP_Trae2OtrosIngresosRowChangeEvent(CType(e.Row,OP_Trae2OtrosIngresosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OP_Trae2OtrosIngresosRowDeletedEvent) Is Nothing) Then
                RaiseEvent OP_Trae2OtrosIngresosRowDeleted(Me, New OP_Trae2OtrosIngresosRowChangeEvent(CType(e.Row,OP_Trae2OtrosIngresosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OP_Trae2OtrosIngresosRowDeletingEvent) Is Nothing) Then
                RaiseEvent OP_Trae2OtrosIngresosRowDeleting(Me, New OP_Trae2OtrosIngresosRowChangeEvent(CType(e.Row,OP_Trae2OtrosIngresosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveOP_Trae2OtrosIngresosRow(ByVal row As OP_Trae2OtrosIngresosRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALCUA = New dsWALCUA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OP_Trae2OtrosIngresosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OP_TraeColocacionesDataTable
        Inherits Global.System.Data.TypedTableBase(Of OP_TraeColocacionesRow)
        
        Private columndaz_cuentabanco As Global.System.Data.DataColumn
        
        Private columntotales As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OP_TraeColocaciones"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property daz_cuentabancoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndaz_cuentabanco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property totalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OP_TraeColocacionesRow
            Get
                Return CType(Me.Rows(index),OP_TraeColocacionesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeColocacionesRowChanging As OP_TraeColocacionesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeColocacionesRowChanged As OP_TraeColocacionesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeColocacionesRowDeleting As OP_TraeColocacionesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeColocacionesRowDeleted As OP_TraeColocacionesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddOP_TraeColocacionesRow(ByVal row As OP_TraeColocacionesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddOP_TraeColocacionesRow(ByVal daz_cuentabanco As String, ByVal totales As Decimal) As OP_TraeColocacionesRow
            Dim rowOP_TraeColocacionesRow As OP_TraeColocacionesRow = CType(Me.NewRow,OP_TraeColocacionesRow)
            Dim columnValuesArray() As Object = New Object() {daz_cuentabanco, totales}
            rowOP_TraeColocacionesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOP_TraeColocacionesRow)
            Return rowOP_TraeColocacionesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OP_TraeColocacionesDataTable = CType(MyBase.Clone,OP_TraeColocacionesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OP_TraeColocacionesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columndaz_cuentabanco = MyBase.Columns("daz_cuentabanco")
            Me.columntotales = MyBase.Columns("totales")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columndaz_cuentabanco = New Global.System.Data.DataColumn("daz_cuentabanco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndaz_cuentabanco)
            Me.columntotales = New Global.System.Data.DataColumn("totales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotales)
            Me.columndaz_cuentabanco.MaxLength = 10
            Me.columntotales.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewOP_TraeColocacionesRow() As OP_TraeColocacionesRow
            Return CType(Me.NewRow,OP_TraeColocacionesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OP_TraeColocacionesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OP_TraeColocacionesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OP_TraeColocacionesRowChangedEvent) Is Nothing) Then
                RaiseEvent OP_TraeColocacionesRowChanged(Me, New OP_TraeColocacionesRowChangeEvent(CType(e.Row,OP_TraeColocacionesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OP_TraeColocacionesRowChangingEvent) Is Nothing) Then
                RaiseEvent OP_TraeColocacionesRowChanging(Me, New OP_TraeColocacionesRowChangeEvent(CType(e.Row,OP_TraeColocacionesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OP_TraeColocacionesRowDeletedEvent) Is Nothing) Then
                RaiseEvent OP_TraeColocacionesRowDeleted(Me, New OP_TraeColocacionesRowChangeEvent(CType(e.Row,OP_TraeColocacionesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OP_TraeColocacionesRowDeletingEvent) Is Nothing) Then
                RaiseEvent OP_TraeColocacionesRowDeleting(Me, New OP_TraeColocacionesRowChangeEvent(CType(e.Row,OP_TraeColocacionesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveOP_TraeColocacionesRow(ByVal row As OP_TraeColocacionesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALCUA = New dsWALCUA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OP_TraeColocacionesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OP_TraePagosConChequeDataTable
        Inherits Global.System.Data.TypedTableBase(Of OP_TraePagosConChequeRow)
        
        Private columndaz_cuentabanco As Global.System.Data.DataColumn
        
        Private columntotales As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OP_TraePagosConCheque"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property daz_cuentabancoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndaz_cuentabanco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property totalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OP_TraePagosConChequeRow
            Get
                Return CType(Me.Rows(index),OP_TraePagosConChequeRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraePagosConChequeRowChanging As OP_TraePagosConChequeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraePagosConChequeRowChanged As OP_TraePagosConChequeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraePagosConChequeRowDeleting As OP_TraePagosConChequeRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraePagosConChequeRowDeleted As OP_TraePagosConChequeRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddOP_TraePagosConChequeRow(ByVal row As OP_TraePagosConChequeRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddOP_TraePagosConChequeRow(ByVal daz_cuentabanco As String, ByVal totales As Decimal) As OP_TraePagosConChequeRow
            Dim rowOP_TraePagosConChequeRow As OP_TraePagosConChequeRow = CType(Me.NewRow,OP_TraePagosConChequeRow)
            Dim columnValuesArray() As Object = New Object() {daz_cuentabanco, totales}
            rowOP_TraePagosConChequeRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOP_TraePagosConChequeRow)
            Return rowOP_TraePagosConChequeRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OP_TraePagosConChequeDataTable = CType(MyBase.Clone,OP_TraePagosConChequeDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OP_TraePagosConChequeDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columndaz_cuentabanco = MyBase.Columns("daz_cuentabanco")
            Me.columntotales = MyBase.Columns("totales")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columndaz_cuentabanco = New Global.System.Data.DataColumn("daz_cuentabanco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndaz_cuentabanco)
            Me.columntotales = New Global.System.Data.DataColumn("totales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotales)
            Me.columndaz_cuentabanco.MaxLength = 10
            Me.columntotales.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewOP_TraePagosConChequeRow() As OP_TraePagosConChequeRow
            Return CType(Me.NewRow,OP_TraePagosConChequeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OP_TraePagosConChequeRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OP_TraePagosConChequeRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OP_TraePagosConChequeRowChangedEvent) Is Nothing) Then
                RaiseEvent OP_TraePagosConChequeRowChanged(Me, New OP_TraePagosConChequeRowChangeEvent(CType(e.Row,OP_TraePagosConChequeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OP_TraePagosConChequeRowChangingEvent) Is Nothing) Then
                RaiseEvent OP_TraePagosConChequeRowChanging(Me, New OP_TraePagosConChequeRowChangeEvent(CType(e.Row,OP_TraePagosConChequeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OP_TraePagosConChequeRowDeletedEvent) Is Nothing) Then
                RaiseEvent OP_TraePagosConChequeRowDeleted(Me, New OP_TraePagosConChequeRowChangeEvent(CType(e.Row,OP_TraePagosConChequeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OP_TraePagosConChequeRowDeletingEvent) Is Nothing) Then
                RaiseEvent OP_TraePagosConChequeRowDeleting(Me, New OP_TraePagosConChequeRowChangeEvent(CType(e.Row,OP_TraePagosConChequeRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveOP_TraePagosConChequeRow(ByVal row As OP_TraePagosConChequeRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALCUA = New dsWALCUA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OP_TraePagosConChequeDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OP_TraeRecaudacionDataTable
        Inherits Global.System.Data.TypedTableBase(Of OP_TraeRecaudacionRow)
        
        Private columndaz_cuentabanco As Global.System.Data.DataColumn
        
        Private columntotales As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OP_TraeRecaudacion"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property daz_cuentabancoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndaz_cuentabanco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property totalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OP_TraeRecaudacionRow
            Get
                Return CType(Me.Rows(index),OP_TraeRecaudacionRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeRecaudacionRowChanging As OP_TraeRecaudacionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeRecaudacionRowChanged As OP_TraeRecaudacionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeRecaudacionRowDeleting As OP_TraeRecaudacionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeRecaudacionRowDeleted As OP_TraeRecaudacionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddOP_TraeRecaudacionRow(ByVal row As OP_TraeRecaudacionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddOP_TraeRecaudacionRow(ByVal daz_cuentabanco As String, ByVal totales As Decimal) As OP_TraeRecaudacionRow
            Dim rowOP_TraeRecaudacionRow As OP_TraeRecaudacionRow = CType(Me.NewRow,OP_TraeRecaudacionRow)
            Dim columnValuesArray() As Object = New Object() {daz_cuentabanco, totales}
            rowOP_TraeRecaudacionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOP_TraeRecaudacionRow)
            Return rowOP_TraeRecaudacionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OP_TraeRecaudacionDataTable = CType(MyBase.Clone,OP_TraeRecaudacionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OP_TraeRecaudacionDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columndaz_cuentabanco = MyBase.Columns("daz_cuentabanco")
            Me.columntotales = MyBase.Columns("totales")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columndaz_cuentabanco = New Global.System.Data.DataColumn("daz_cuentabanco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndaz_cuentabanco)
            Me.columntotales = New Global.System.Data.DataColumn("totales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotales)
            Me.columndaz_cuentabanco.MaxLength = 10
            Me.columntotales.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewOP_TraeRecaudacionRow() As OP_TraeRecaudacionRow
            Return CType(Me.NewRow,OP_TraeRecaudacionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OP_TraeRecaudacionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OP_TraeRecaudacionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OP_TraeRecaudacionRowChangedEvent) Is Nothing) Then
                RaiseEvent OP_TraeRecaudacionRowChanged(Me, New OP_TraeRecaudacionRowChangeEvent(CType(e.Row,OP_TraeRecaudacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OP_TraeRecaudacionRowChangingEvent) Is Nothing) Then
                RaiseEvent OP_TraeRecaudacionRowChanging(Me, New OP_TraeRecaudacionRowChangeEvent(CType(e.Row,OP_TraeRecaudacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OP_TraeRecaudacionRowDeletedEvent) Is Nothing) Then
                RaiseEvent OP_TraeRecaudacionRowDeleted(Me, New OP_TraeRecaudacionRowChangeEvent(CType(e.Row,OP_TraeRecaudacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OP_TraeRecaudacionRowDeletingEvent) Is Nothing) Then
                RaiseEvent OP_TraeRecaudacionRowDeleting(Me, New OP_TraeRecaudacionRowChangeEvent(CType(e.Row,OP_TraeRecaudacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveOP_TraeRecaudacionRow(ByVal row As OP_TraeRecaudacionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALCUA = New dsWALCUA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OP_TraeRecaudacionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OP_TraeTotalesDataTable
        Inherits Global.System.Data.TypedTableBase(Of OP_TraeTotalesRow)
        
        Private columndaz_cuentabanco As Global.System.Data.DataColumn
        
        Private columntotales As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OP_TraeTotales"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property daz_cuentabancoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndaz_cuentabanco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property totalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OP_TraeTotalesRow
            Get
                Return CType(Me.Rows(index),OP_TraeTotalesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeTotalesRowChanging As OP_TraeTotalesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeTotalesRowChanged As OP_TraeTotalesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeTotalesRowDeleting As OP_TraeTotalesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeTotalesRowDeleted As OP_TraeTotalesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddOP_TraeTotalesRow(ByVal row As OP_TraeTotalesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddOP_TraeTotalesRow(ByVal daz_cuentabanco As String, ByVal totales As Decimal) As OP_TraeTotalesRow
            Dim rowOP_TraeTotalesRow As OP_TraeTotalesRow = CType(Me.NewRow,OP_TraeTotalesRow)
            Dim columnValuesArray() As Object = New Object() {daz_cuentabanco, totales}
            rowOP_TraeTotalesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOP_TraeTotalesRow)
            Return rowOP_TraeTotalesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OP_TraeTotalesDataTable = CType(MyBase.Clone,OP_TraeTotalesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OP_TraeTotalesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columndaz_cuentabanco = MyBase.Columns("daz_cuentabanco")
            Me.columntotales = MyBase.Columns("totales")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columndaz_cuentabanco = New Global.System.Data.DataColumn("daz_cuentabanco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndaz_cuentabanco)
            Me.columntotales = New Global.System.Data.DataColumn("totales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotales)
            Me.columndaz_cuentabanco.MaxLength = 10
            Me.columntotales.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewOP_TraeTotalesRow() As OP_TraeTotalesRow
            Return CType(Me.NewRow,OP_TraeTotalesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OP_TraeTotalesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OP_TraeTotalesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OP_TraeTotalesRowChangedEvent) Is Nothing) Then
                RaiseEvent OP_TraeTotalesRowChanged(Me, New OP_TraeTotalesRowChangeEvent(CType(e.Row,OP_TraeTotalesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OP_TraeTotalesRowChangingEvent) Is Nothing) Then
                RaiseEvent OP_TraeTotalesRowChanging(Me, New OP_TraeTotalesRowChangeEvent(CType(e.Row,OP_TraeTotalesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OP_TraeTotalesRowDeletedEvent) Is Nothing) Then
                RaiseEvent OP_TraeTotalesRowDeleted(Me, New OP_TraeTotalesRowChangeEvent(CType(e.Row,OP_TraeTotalesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OP_TraeTotalesRowDeletingEvent) Is Nothing) Then
                RaiseEvent OP_TraeTotalesRowDeleting(Me, New OP_TraeTotalesRowChangeEvent(CType(e.Row,OP_TraeTotalesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveOP_TraeTotalesRow(ByVal row As OP_TraeTotalesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALCUA = New dsWALCUA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OP_TraeTotalesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OP_TraeTransferenciasNegDataTable
        Inherits Global.System.Data.TypedTableBase(Of OP_TraeTransferenciasNegRow)
        
        Private columndaz_cuentabanco As Global.System.Data.DataColumn
        
        Private columntotales As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OP_TraeTransferenciasNeg"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property daz_cuentabancoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndaz_cuentabanco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property totalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OP_TraeTransferenciasNegRow
            Get
                Return CType(Me.Rows(index),OP_TraeTransferenciasNegRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeTransferenciasNegRowChanging As OP_TraeTransferenciasNegRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeTransferenciasNegRowChanged As OP_TraeTransferenciasNegRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeTransferenciasNegRowDeleting As OP_TraeTransferenciasNegRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeTransferenciasNegRowDeleted As OP_TraeTransferenciasNegRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddOP_TraeTransferenciasNegRow(ByVal row As OP_TraeTransferenciasNegRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddOP_TraeTransferenciasNegRow(ByVal daz_cuentabanco As String, ByVal totales As Decimal) As OP_TraeTransferenciasNegRow
            Dim rowOP_TraeTransferenciasNegRow As OP_TraeTransferenciasNegRow = CType(Me.NewRow,OP_TraeTransferenciasNegRow)
            Dim columnValuesArray() As Object = New Object() {daz_cuentabanco, totales}
            rowOP_TraeTransferenciasNegRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOP_TraeTransferenciasNegRow)
            Return rowOP_TraeTransferenciasNegRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OP_TraeTransferenciasNegDataTable = CType(MyBase.Clone,OP_TraeTransferenciasNegDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OP_TraeTransferenciasNegDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columndaz_cuentabanco = MyBase.Columns("daz_cuentabanco")
            Me.columntotales = MyBase.Columns("totales")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columndaz_cuentabanco = New Global.System.Data.DataColumn("daz_cuentabanco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndaz_cuentabanco)
            Me.columntotales = New Global.System.Data.DataColumn("totales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotales)
            Me.columndaz_cuentabanco.MaxLength = 10
            Me.columntotales.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewOP_TraeTransferenciasNegRow() As OP_TraeTransferenciasNegRow
            Return CType(Me.NewRow,OP_TraeTransferenciasNegRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OP_TraeTransferenciasNegRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OP_TraeTransferenciasNegRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OP_TraeTransferenciasNegRowChangedEvent) Is Nothing) Then
                RaiseEvent OP_TraeTransferenciasNegRowChanged(Me, New OP_TraeTransferenciasNegRowChangeEvent(CType(e.Row,OP_TraeTransferenciasNegRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OP_TraeTransferenciasNegRowChangingEvent) Is Nothing) Then
                RaiseEvent OP_TraeTransferenciasNegRowChanging(Me, New OP_TraeTransferenciasNegRowChangeEvent(CType(e.Row,OP_TraeTransferenciasNegRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OP_TraeTransferenciasNegRowDeletedEvent) Is Nothing) Then
                RaiseEvent OP_TraeTransferenciasNegRowDeleted(Me, New OP_TraeTransferenciasNegRowChangeEvent(CType(e.Row,OP_TraeTransferenciasNegRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OP_TraeTransferenciasNegRowDeletingEvent) Is Nothing) Then
                RaiseEvent OP_TraeTransferenciasNegRowDeleting(Me, New OP_TraeTransferenciasNegRowChangeEvent(CType(e.Row,OP_TraeTransferenciasNegRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveOP_TraeTransferenciasNegRow(ByVal row As OP_TraeTransferenciasNegRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALCUA = New dsWALCUA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OP_TraeTransferenciasNegDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OP_TraeTransferenciasPosDataTable
        Inherits Global.System.Data.TypedTableBase(Of OP_TraeTransferenciasPosRow)
        
        Private columndaz_cuentabanco As Global.System.Data.DataColumn
        
        Private columntotales As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OP_TraeTransferenciasPos"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property daz_cuentabancoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columndaz_cuentabanco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property totalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OP_TraeTransferenciasPosRow
            Get
                Return CType(Me.Rows(index),OP_TraeTransferenciasPosRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeTransferenciasPosRowChanging As OP_TraeTransferenciasPosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeTransferenciasPosRowChanged As OP_TraeTransferenciasPosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeTransferenciasPosRowDeleting As OP_TraeTransferenciasPosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeTransferenciasPosRowDeleted As OP_TraeTransferenciasPosRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddOP_TraeTransferenciasPosRow(ByVal row As OP_TraeTransferenciasPosRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddOP_TraeTransferenciasPosRow(ByVal daz_cuentabanco As String, ByVal totales As Decimal) As OP_TraeTransferenciasPosRow
            Dim rowOP_TraeTransferenciasPosRow As OP_TraeTransferenciasPosRow = CType(Me.NewRow,OP_TraeTransferenciasPosRow)
            Dim columnValuesArray() As Object = New Object() {daz_cuentabanco, totales}
            rowOP_TraeTransferenciasPosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOP_TraeTransferenciasPosRow)
            Return rowOP_TraeTransferenciasPosRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OP_TraeTransferenciasPosDataTable = CType(MyBase.Clone,OP_TraeTransferenciasPosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OP_TraeTransferenciasPosDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columndaz_cuentabanco = MyBase.Columns("daz_cuentabanco")
            Me.columntotales = MyBase.Columns("totales")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columndaz_cuentabanco = New Global.System.Data.DataColumn("daz_cuentabanco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columndaz_cuentabanco)
            Me.columntotales = New Global.System.Data.DataColumn("totales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotales)
            Me.columndaz_cuentabanco.MaxLength = 10
            Me.columntotales.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewOP_TraeTransferenciasPosRow() As OP_TraeTransferenciasPosRow
            Return CType(Me.NewRow,OP_TraeTransferenciasPosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OP_TraeTransferenciasPosRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OP_TraeTransferenciasPosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OP_TraeTransferenciasPosRowChangedEvent) Is Nothing) Then
                RaiseEvent OP_TraeTransferenciasPosRowChanged(Me, New OP_TraeTransferenciasPosRowChangeEvent(CType(e.Row,OP_TraeTransferenciasPosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OP_TraeTransferenciasPosRowChangingEvent) Is Nothing) Then
                RaiseEvent OP_TraeTransferenciasPosRowChanging(Me, New OP_TraeTransferenciasPosRowChangeEvent(CType(e.Row,OP_TraeTransferenciasPosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OP_TraeTransferenciasPosRowDeletedEvent) Is Nothing) Then
                RaiseEvent OP_TraeTransferenciasPosRowDeleted(Me, New OP_TraeTransferenciasPosRowChangeEvent(CType(e.Row,OP_TraeTransferenciasPosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OP_TraeTransferenciasPosRowDeletingEvent) Is Nothing) Then
                RaiseEvent OP_TraeTransferenciasPosRowDeleting(Me, New OP_TraeTransferenciasPosRowChangeEvent(CType(e.Row,OP_TraeTransferenciasPosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveOP_TraeTransferenciasPosRow(ByVal row As OP_TraeTransferenciasPosRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALCUA = New dsWALCUA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OP_TraeTransferenciasPosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TESDPLDataTable
        Inherits Global.System.Data.TypedTableBase(Of TESDPLRow)
        
        Private columnDPL_CODIGO As Global.System.Data.DataColumn
        
        Private columnPLA_CODIGO As Global.System.Data.DataColumn
        
        Private columnExpr1 As Global.System.Data.DataColumn
        
        Private columnDPL_SALDOINI As Global.System.Data.DataColumn
        
        Private columnDPL_RESCATES As Global.System.Data.DataColumn
        
        Private columnDPL_RECAUDACION As Global.System.Data.DataColumn
        
        Private columnDPL_CHEQUESDEV As Global.System.Data.DataColumn
        
        Private columnDPL_APORTES As Global.System.Data.DataColumn
        
        Private columnDPL_OTROSINGRESOS As Global.System.Data.DataColumn
        
        Private columnDPL_PAGOSCHE As Global.System.Data.DataColumn
        
        Private columnDPL_PAGOSCAR As Global.System.Data.DataColumn
        
        Private columnDPL_CHEQUESCAR As Global.System.Data.DataColumn
        
        Private columnDPL_TRANSFERENCIASPOS As Global.System.Data.DataColumn
        
        Private columnDPL_TRANSFERENCIASNEG As Global.System.Data.DataColumn
        
        Private columnDPL_PORCOLOCAR As Global.System.Data.DataColumn
        
        Private columnDPL_COLOCACIONES As Global.System.Data.DataColumn
        
        Private columnDPL_SALDO As Global.System.Data.DataColumn
        
        Private columnDPL_AUDITORIA As Global.System.Data.DataColumn
        
        Private columnCTE_CODIGO As Global.System.Data.DataColumn
        
        Private columnExpr2 As Global.System.Data.DataColumn
        
        Private columnCON_CODIGO As Global.System.Data.DataColumn
        
        Private columnMON_CODIGO As Global.System.Data.DataColumn
        
        Private columnEMP_CODIGO As Global.System.Data.DataColumn
        
        Private columnCTE_NUMERO As Global.System.Data.DataColumn
        
        Private columnCTE_CUENTA As Global.System.Data.DataColumn
        
        Private columnCTE_SIGLA As Global.System.Data.DataColumn
        
        Private columnCTE_GRUPO As Global.System.Data.DataColumn
        
        Private columnCTE_TIPO As Global.System.Data.DataColumn
        
        Private columnCTE_SECUENCIA As Global.System.Data.DataColumn
        
        Private columnCTE_COLCHON1 As Global.System.Data.DataColumn
        
        Private columnCTE_COLCHON2 As Global.System.Data.DataColumn
        
        Private columnCTE_PLAZA As Global.System.Data.DataColumn
        
        Private columnCTE_MADRE As Global.System.Data.DataColumn
        
        Private columnCTE_AUDITORIA As Global.System.Data.DataColumn
        
        Private columnCTE_SOCIEDAD As Global.System.Data.DataColumn
        
        Private columnCTE_CODBANCO As Global.System.Data.DataColumn
        
        Private columnCTE_CUENTAID As Global.System.Data.DataColumn
        
        Private columnCTE_GLOSA As Global.System.Data.DataColumn
        
        Private columnCTE_CONTABLE As Global.System.Data.DataColumn
        
        Private columnCTE_MONEDASAP As Global.System.Data.DataColumn
        
        Private columnCTE_VIA As Global.System.Data.DataColumn
        
        Private columnCTE_CODCTE As Global.System.Data.DataColumn
        
        Private columnENT_CODIGO As Global.System.Data.DataColumn
        
        Private columnTEN_CODIGO As Global.System.Data.DataColumn
        
        Private columnENT_RAZON As Global.System.Data.DataColumn
        
        Private columnENT_ABREVIATURA As Global.System.Data.DataColumn
        
        Private columnENT_RUT As Global.System.Data.DataColumn
        
        Private columnENT_LIMITE As Global.System.Data.DataColumn
        
        Private columnENT_ESTADO As Global.System.Data.DataColumn
        
        Private columnENT_SITIO As Global.System.Data.DataColumn
        
        Private columnENT_AUDITORIA As Global.System.Data.DataColumn
        
        Private columnENT_SAP As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TESDPL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPL_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPL_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLA_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLA_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Expr1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPL_SALDOINIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPL_SALDOINI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPL_RESCATESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPL_RESCATES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPL_RECAUDACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPL_RECAUDACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPL_CHEQUESDEVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPL_CHEQUESDEV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPL_APORTESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPL_APORTES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPL_OTROSINGRESOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPL_OTROSINGRESOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPL_PAGOSCHEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPL_PAGOSCHE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPL_PAGOSCARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPL_PAGOSCAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPL_CHEQUESCARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPL_CHEQUESCAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPL_TRANSFERENCIASPOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPL_TRANSFERENCIASPOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPL_TRANSFERENCIASNEGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPL_TRANSFERENCIASNEG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPL_PORCOLOCARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPL_PORCOLOCAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPL_COLOCACIONESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPL_COLOCACIONES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPL_SALDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPL_SALDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPL_AUDITORIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPL_AUDITORIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Expr2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CON_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCON_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MON_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMON_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMP_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_NUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_NUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_SIGLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_SIGLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_GRUPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_GRUPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_SECUENCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_SECUENCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_COLCHON1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_COLCHON1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_COLCHON2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_COLCHON2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_PLAZAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_PLAZA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_MADREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_MADRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_AUDITORIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_AUDITORIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_SOCIEDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_SOCIEDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CODBANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CODBANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CUENTAIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CUENTAID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_GLOSAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_GLOSA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CONTABLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CONTABLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_MONEDASAPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_MONEDASAP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_VIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_VIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CODCTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CODCTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TEN_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTEN_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_RAZONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_RAZON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_ABREVIATURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_ABREVIATURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_RUTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_RUT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_LIMITEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_LIMITE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_ESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_SITIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_SITIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_AUDITORIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_AUDITORIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_SAPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_SAP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TESDPLRow
            Get
                Return CType(Me.Rows(index),TESDPLRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESDPLRowChanging As TESDPLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESDPLRowChanged As TESDPLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESDPLRowDeleting As TESDPLRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESDPLRowDeleted As TESDPLRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTESDPLRow(ByVal row As TESDPLRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTESDPLRow( _
                    ByVal DPL_CODIGO As Long,  _
                    ByVal PLA_CODIGO As Long,  _
                    ByVal Expr1 As Integer,  _
                    ByVal DPL_SALDOINI As Decimal,  _
                    ByVal DPL_RESCATES As Decimal,  _
                    ByVal DPL_RECAUDACION As Decimal,  _
                    ByVal DPL_CHEQUESDEV As Decimal,  _
                    ByVal DPL_APORTES As Decimal,  _
                    ByVal DPL_OTROSINGRESOS As Decimal,  _
                    ByVal DPL_PAGOSCHE As Decimal,  _
                    ByVal DPL_PAGOSCAR As Decimal,  _
                    ByVal DPL_CHEQUESCAR As Decimal,  _
                    ByVal DPL_TRANSFERENCIASPOS As Decimal,  _
                    ByVal DPL_TRANSFERENCIASNEG As Decimal,  _
                    ByVal DPL_PORCOLOCAR As Decimal,  _
                    ByVal DPL_COLOCACIONES As Decimal,  _
                    ByVal DPL_SALDO As Decimal,  _
                    ByVal DPL_AUDITORIA As String,  _
                    ByVal CTE_CODIGO As String,  _
                    ByVal Expr2 As Long,  _
                    ByVal CON_CODIGO As Long,  _
                    ByVal MON_CODIGO As String,  _
                    ByVal EMP_CODIGO As Long,  _
                    ByVal CTE_NUMERO As String,  _
                    ByVal CTE_CUENTA As String,  _
                    ByVal CTE_SIGLA As String,  _
                    ByVal CTE_GRUPO As String,  _
                    ByVal CTE_TIPO As String,  _
                    ByVal CTE_SECUENCIA As Integer,  _
                    ByVal CTE_COLCHON1 As Decimal,  _
                    ByVal CTE_COLCHON2 As Decimal,  _
                    ByVal CTE_PLAZA As Integer,  _
                    ByVal CTE_MADRE As Integer,  _
                    ByVal CTE_AUDITORIA As String,  _
                    ByVal CTE_SOCIEDAD As String,  _
                    ByVal CTE_CODBANCO As String,  _
                    ByVal CTE_CUENTAID As String,  _
                    ByVal CTE_GLOSA As String,  _
                    ByVal CTE_CONTABLE As String,  _
                    ByVal CTE_MONEDASAP As String,  _
                    ByVal CTE_VIA As String,  _
                    ByVal CTE_CODCTE As String,  _
                    ByVal TEN_CODIGO As Integer,  _
                    ByVal ENT_RAZON As String,  _
                    ByVal ENT_ABREVIATURA As String,  _
                    ByVal ENT_RUT As String,  _
                    ByVal ENT_LIMITE As Decimal,  _
                    ByVal ENT_ESTADO As String,  _
                    ByVal ENT_SITIO As String,  _
                    ByVal ENT_AUDITORIA As String,  _
                    ByVal ENT_SAP As String) As TESDPLRow
            Dim rowTESDPLRow As TESDPLRow = CType(Me.NewRow,TESDPLRow)
            Dim columnValuesArray() As Object = New Object() {DPL_CODIGO, PLA_CODIGO, Expr1, DPL_SALDOINI, DPL_RESCATES, DPL_RECAUDACION, DPL_CHEQUESDEV, DPL_APORTES, DPL_OTROSINGRESOS, DPL_PAGOSCHE, DPL_PAGOSCAR, DPL_CHEQUESCAR, DPL_TRANSFERENCIASPOS, DPL_TRANSFERENCIASNEG, DPL_PORCOLOCAR, DPL_COLOCACIONES, DPL_SALDO, DPL_AUDITORIA, CTE_CODIGO, Expr2, CON_CODIGO, MON_CODIGO, EMP_CODIGO, CTE_NUMERO, CTE_CUENTA, CTE_SIGLA, CTE_GRUPO, CTE_TIPO, CTE_SECUENCIA, CTE_COLCHON1, CTE_COLCHON2, CTE_PLAZA, CTE_MADRE, CTE_AUDITORIA, CTE_SOCIEDAD, CTE_CODBANCO, CTE_CUENTAID, CTE_GLOSA, CTE_CONTABLE, CTE_MONEDASAP, CTE_VIA, CTE_CODCTE, Nothing, TEN_CODIGO, ENT_RAZON, ENT_ABREVIATURA, ENT_RUT, ENT_LIMITE, ENT_ESTADO, ENT_SITIO, ENT_AUDITORIA, ENT_SAP}
            rowTESDPLRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTESDPLRow)
            Return rowTESDPLRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByDPL_CODIGOCTE_CODIGOENT_CODIGO(ByVal DPL_CODIGO As Long, ByVal CTE_CODIGO As String, ByVal ENT_CODIGO As Long) As TESDPLRow
            Return CType(Me.Rows.Find(New Object() {DPL_CODIGO, CTE_CODIGO, ENT_CODIGO}),TESDPLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TESDPLDataTable = CType(MyBase.Clone,TESDPLDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TESDPLDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDPL_CODIGO = MyBase.Columns("DPL_CODIGO")
            Me.columnPLA_CODIGO = MyBase.Columns("PLA_CODIGO")
            Me.columnExpr1 = MyBase.Columns("Expr1")
            Me.columnDPL_SALDOINI = MyBase.Columns("DPL_SALDOINI")
            Me.columnDPL_RESCATES = MyBase.Columns("DPL_RESCATES")
            Me.columnDPL_RECAUDACION = MyBase.Columns("DPL_RECAUDACION")
            Me.columnDPL_CHEQUESDEV = MyBase.Columns("DPL_CHEQUESDEV")
            Me.columnDPL_APORTES = MyBase.Columns("DPL_APORTES")
            Me.columnDPL_OTROSINGRESOS = MyBase.Columns("DPL_OTROSINGRESOS")
            Me.columnDPL_PAGOSCHE = MyBase.Columns("DPL_PAGOSCHE")
            Me.columnDPL_PAGOSCAR = MyBase.Columns("DPL_PAGOSCAR")
            Me.columnDPL_CHEQUESCAR = MyBase.Columns("DPL_CHEQUESCAR")
            Me.columnDPL_TRANSFERENCIASPOS = MyBase.Columns("DPL_TRANSFERENCIASPOS")
            Me.columnDPL_TRANSFERENCIASNEG = MyBase.Columns("DPL_TRANSFERENCIASNEG")
            Me.columnDPL_PORCOLOCAR = MyBase.Columns("DPL_PORCOLOCAR")
            Me.columnDPL_COLOCACIONES = MyBase.Columns("DPL_COLOCACIONES")
            Me.columnDPL_SALDO = MyBase.Columns("DPL_SALDO")
            Me.columnDPL_AUDITORIA = MyBase.Columns("DPL_AUDITORIA")
            Me.columnCTE_CODIGO = MyBase.Columns("CTE_CODIGO")
            Me.columnExpr2 = MyBase.Columns("Expr2")
            Me.columnCON_CODIGO = MyBase.Columns("CON_CODIGO")
            Me.columnMON_CODIGO = MyBase.Columns("MON_CODIGO")
            Me.columnEMP_CODIGO = MyBase.Columns("EMP_CODIGO")
            Me.columnCTE_NUMERO = MyBase.Columns("CTE_NUMERO")
            Me.columnCTE_CUENTA = MyBase.Columns("CTE_CUENTA")
            Me.columnCTE_SIGLA = MyBase.Columns("CTE_SIGLA")
            Me.columnCTE_GRUPO = MyBase.Columns("CTE_GRUPO")
            Me.columnCTE_TIPO = MyBase.Columns("CTE_TIPO")
            Me.columnCTE_SECUENCIA = MyBase.Columns("CTE_SECUENCIA")
            Me.columnCTE_COLCHON1 = MyBase.Columns("CTE_COLCHON1")
            Me.columnCTE_COLCHON2 = MyBase.Columns("CTE_COLCHON2")
            Me.columnCTE_PLAZA = MyBase.Columns("CTE_PLAZA")
            Me.columnCTE_MADRE = MyBase.Columns("CTE_MADRE")
            Me.columnCTE_AUDITORIA = MyBase.Columns("CTE_AUDITORIA")
            Me.columnCTE_SOCIEDAD = MyBase.Columns("CTE_SOCIEDAD")
            Me.columnCTE_CODBANCO = MyBase.Columns("CTE_CODBANCO")
            Me.columnCTE_CUENTAID = MyBase.Columns("CTE_CUENTAID")
            Me.columnCTE_GLOSA = MyBase.Columns("CTE_GLOSA")
            Me.columnCTE_CONTABLE = MyBase.Columns("CTE_CONTABLE")
            Me.columnCTE_MONEDASAP = MyBase.Columns("CTE_MONEDASAP")
            Me.columnCTE_VIA = MyBase.Columns("CTE_VIA")
            Me.columnCTE_CODCTE = MyBase.Columns("CTE_CODCTE")
            Me.columnENT_CODIGO = MyBase.Columns("ENT_CODIGO")
            Me.columnTEN_CODIGO = MyBase.Columns("TEN_CODIGO")
            Me.columnENT_RAZON = MyBase.Columns("ENT_RAZON")
            Me.columnENT_ABREVIATURA = MyBase.Columns("ENT_ABREVIATURA")
            Me.columnENT_RUT = MyBase.Columns("ENT_RUT")
            Me.columnENT_LIMITE = MyBase.Columns("ENT_LIMITE")
            Me.columnENT_ESTADO = MyBase.Columns("ENT_ESTADO")
            Me.columnENT_SITIO = MyBase.Columns("ENT_SITIO")
            Me.columnENT_AUDITORIA = MyBase.Columns("ENT_AUDITORIA")
            Me.columnENT_SAP = MyBase.Columns("ENT_SAP")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDPL_CODIGO = New Global.System.Data.DataColumn("DPL_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPL_CODIGO)
            Me.columnPLA_CODIGO = New Global.System.Data.DataColumn("PLA_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLA_CODIGO)
            Me.columnExpr1 = New Global.System.Data.DataColumn("Expr1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr1)
            Me.columnDPL_SALDOINI = New Global.System.Data.DataColumn("DPL_SALDOINI", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPL_SALDOINI)
            Me.columnDPL_RESCATES = New Global.System.Data.DataColumn("DPL_RESCATES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPL_RESCATES)
            Me.columnDPL_RECAUDACION = New Global.System.Data.DataColumn("DPL_RECAUDACION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPL_RECAUDACION)
            Me.columnDPL_CHEQUESDEV = New Global.System.Data.DataColumn("DPL_CHEQUESDEV", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPL_CHEQUESDEV)
            Me.columnDPL_APORTES = New Global.System.Data.DataColumn("DPL_APORTES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPL_APORTES)
            Me.columnDPL_OTROSINGRESOS = New Global.System.Data.DataColumn("DPL_OTROSINGRESOS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPL_OTROSINGRESOS)
            Me.columnDPL_PAGOSCHE = New Global.System.Data.DataColumn("DPL_PAGOSCHE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPL_PAGOSCHE)
            Me.columnDPL_PAGOSCAR = New Global.System.Data.DataColumn("DPL_PAGOSCAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPL_PAGOSCAR)
            Me.columnDPL_CHEQUESCAR = New Global.System.Data.DataColumn("DPL_CHEQUESCAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPL_CHEQUESCAR)
            Me.columnDPL_TRANSFERENCIASPOS = New Global.System.Data.DataColumn("DPL_TRANSFERENCIASPOS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPL_TRANSFERENCIASPOS)
            Me.columnDPL_TRANSFERENCIASNEG = New Global.System.Data.DataColumn("DPL_TRANSFERENCIASNEG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPL_TRANSFERENCIASNEG)
            Me.columnDPL_PORCOLOCAR = New Global.System.Data.DataColumn("DPL_PORCOLOCAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPL_PORCOLOCAR)
            Me.columnDPL_COLOCACIONES = New Global.System.Data.DataColumn("DPL_COLOCACIONES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPL_COLOCACIONES)
            Me.columnDPL_SALDO = New Global.System.Data.DataColumn("DPL_SALDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPL_SALDO)
            Me.columnDPL_AUDITORIA = New Global.System.Data.DataColumn("DPL_AUDITORIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPL_AUDITORIA)
            Me.columnCTE_CODIGO = New Global.System.Data.DataColumn("CTE_CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CODIGO)
            Me.columnExpr2 = New Global.System.Data.DataColumn("Expr2", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr2)
            Me.columnCON_CODIGO = New Global.System.Data.DataColumn("CON_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCON_CODIGO)
            Me.columnMON_CODIGO = New Global.System.Data.DataColumn("MON_CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMON_CODIGO)
            Me.columnEMP_CODIGO = New Global.System.Data.DataColumn("EMP_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_CODIGO)
            Me.columnCTE_NUMERO = New Global.System.Data.DataColumn("CTE_NUMERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_NUMERO)
            Me.columnCTE_CUENTA = New Global.System.Data.DataColumn("CTE_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CUENTA)
            Me.columnCTE_SIGLA = New Global.System.Data.DataColumn("CTE_SIGLA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_SIGLA)
            Me.columnCTE_GRUPO = New Global.System.Data.DataColumn("CTE_GRUPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_GRUPO)
            Me.columnCTE_TIPO = New Global.System.Data.DataColumn("CTE_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_TIPO)
            Me.columnCTE_SECUENCIA = New Global.System.Data.DataColumn("CTE_SECUENCIA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_SECUENCIA)
            Me.columnCTE_COLCHON1 = New Global.System.Data.DataColumn("CTE_COLCHON1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_COLCHON1)
            Me.columnCTE_COLCHON2 = New Global.System.Data.DataColumn("CTE_COLCHON2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_COLCHON2)
            Me.columnCTE_PLAZA = New Global.System.Data.DataColumn("CTE_PLAZA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_PLAZA)
            Me.columnCTE_MADRE = New Global.System.Data.DataColumn("CTE_MADRE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_MADRE)
            Me.columnCTE_AUDITORIA = New Global.System.Data.DataColumn("CTE_AUDITORIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_AUDITORIA)
            Me.columnCTE_SOCIEDAD = New Global.System.Data.DataColumn("CTE_SOCIEDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_SOCIEDAD)
            Me.columnCTE_CODBANCO = New Global.System.Data.DataColumn("CTE_CODBANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CODBANCO)
            Me.columnCTE_CUENTAID = New Global.System.Data.DataColumn("CTE_CUENTAID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CUENTAID)
            Me.columnCTE_GLOSA = New Global.System.Data.DataColumn("CTE_GLOSA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_GLOSA)
            Me.columnCTE_CONTABLE = New Global.System.Data.DataColumn("CTE_CONTABLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CONTABLE)
            Me.columnCTE_MONEDASAP = New Global.System.Data.DataColumn("CTE_MONEDASAP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_MONEDASAP)
            Me.columnCTE_VIA = New Global.System.Data.DataColumn("CTE_VIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_VIA)
            Me.columnCTE_CODCTE = New Global.System.Data.DataColumn("CTE_CODCTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CODCTE)
            Me.columnENT_CODIGO = New Global.System.Data.DataColumn("ENT_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_CODIGO)
            Me.columnTEN_CODIGO = New Global.System.Data.DataColumn("TEN_CODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTEN_CODIGO)
            Me.columnENT_RAZON = New Global.System.Data.DataColumn("ENT_RAZON", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_RAZON)
            Me.columnENT_ABREVIATURA = New Global.System.Data.DataColumn("ENT_ABREVIATURA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_ABREVIATURA)
            Me.columnENT_RUT = New Global.System.Data.DataColumn("ENT_RUT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_RUT)
            Me.columnENT_LIMITE = New Global.System.Data.DataColumn("ENT_LIMITE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_LIMITE)
            Me.columnENT_ESTADO = New Global.System.Data.DataColumn("ENT_ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_ESTADO)
            Me.columnENT_SITIO = New Global.System.Data.DataColumn("ENT_SITIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_SITIO)
            Me.columnENT_AUDITORIA = New Global.System.Data.DataColumn("ENT_AUDITORIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_AUDITORIA)
            Me.columnENT_SAP = New Global.System.Data.DataColumn("ENT_SAP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_SAP)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDPL_CODIGO, Me.columnCTE_CODIGO, Me.columnENT_CODIGO}, true))
            Me.columnDPL_CODIGO.AllowDBNull = false
            Me.columnPLA_CODIGO.AllowDBNull = false
            Me.columnExpr1.AllowDBNull = false
            Me.columnDPL_SALDOINI.ReadOnly = true
            Me.columnDPL_RESCATES.ReadOnly = true
            Me.columnDPL_RECAUDACION.ReadOnly = true
            Me.columnDPL_CHEQUESDEV.ReadOnly = true
            Me.columnDPL_APORTES.ReadOnly = true
            Me.columnDPL_OTROSINGRESOS.ReadOnly = true
            Me.columnDPL_PAGOSCHE.ReadOnly = true
            Me.columnDPL_PAGOSCAR.ReadOnly = true
            Me.columnDPL_CHEQUESCAR.ReadOnly = true
            Me.columnDPL_TRANSFERENCIASPOS.ReadOnly = true
            Me.columnDPL_TRANSFERENCIASNEG.ReadOnly = true
            Me.columnDPL_PORCOLOCAR.ReadOnly = true
            Me.columnDPL_COLOCACIONES.ReadOnly = true
            Me.columnDPL_SALDO.ReadOnly = true
            Me.columnDPL_AUDITORIA.MaxLength = 44
            Me.columnCTE_CODIGO.AllowDBNull = false
            Me.columnCTE_CODIGO.MaxLength = 7
            Me.columnExpr2.AllowDBNull = false
            Me.columnMON_CODIGO.AllowDBNull = false
            Me.columnMON_CODIGO.MaxLength = 5
            Me.columnEMP_CODIGO.AllowDBNull = false
            Me.columnCTE_NUMERO.MaxLength = 25
            Me.columnCTE_CUENTA.MaxLength = 5
            Me.columnCTE_SIGLA.MaxLength = 13
            Me.columnCTE_GRUPO.MaxLength = 2
            Me.columnCTE_TIPO.MaxLength = 1
            Me.columnCTE_AUDITORIA.MaxLength = 44
            Me.columnCTE_SOCIEDAD.MaxLength = 4
            Me.columnCTE_CODBANCO.MaxLength = 5
            Me.columnCTE_CUENTAID.MaxLength = 10
            Me.columnCTE_GLOSA.MaxLength = 30
            Me.columnCTE_CONTABLE.MaxLength = 10
            Me.columnCTE_MONEDASAP.MaxLength = 5
            Me.columnCTE_VIA.MaxLength = 1
            Me.columnCTE_CODCTE.MaxLength = 7
            Me.columnENT_CODIGO.AutoIncrement = true
            Me.columnENT_CODIGO.AutoIncrementSeed = -1
            Me.columnENT_CODIGO.AutoIncrementStep = -1
            Me.columnENT_CODIGO.AllowDBNull = false
            Me.columnENT_CODIGO.ReadOnly = true
            Me.columnTEN_CODIGO.AllowDBNull = false
            Me.columnENT_RAZON.MaxLength = 40
            Me.columnENT_ABREVIATURA.MaxLength = 15
            Me.columnENT_RUT.MaxLength = 13
            Me.columnENT_ESTADO.MaxLength = 1
            Me.columnENT_SITIO.MaxLength = 20
            Me.columnENT_AUDITORIA.MaxLength = 44
            Me.columnENT_SAP.MaxLength = 10
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTESDPLRow() As TESDPLRow
            Return CType(Me.NewRow,TESDPLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TESDPLRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TESDPLRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TESDPLRowChangedEvent) Is Nothing) Then
                RaiseEvent TESDPLRowChanged(Me, New TESDPLRowChangeEvent(CType(e.Row,TESDPLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TESDPLRowChangingEvent) Is Nothing) Then
                RaiseEvent TESDPLRowChanging(Me, New TESDPLRowChangeEvent(CType(e.Row,TESDPLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TESDPLRowDeletedEvent) Is Nothing) Then
                RaiseEvent TESDPLRowDeleted(Me, New TESDPLRowChangeEvent(CType(e.Row,TESDPLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TESDPLRowDeletingEvent) Is Nothing) Then
                RaiseEvent TESDPLRowDeleting(Me, New TESDPLRowChangeEvent(CType(e.Row,TESDPLRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTESDPLRow(ByVal row As TESDPLRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALCUA = New dsWALCUA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TESDPLDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TESCUADataTable
        Inherits Global.System.Data.TypedTableBase(Of TESCUARow)
        
        Private columnCUA_CODIGO As Global.System.Data.DataColumn
        
        Private columnPLA_CODIGO As Global.System.Data.DataColumn
        
        Private columnCTE_CODIGO As Global.System.Data.DataColumn
        
        Private columnCUA_SALDOINI As Global.System.Data.DataColumn
        
        Private columnCUA_RESCATES As Global.System.Data.DataColumn
        
        Private columnCUA_RESCATES2 As Global.System.Data.DataColumn
        
        Private columnCUA_RECAUDACION As Global.System.Data.DataColumn
        
        Private columnCUA_RECAUDACION2 As Global.System.Data.DataColumn
        
        Private columnCUA_CHEQUESDEV As Global.System.Data.DataColumn
        
        Private columnCUA_CHEQUESDEV2 As Global.System.Data.DataColumn
        
        Private columnCUA_APORTES As Global.System.Data.DataColumn
        
        Private columnCUA_APORTES2 As Global.System.Data.DataColumn
        
        Private columnCUA_OTROSINGRESOS As Global.System.Data.DataColumn
        
        Private columnCUA_OTROSINGRESOS2 As Global.System.Data.DataColumn
        
        Private columnCUA_PAGOSCHE As Global.System.Data.DataColumn
        
        Private columnCUA_PAGOSCHE2 As Global.System.Data.DataColumn
        
        Private columnCUA_PAGOSCAR As Global.System.Data.DataColumn
        
        Private columnCUA_PAGOSCAR2 As Global.System.Data.DataColumn
        
        Private columnCUA_CHEQUESCAR As Global.System.Data.DataColumn
        
        Private columnCUA_CHEQUESCAR2 As Global.System.Data.DataColumn
        
        Private columnCUA_TRANSFERENCIASPOS As Global.System.Data.DataColumn
        
        Private columnCUA_TRANSFERENCIASPOS2 As Global.System.Data.DataColumn
        
        Private columnCUA_TRANSFERENCIASNEG As Global.System.Data.DataColumn
        
        Private columnCUA_TRANSFERENCIASNEG2 As Global.System.Data.DataColumn
        
        Private columnCUA_PORCOLOCAR As Global.System.Data.DataColumn
        
        Private columnCUA_PORCOLOCAR2 As Global.System.Data.DataColumn
        
        Private columnCUA_COLOCACIONES As Global.System.Data.DataColumn
        
        Private columnCUA_COLOCACIONES2 As Global.System.Data.DataColumn
        
        Private columnCUA_SALDO As Global.System.Data.DataColumn
        
        Private columnCUA_SALDO2 As Global.System.Data.DataColumn
        
        Private columnCUA_EGRESOSCHE As Global.System.Data.DataColumn
        
        Private columnCUA_PROXIMOSALDO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TESCUA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLA_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLA_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_SALDOINIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_SALDOINI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_RESCATESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_RESCATES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_RESCATES2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_RESCATES2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_RECAUDACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_RECAUDACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_RECAUDACION2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_RECAUDACION2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_CHEQUESDEVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_CHEQUESDEV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_CHEQUESDEV2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_CHEQUESDEV2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_APORTESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_APORTES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_APORTES2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_APORTES2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_OTROSINGRESOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_OTROSINGRESOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_OTROSINGRESOS2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_OTROSINGRESOS2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_PAGOSCHEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_PAGOSCHE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_PAGOSCHE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_PAGOSCHE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_PAGOSCARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_PAGOSCAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_PAGOSCAR2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_PAGOSCAR2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_CHEQUESCARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_CHEQUESCAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_CHEQUESCAR2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_CHEQUESCAR2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_TRANSFERENCIASPOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_TRANSFERENCIASPOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_TRANSFERENCIASPOS2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_TRANSFERENCIASPOS2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_TRANSFERENCIASNEGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_TRANSFERENCIASNEG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_TRANSFERENCIASNEG2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_TRANSFERENCIASNEG2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_PORCOLOCARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_PORCOLOCAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_PORCOLOCAR2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_PORCOLOCAR2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_COLOCACIONESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_COLOCACIONES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_COLOCACIONES2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_COLOCACIONES2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_SALDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_SALDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_SALDO2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_SALDO2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_EGRESOSCHEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_EGRESOSCHE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_PROXIMOSALDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_PROXIMOSALDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TESCUARow
            Get
                Return CType(Me.Rows(index),TESCUARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESCUARowChanging As TESCUARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESCUARowChanged As TESCUARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESCUARowDeleting As TESCUARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESCUARowDeleted As TESCUARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTESCUARow(ByVal row As TESCUARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTESCUARow( _
                    ByVal PLA_CODIGO As Long,  _
                    ByVal CTE_CODIGO As String,  _
                    ByVal CUA_SALDOINI As Decimal,  _
                    ByVal CUA_RESCATES As Decimal,  _
                    ByVal CUA_RESCATES2 As Decimal,  _
                    ByVal CUA_RECAUDACION As Decimal,  _
                    ByVal CUA_RECAUDACION2 As Decimal,  _
                    ByVal CUA_CHEQUESDEV As Decimal,  _
                    ByVal CUA_CHEQUESDEV2 As Decimal,  _
                    ByVal CUA_APORTES As Decimal,  _
                    ByVal CUA_APORTES2 As Decimal,  _
                    ByVal CUA_OTROSINGRESOS As Decimal,  _
                    ByVal CUA_OTROSINGRESOS2 As Decimal,  _
                    ByVal CUA_PAGOSCHE As Decimal,  _
                    ByVal CUA_PAGOSCHE2 As Decimal,  _
                    ByVal CUA_PAGOSCAR As Decimal,  _
                    ByVal CUA_PAGOSCAR2 As Decimal,  _
                    ByVal CUA_CHEQUESCAR As Decimal,  _
                    ByVal CUA_CHEQUESCAR2 As Decimal,  _
                    ByVal CUA_TRANSFERENCIASPOS As Decimal,  _
                    ByVal CUA_TRANSFERENCIASPOS2 As Decimal,  _
                    ByVal CUA_TRANSFERENCIASNEG As Decimal,  _
                    ByVal CUA_TRANSFERENCIASNEG2 As Decimal,  _
                    ByVal CUA_PORCOLOCAR As Decimal,  _
                    ByVal CUA_PORCOLOCAR2 As Decimal,  _
                    ByVal CUA_COLOCACIONES As Decimal,  _
                    ByVal CUA_COLOCACIONES2 As Decimal,  _
                    ByVal CUA_SALDO As Decimal,  _
                    ByVal CUA_SALDO2 As Decimal,  _
                    ByVal CUA_EGRESOSCHE As Decimal,  _
                    ByVal CUA_PROXIMOSALDO As Decimal) As TESCUARow
            Dim rowTESCUARow As TESCUARow = CType(Me.NewRow,TESCUARow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PLA_CODIGO, CTE_CODIGO, CUA_SALDOINI, CUA_RESCATES, CUA_RESCATES2, CUA_RECAUDACION, CUA_RECAUDACION2, CUA_CHEQUESDEV, CUA_CHEQUESDEV2, CUA_APORTES, CUA_APORTES2, CUA_OTROSINGRESOS, CUA_OTROSINGRESOS2, CUA_PAGOSCHE, CUA_PAGOSCHE2, CUA_PAGOSCAR, CUA_PAGOSCAR2, CUA_CHEQUESCAR, CUA_CHEQUESCAR2, CUA_TRANSFERENCIASPOS, CUA_TRANSFERENCIASPOS2, CUA_TRANSFERENCIASNEG, CUA_TRANSFERENCIASNEG2, CUA_PORCOLOCAR, CUA_PORCOLOCAR2, CUA_COLOCACIONES, CUA_COLOCACIONES2, CUA_SALDO, CUA_SALDO2, CUA_EGRESOSCHE, CUA_PROXIMOSALDO}
            rowTESCUARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTESCUARow)
            Return rowTESCUARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCUA_CODIGO(ByVal CUA_CODIGO As Decimal) As TESCUARow
            Return CType(Me.Rows.Find(New Object() {CUA_CODIGO}),TESCUARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TESCUADataTable = CType(MyBase.Clone,TESCUADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TESCUADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCUA_CODIGO = MyBase.Columns("CUA_CODIGO")
            Me.columnPLA_CODIGO = MyBase.Columns("PLA_CODIGO")
            Me.columnCTE_CODIGO = MyBase.Columns("CTE_CODIGO")
            Me.columnCUA_SALDOINI = MyBase.Columns("CUA_SALDOINI")
            Me.columnCUA_RESCATES = MyBase.Columns("CUA_RESCATES")
            Me.columnCUA_RESCATES2 = MyBase.Columns("CUA_RESCATES2")
            Me.columnCUA_RECAUDACION = MyBase.Columns("CUA_RECAUDACION")
            Me.columnCUA_RECAUDACION2 = MyBase.Columns("CUA_RECAUDACION2")
            Me.columnCUA_CHEQUESDEV = MyBase.Columns("CUA_CHEQUESDEV")
            Me.columnCUA_CHEQUESDEV2 = MyBase.Columns("CUA_CHEQUESDEV2")
            Me.columnCUA_APORTES = MyBase.Columns("CUA_APORTES")
            Me.columnCUA_APORTES2 = MyBase.Columns("CUA_APORTES2")
            Me.columnCUA_OTROSINGRESOS = MyBase.Columns("CUA_OTROSINGRESOS")
            Me.columnCUA_OTROSINGRESOS2 = MyBase.Columns("CUA_OTROSINGRESOS2")
            Me.columnCUA_PAGOSCHE = MyBase.Columns("CUA_PAGOSCHE")
            Me.columnCUA_PAGOSCHE2 = MyBase.Columns("CUA_PAGOSCHE2")
            Me.columnCUA_PAGOSCAR = MyBase.Columns("CUA_PAGOSCAR")
            Me.columnCUA_PAGOSCAR2 = MyBase.Columns("CUA_PAGOSCAR2")
            Me.columnCUA_CHEQUESCAR = MyBase.Columns("CUA_CHEQUESCAR")
            Me.columnCUA_CHEQUESCAR2 = MyBase.Columns("CUA_CHEQUESCAR2")
            Me.columnCUA_TRANSFERENCIASPOS = MyBase.Columns("CUA_TRANSFERENCIASPOS")
            Me.columnCUA_TRANSFERENCIASPOS2 = MyBase.Columns("CUA_TRANSFERENCIASPOS2")
            Me.columnCUA_TRANSFERENCIASNEG = MyBase.Columns("CUA_TRANSFERENCIASNEG")
            Me.columnCUA_TRANSFERENCIASNEG2 = MyBase.Columns("CUA_TRANSFERENCIASNEG2")
            Me.columnCUA_PORCOLOCAR = MyBase.Columns("CUA_PORCOLOCAR")
            Me.columnCUA_PORCOLOCAR2 = MyBase.Columns("CUA_PORCOLOCAR2")
            Me.columnCUA_COLOCACIONES = MyBase.Columns("CUA_COLOCACIONES")
            Me.columnCUA_COLOCACIONES2 = MyBase.Columns("CUA_COLOCACIONES2")
            Me.columnCUA_SALDO = MyBase.Columns("CUA_SALDO")
            Me.columnCUA_SALDO2 = MyBase.Columns("CUA_SALDO2")
            Me.columnCUA_EGRESOSCHE = MyBase.Columns("CUA_EGRESOSCHE")
            Me.columnCUA_PROXIMOSALDO = MyBase.Columns("CUA_PROXIMOSALDO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCUA_CODIGO = New Global.System.Data.DataColumn("CUA_CODIGO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_CODIGO)
            Me.columnPLA_CODIGO = New Global.System.Data.DataColumn("PLA_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLA_CODIGO)
            Me.columnCTE_CODIGO = New Global.System.Data.DataColumn("CTE_CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CODIGO)
            Me.columnCUA_SALDOINI = New Global.System.Data.DataColumn("CUA_SALDOINI", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_SALDOINI)
            Me.columnCUA_RESCATES = New Global.System.Data.DataColumn("CUA_RESCATES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_RESCATES)
            Me.columnCUA_RESCATES2 = New Global.System.Data.DataColumn("CUA_RESCATES2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_RESCATES2)
            Me.columnCUA_RECAUDACION = New Global.System.Data.DataColumn("CUA_RECAUDACION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_RECAUDACION)
            Me.columnCUA_RECAUDACION2 = New Global.System.Data.DataColumn("CUA_RECAUDACION2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_RECAUDACION2)
            Me.columnCUA_CHEQUESDEV = New Global.System.Data.DataColumn("CUA_CHEQUESDEV", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_CHEQUESDEV)
            Me.columnCUA_CHEQUESDEV2 = New Global.System.Data.DataColumn("CUA_CHEQUESDEV2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_CHEQUESDEV2)
            Me.columnCUA_APORTES = New Global.System.Data.DataColumn("CUA_APORTES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_APORTES)
            Me.columnCUA_APORTES2 = New Global.System.Data.DataColumn("CUA_APORTES2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_APORTES2)
            Me.columnCUA_OTROSINGRESOS = New Global.System.Data.DataColumn("CUA_OTROSINGRESOS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_OTROSINGRESOS)
            Me.columnCUA_OTROSINGRESOS2 = New Global.System.Data.DataColumn("CUA_OTROSINGRESOS2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_OTROSINGRESOS2)
            Me.columnCUA_PAGOSCHE = New Global.System.Data.DataColumn("CUA_PAGOSCHE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_PAGOSCHE)
            Me.columnCUA_PAGOSCHE2 = New Global.System.Data.DataColumn("CUA_PAGOSCHE2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_PAGOSCHE2)
            Me.columnCUA_PAGOSCAR = New Global.System.Data.DataColumn("CUA_PAGOSCAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_PAGOSCAR)
            Me.columnCUA_PAGOSCAR2 = New Global.System.Data.DataColumn("CUA_PAGOSCAR2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_PAGOSCAR2)
            Me.columnCUA_CHEQUESCAR = New Global.System.Data.DataColumn("CUA_CHEQUESCAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_CHEQUESCAR)
            Me.columnCUA_CHEQUESCAR2 = New Global.System.Data.DataColumn("CUA_CHEQUESCAR2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_CHEQUESCAR2)
            Me.columnCUA_TRANSFERENCIASPOS = New Global.System.Data.DataColumn("CUA_TRANSFERENCIASPOS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_TRANSFERENCIASPOS)
            Me.columnCUA_TRANSFERENCIASPOS2 = New Global.System.Data.DataColumn("CUA_TRANSFERENCIASPOS2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_TRANSFERENCIASPOS2)
            Me.columnCUA_TRANSFERENCIASNEG = New Global.System.Data.DataColumn("CUA_TRANSFERENCIASNEG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_TRANSFERENCIASNEG)
            Me.columnCUA_TRANSFERENCIASNEG2 = New Global.System.Data.DataColumn("CUA_TRANSFERENCIASNEG2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_TRANSFERENCIASNEG2)
            Me.columnCUA_PORCOLOCAR = New Global.System.Data.DataColumn("CUA_PORCOLOCAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_PORCOLOCAR)
            Me.columnCUA_PORCOLOCAR2 = New Global.System.Data.DataColumn("CUA_PORCOLOCAR2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_PORCOLOCAR2)
            Me.columnCUA_COLOCACIONES = New Global.System.Data.DataColumn("CUA_COLOCACIONES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_COLOCACIONES)
            Me.columnCUA_COLOCACIONES2 = New Global.System.Data.DataColumn("CUA_COLOCACIONES2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_COLOCACIONES2)
            Me.columnCUA_SALDO = New Global.System.Data.DataColumn("CUA_SALDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_SALDO)
            Me.columnCUA_SALDO2 = New Global.System.Data.DataColumn("CUA_SALDO2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_SALDO2)
            Me.columnCUA_EGRESOSCHE = New Global.System.Data.DataColumn("CUA_EGRESOSCHE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_EGRESOSCHE)
            Me.columnCUA_PROXIMOSALDO = New Global.System.Data.DataColumn("CUA_PROXIMOSALDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_PROXIMOSALDO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCUA_CODIGO}, true))
            Me.columnCUA_CODIGO.AutoIncrement = true
            Me.columnCUA_CODIGO.AutoIncrementSeed = -1
            Me.columnCUA_CODIGO.AutoIncrementStep = -1
            Me.columnCUA_CODIGO.AllowDBNull = false
            Me.columnCUA_CODIGO.ReadOnly = true
            Me.columnCUA_CODIGO.Unique = true
            Me.columnCTE_CODIGO.MaxLength = 7
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTESCUARow() As TESCUARow
            Return CType(Me.NewRow,TESCUARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TESCUARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TESCUARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TESCUARowChangedEvent) Is Nothing) Then
                RaiseEvent TESCUARowChanged(Me, New TESCUARowChangeEvent(CType(e.Row,TESCUARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TESCUARowChangingEvent) Is Nothing) Then
                RaiseEvent TESCUARowChanging(Me, New TESCUARowChangeEvent(CType(e.Row,TESCUARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TESCUARowDeletedEvent) Is Nothing) Then
                RaiseEvent TESCUARowDeleted(Me, New TESCUARowChangeEvent(CType(e.Row,TESCUARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TESCUARowDeletingEvent) Is Nothing) Then
                RaiseEvent TESCUARowDeleting(Me, New TESCUARowChangeEvent(CType(e.Row,TESCUARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTESCUARow(ByVal row As TESCUARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALCUA = New dsWALCUA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TESCUADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class Actualiza_PlanillaDataTable
        Inherits Global.System.Data.TypedTableBase(Of Actualiza_PlanillaRow)
        
        Private columnPLA_CODIGO As Global.System.Data.DataColumn
        
        Private columnTotal1 As Global.System.Data.DataColumn
        
        Private columnTotal2 As Global.System.Data.DataColumn
        
        Private columnTotal3 As Global.System.Data.DataColumn
        
        Private columnTotal4 As Global.System.Data.DataColumn
        
        Private columnTotal5 As Global.System.Data.DataColumn
        
        Private columnTotal6 As Global.System.Data.DataColumn
        
        Private columnTotal7 As Global.System.Data.DataColumn
        
        Private columnTotal8 As Global.System.Data.DataColumn
        
        Private columnTotal9 As Global.System.Data.DataColumn
        
        Private columnTotal10 As Global.System.Data.DataColumn
        
        Private columnTotal11 As Global.System.Data.DataColumn
        
        Private columnTotal12 As Global.System.Data.DataColumn
        
        Private columntotal13 As Global.System.Data.DataColumn
        
        Private columntotal14 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Actualiza_Planilla"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLA_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLA_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total6Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal6
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total7Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal7
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total8Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal8
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total9Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal9
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total11Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal11
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Total12Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotal12
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property total13Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal13
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property total14Column() As Global.System.Data.DataColumn
            Get
                Return Me.columntotal14
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As Actualiza_PlanillaRow
            Get
                Return CType(Me.Rows(index),Actualiza_PlanillaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Actualiza_PlanillaRowChanging As Actualiza_PlanillaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Actualiza_PlanillaRowChanged As Actualiza_PlanillaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Actualiza_PlanillaRowDeleting As Actualiza_PlanillaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event Actualiza_PlanillaRowDeleted As Actualiza_PlanillaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddActualiza_PlanillaRow(ByVal row As Actualiza_PlanillaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddActualiza_PlanillaRow(ByVal PLA_CODIGO As Long, ByVal Total1 As Decimal, ByVal Total2 As Decimal, ByVal Total3 As Decimal, ByVal Total4 As Decimal, ByVal Total5 As Decimal, ByVal Total6 As Decimal, ByVal Total7 As Decimal, ByVal Total8 As Decimal, ByVal Total9 As Decimal, ByVal Total10 As Decimal, ByVal Total11 As Decimal, ByVal Total12 As Decimal, ByVal total13 As Decimal, ByVal total14 As Decimal) As Actualiza_PlanillaRow
            Dim rowActualiza_PlanillaRow As Actualiza_PlanillaRow = CType(Me.NewRow,Actualiza_PlanillaRow)
            Dim columnValuesArray() As Object = New Object() {PLA_CODIGO, Total1, Total2, Total3, Total4, Total5, Total6, Total7, Total8, Total9, Total10, Total11, Total12, total13, total14}
            rowActualiza_PlanillaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowActualiza_PlanillaRow)
            Return rowActualiza_PlanillaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As Actualiza_PlanillaDataTable = CType(MyBase.Clone,Actualiza_PlanillaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New Actualiza_PlanillaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPLA_CODIGO = MyBase.Columns("PLA_CODIGO")
            Me.columnTotal1 = MyBase.Columns("Total1")
            Me.columnTotal2 = MyBase.Columns("Total2")
            Me.columnTotal3 = MyBase.Columns("Total3")
            Me.columnTotal4 = MyBase.Columns("Total4")
            Me.columnTotal5 = MyBase.Columns("Total5")
            Me.columnTotal6 = MyBase.Columns("Total6")
            Me.columnTotal7 = MyBase.Columns("Total7")
            Me.columnTotal8 = MyBase.Columns("Total8")
            Me.columnTotal9 = MyBase.Columns("Total9")
            Me.columnTotal10 = MyBase.Columns("Total10")
            Me.columnTotal11 = MyBase.Columns("Total11")
            Me.columnTotal12 = MyBase.Columns("Total12")
            Me.columntotal13 = MyBase.Columns("total13")
            Me.columntotal14 = MyBase.Columns("total14")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPLA_CODIGO = New Global.System.Data.DataColumn("PLA_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLA_CODIGO)
            Me.columnTotal1 = New Global.System.Data.DataColumn("Total1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal1)
            Me.columnTotal2 = New Global.System.Data.DataColumn("Total2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal2)
            Me.columnTotal3 = New Global.System.Data.DataColumn("Total3", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal3)
            Me.columnTotal4 = New Global.System.Data.DataColumn("Total4", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal4)
            Me.columnTotal5 = New Global.System.Data.DataColumn("Total5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal5)
            Me.columnTotal6 = New Global.System.Data.DataColumn("Total6", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal6)
            Me.columnTotal7 = New Global.System.Data.DataColumn("Total7", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal7)
            Me.columnTotal8 = New Global.System.Data.DataColumn("Total8", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal8)
            Me.columnTotal9 = New Global.System.Data.DataColumn("Total9", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal9)
            Me.columnTotal10 = New Global.System.Data.DataColumn("Total10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal10)
            Me.columnTotal11 = New Global.System.Data.DataColumn("Total11", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal11)
            Me.columnTotal12 = New Global.System.Data.DataColumn("Total12", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotal12)
            Me.columntotal13 = New Global.System.Data.DataColumn("total13", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal13)
            Me.columntotal14 = New Global.System.Data.DataColumn("total14", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotal14)
            Me.columnPLA_CODIGO.AllowDBNull = false
            Me.columnTotal1.ReadOnly = true
            Me.columnTotal2.ReadOnly = true
            Me.columnTotal3.ReadOnly = true
            Me.columnTotal4.ReadOnly = true
            Me.columnTotal5.ReadOnly = true
            Me.columnTotal6.ReadOnly = true
            Me.columnTotal7.ReadOnly = true
            Me.columnTotal8.ReadOnly = true
            Me.columnTotal9.ReadOnly = true
            Me.columnTotal10.ReadOnly = true
            Me.columnTotal11.ReadOnly = true
            Me.columnTotal12.ReadOnly = true
            Me.columntotal13.ReadOnly = true
            Me.columntotal14.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewActualiza_PlanillaRow() As Actualiza_PlanillaRow
            Return CType(Me.NewRow,Actualiza_PlanillaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New Actualiza_PlanillaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(Actualiza_PlanillaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.Actualiza_PlanillaRowChangedEvent) Is Nothing) Then
                RaiseEvent Actualiza_PlanillaRowChanged(Me, New Actualiza_PlanillaRowChangeEvent(CType(e.Row,Actualiza_PlanillaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.Actualiza_PlanillaRowChangingEvent) Is Nothing) Then
                RaiseEvent Actualiza_PlanillaRowChanging(Me, New Actualiza_PlanillaRowChangeEvent(CType(e.Row,Actualiza_PlanillaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.Actualiza_PlanillaRowDeletedEvent) Is Nothing) Then
                RaiseEvent Actualiza_PlanillaRowDeleted(Me, New Actualiza_PlanillaRowChangeEvent(CType(e.Row,Actualiza_PlanillaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.Actualiza_PlanillaRowDeletingEvent) Is Nothing) Then
                RaiseEvent Actualiza_PlanillaRowDeleting(Me, New Actualiza_PlanillaRowChangeEvent(CType(e.Row,Actualiza_PlanillaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveActualiza_PlanillaRow(ByVal row As Actualiza_PlanillaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALCUA = New dsWALCUA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "Actualiza_PlanillaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TESDOPDataTable
        Inherits Global.System.Data.TypedTableBase(Of TESDOPRow)
        
        Private columnDOP_CODIGO As Global.System.Data.DataColumn
        
        Private columnDPL_CODIGO As Global.System.Data.DataColumn
        
        Private columnCOL_CODIGO As Global.System.Data.DataColumn
        
        Private columnDOP_MONTO As Global.System.Data.DataColumn
        
        Private columnDOP_TIPO As Global.System.Data.DataColumn
        
        Private columnDOP_NUMERO As Global.System.Data.DataColumn
        
        Private columnDOP_GLOSAADIC As Global.System.Data.DataColumn
        
        Private columnDOP_AUDITORIA As Global.System.Data.DataColumn
        
        Private columnDOP_TIPOREC As Global.System.Data.DataColumn
        
        Private columnDAZ_CODIGO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TESDOP"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPL_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPL_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COL_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOL_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_MONTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_MONTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_NUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_NUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_GLOSAADICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_GLOSAADIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_AUDITORIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_AUDITORIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_TIPORECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_TIPOREC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TESDOPRow
            Get
                Return CType(Me.Rows(index),TESDOPRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESDOPRowChanging As TESDOPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESDOPRowChanged As TESDOPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESDOPRowDeleting As TESDOPRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESDOPRowDeleted As TESDOPRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTESDOPRow(ByVal row As TESDOPRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTESDOPRow(ByVal DPL_CODIGO As Long, ByVal COL_CODIGO As Integer, ByVal DOP_MONTO As Decimal, ByVal DOP_TIPO As String, ByVal DOP_NUMERO As String, ByVal DOP_GLOSAADIC As String, ByVal DOP_AUDITORIA As String, ByVal DOP_TIPOREC As String, ByVal DAZ_CODIGO As Long) As TESDOPRow
            Dim rowTESDOPRow As TESDOPRow = CType(Me.NewRow,TESDOPRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, DPL_CODIGO, COL_CODIGO, DOP_MONTO, DOP_TIPO, DOP_NUMERO, DOP_GLOSAADIC, DOP_AUDITORIA, DOP_TIPOREC, DAZ_CODIGO}
            rowTESDOPRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTESDOPRow)
            Return rowTESDOPRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByDOP_CODIGO(ByVal DOP_CODIGO As Long) As TESDOPRow
            Return CType(Me.Rows.Find(New Object() {DOP_CODIGO}),TESDOPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TESDOPDataTable = CType(MyBase.Clone,TESDOPDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TESDOPDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDOP_CODIGO = MyBase.Columns("DOP_CODIGO")
            Me.columnDPL_CODIGO = MyBase.Columns("DPL_CODIGO")
            Me.columnCOL_CODIGO = MyBase.Columns("COL_CODIGO")
            Me.columnDOP_MONTO = MyBase.Columns("DOP_MONTO")
            Me.columnDOP_TIPO = MyBase.Columns("DOP_TIPO")
            Me.columnDOP_NUMERO = MyBase.Columns("DOP_NUMERO")
            Me.columnDOP_GLOSAADIC = MyBase.Columns("DOP_GLOSAADIC")
            Me.columnDOP_AUDITORIA = MyBase.Columns("DOP_AUDITORIA")
            Me.columnDOP_TIPOREC = MyBase.Columns("DOP_TIPOREC")
            Me.columnDAZ_CODIGO = MyBase.Columns("DAZ_CODIGO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDOP_CODIGO = New Global.System.Data.DataColumn("DOP_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_CODIGO)
            Me.columnDPL_CODIGO = New Global.System.Data.DataColumn("DPL_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPL_CODIGO)
            Me.columnCOL_CODIGO = New Global.System.Data.DataColumn("COL_CODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOL_CODIGO)
            Me.columnDOP_MONTO = New Global.System.Data.DataColumn("DOP_MONTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_MONTO)
            Me.columnDOP_TIPO = New Global.System.Data.DataColumn("DOP_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_TIPO)
            Me.columnDOP_NUMERO = New Global.System.Data.DataColumn("DOP_NUMERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_NUMERO)
            Me.columnDOP_GLOSAADIC = New Global.System.Data.DataColumn("DOP_GLOSAADIC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_GLOSAADIC)
            Me.columnDOP_AUDITORIA = New Global.System.Data.DataColumn("DOP_AUDITORIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_AUDITORIA)
            Me.columnDOP_TIPOREC = New Global.System.Data.DataColumn("DOP_TIPOREC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_TIPOREC)
            Me.columnDAZ_CODIGO = New Global.System.Data.DataColumn("DAZ_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_CODIGO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDOP_CODIGO}, true))
            Me.columnDOP_CODIGO.AutoIncrement = true
            Me.columnDOP_CODIGO.AutoIncrementSeed = -1
            Me.columnDOP_CODIGO.AutoIncrementStep = -1
            Me.columnDOP_CODIGO.AllowDBNull = false
            Me.columnDOP_CODIGO.ReadOnly = true
            Me.columnDOP_CODIGO.Unique = true
            Me.columnDOP_TIPO.MaxLength = 1
            Me.columnDOP_NUMERO.MaxLength = 10
            Me.columnDOP_GLOSAADIC.MaxLength = 50
            Me.columnDOP_AUDITORIA.MaxLength = 44
            Me.columnDOP_TIPOREC.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTESDOPRow() As TESDOPRow
            Return CType(Me.NewRow,TESDOPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TESDOPRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TESDOPRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TESDOPRowChangedEvent) Is Nothing) Then
                RaiseEvent TESDOPRowChanged(Me, New TESDOPRowChangeEvent(CType(e.Row,TESDOPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TESDOPRowChangingEvent) Is Nothing) Then
                RaiseEvent TESDOPRowChanging(Me, New TESDOPRowChangeEvent(CType(e.Row,TESDOPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TESDOPRowDeletedEvent) Is Nothing) Then
                RaiseEvent TESDOPRowDeleted(Me, New TESDOPRowChangeEvent(CType(e.Row,TESDOPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TESDOPRowDeletingEvent) Is Nothing) Then
                RaiseEvent TESDOPRowDeleting(Me, New TESDOPRowChangeEvent(CType(e.Row,TESDOPRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTESDOPRow(ByVal row As TESDOPRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALCUA = New dsWALCUA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TESDOPDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TESPARDataTable
        Inherits Global.System.Data.TypedTableBase(Of TESPARRow)
        
        Private columnPAR_ACTUALIZA As Global.System.Data.DataColumn
        
        Private columnPAR_FECHAPRO As Global.System.Data.DataColumn
        
        Private columnPAR_FECHAACT As Global.System.Data.DataColumn
        
        Private columnPAR_AUDITORIA As Global.System.Data.DataColumn
        
        Private columnPAR_UNIDADPA As Global.System.Data.DataColumn
        
        Private columnPAR_PLANILLA As Global.System.Data.DataColumn
        
        Private columnPAR_ESTADOPLA As Global.System.Data.DataColumn
        
        Private columnPAR_LIMITECIERRE As Global.System.Data.DataColumn
        
        Private columnPAR_PLANILLAFONDO As Global.System.Data.DataColumn
        
        Private columnPAR_ESTADOPLAFONDO As Global.System.Data.DataColumn
        
        Private columnPAR_FECHACIERRE As Global.System.Data.DataColumn
        
        Private columnPAR_CUOTA As Global.System.Data.DataColumn
        
        Private columnPAR_FECHAPROFON As Global.System.Data.DataColumn
        
        Private columnPAR_MANDANTE As Global.System.Data.DataColumn
        
        Private columnPAR_SOCIEDAD As Global.System.Data.DataColumn
        
        Private columnPAR_CAJATES As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TESPAR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAR_ACTUALIZAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_ACTUALIZA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAR_FECHAPROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_FECHAPRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAR_FECHAACTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_FECHAACT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAR_AUDITORIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_AUDITORIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAR_UNIDADPAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_UNIDADPA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAR_PLANILLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_PLANILLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAR_ESTADOPLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_ESTADOPLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAR_LIMITECIERREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_LIMITECIERRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAR_PLANILLAFONDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_PLANILLAFONDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAR_ESTADOPLAFONDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_ESTADOPLAFONDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAR_FECHACIERREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_FECHACIERRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAR_CUOTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_CUOTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAR_FECHAPROFONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_FECHAPROFON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAR_MANDANTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_MANDANTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAR_SOCIEDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_SOCIEDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAR_CAJATESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAR_CAJATES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TESPARRow
            Get
                Return CType(Me.Rows(index),TESPARRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESPARRowChanging As TESPARRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESPARRowChanged As TESPARRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESPARRowDeleting As TESPARRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESPARRowDeleted As TESPARRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTESPARRow(ByVal row As TESPARRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTESPARRow( _
                    ByVal PAR_ACTUALIZA As Boolean,  _
                    ByVal PAR_FECHAPRO As Date,  _
                    ByVal PAR_FECHAACT As Date,  _
                    ByVal PAR_AUDITORIA As String,  _
                    ByVal PAR_UNIDADPA As Integer,  _
                    ByVal PAR_PLANILLA As Integer,  _
                    ByVal PAR_ESTADOPLA As String,  _
                    ByVal PAR_LIMITECIERRE As Single,  _
                    ByVal PAR_PLANILLAFONDO As Integer,  _
                    ByVal PAR_ESTADOPLAFONDO As String,  _
                    ByVal PAR_FECHACIERRE As Date,  _
                    ByVal PAR_CUOTA As Decimal,  _
                    ByVal PAR_FECHAPROFON As Date,  _
                    ByVal PAR_MANDANTE As String,  _
                    ByVal PAR_SOCIEDAD As String,  _
                    ByVal PAR_CAJATES As String) As TESPARRow
            Dim rowTESPARRow As TESPARRow = CType(Me.NewRow,TESPARRow)
            Dim columnValuesArray() As Object = New Object() {PAR_ACTUALIZA, PAR_FECHAPRO, PAR_FECHAACT, PAR_AUDITORIA, PAR_UNIDADPA, PAR_PLANILLA, PAR_ESTADOPLA, PAR_LIMITECIERRE, PAR_PLANILLAFONDO, PAR_ESTADOPLAFONDO, PAR_FECHACIERRE, PAR_CUOTA, PAR_FECHAPROFON, PAR_MANDANTE, PAR_SOCIEDAD, PAR_CAJATES}
            rowTESPARRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTESPARRow)
            Return rowTESPARRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByPAR_PLANILLA(ByVal PAR_PLANILLA As Integer) As TESPARRow
            Return CType(Me.Rows.Find(New Object() {PAR_PLANILLA}),TESPARRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TESPARDataTable = CType(MyBase.Clone,TESPARDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TESPARDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPAR_ACTUALIZA = MyBase.Columns("PAR_ACTUALIZA")
            Me.columnPAR_FECHAPRO = MyBase.Columns("PAR_FECHAPRO")
            Me.columnPAR_FECHAACT = MyBase.Columns("PAR_FECHAACT")
            Me.columnPAR_AUDITORIA = MyBase.Columns("PAR_AUDITORIA")
            Me.columnPAR_UNIDADPA = MyBase.Columns("PAR_UNIDADPA")
            Me.columnPAR_PLANILLA = MyBase.Columns("PAR_PLANILLA")
            Me.columnPAR_ESTADOPLA = MyBase.Columns("PAR_ESTADOPLA")
            Me.columnPAR_LIMITECIERRE = MyBase.Columns("PAR_LIMITECIERRE")
            Me.columnPAR_PLANILLAFONDO = MyBase.Columns("PAR_PLANILLAFONDO")
            Me.columnPAR_ESTADOPLAFONDO = MyBase.Columns("PAR_ESTADOPLAFONDO")
            Me.columnPAR_FECHACIERRE = MyBase.Columns("PAR_FECHACIERRE")
            Me.columnPAR_CUOTA = MyBase.Columns("PAR_CUOTA")
            Me.columnPAR_FECHAPROFON = MyBase.Columns("PAR_FECHAPROFON")
            Me.columnPAR_MANDANTE = MyBase.Columns("PAR_MANDANTE")
            Me.columnPAR_SOCIEDAD = MyBase.Columns("PAR_SOCIEDAD")
            Me.columnPAR_CAJATES = MyBase.Columns("PAR_CAJATES")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPAR_ACTUALIZA = New Global.System.Data.DataColumn("PAR_ACTUALIZA", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_ACTUALIZA)
            Me.columnPAR_FECHAPRO = New Global.System.Data.DataColumn("PAR_FECHAPRO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_FECHAPRO)
            Me.columnPAR_FECHAACT = New Global.System.Data.DataColumn("PAR_FECHAACT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_FECHAACT)
            Me.columnPAR_AUDITORIA = New Global.System.Data.DataColumn("PAR_AUDITORIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_AUDITORIA)
            Me.columnPAR_UNIDADPA = New Global.System.Data.DataColumn("PAR_UNIDADPA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_UNIDADPA)
            Me.columnPAR_PLANILLA = New Global.System.Data.DataColumn("PAR_PLANILLA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_PLANILLA)
            Me.columnPAR_ESTADOPLA = New Global.System.Data.DataColumn("PAR_ESTADOPLA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_ESTADOPLA)
            Me.columnPAR_LIMITECIERRE = New Global.System.Data.DataColumn("PAR_LIMITECIERRE", GetType(Single), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_LIMITECIERRE)
            Me.columnPAR_PLANILLAFONDO = New Global.System.Data.DataColumn("PAR_PLANILLAFONDO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_PLANILLAFONDO)
            Me.columnPAR_ESTADOPLAFONDO = New Global.System.Data.DataColumn("PAR_ESTADOPLAFONDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_ESTADOPLAFONDO)
            Me.columnPAR_FECHACIERRE = New Global.System.Data.DataColumn("PAR_FECHACIERRE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_FECHACIERRE)
            Me.columnPAR_CUOTA = New Global.System.Data.DataColumn("PAR_CUOTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_CUOTA)
            Me.columnPAR_FECHAPROFON = New Global.System.Data.DataColumn("PAR_FECHAPROFON", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_FECHAPROFON)
            Me.columnPAR_MANDANTE = New Global.System.Data.DataColumn("PAR_MANDANTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_MANDANTE)
            Me.columnPAR_SOCIEDAD = New Global.System.Data.DataColumn("PAR_SOCIEDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_SOCIEDAD)
            Me.columnPAR_CAJATES = New Global.System.Data.DataColumn("PAR_CAJATES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAR_CAJATES)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnPAR_PLANILLA}, true))
            Me.columnPAR_AUDITORIA.MaxLength = 44
            Me.columnPAR_PLANILLA.AllowDBNull = false
            Me.columnPAR_PLANILLA.Unique = true
            Me.columnPAR_ESTADOPLA.MaxLength = 1
            Me.columnPAR_ESTADOPLAFONDO.MaxLength = 1
            Me.columnPAR_MANDANTE.MaxLength = 3
            Me.columnPAR_SOCIEDAD.MaxLength = 4
            Me.columnPAR_CAJATES.MaxLength = 16
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTESPARRow() As TESPARRow
            Return CType(Me.NewRow,TESPARRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TESPARRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TESPARRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TESPARRowChangedEvent) Is Nothing) Then
                RaiseEvent TESPARRowChanged(Me, New TESPARRowChangeEvent(CType(e.Row,TESPARRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TESPARRowChangingEvent) Is Nothing) Then
                RaiseEvent TESPARRowChanging(Me, New TESPARRowChangeEvent(CType(e.Row,TESPARRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TESPARRowDeletedEvent) Is Nothing) Then
                RaiseEvent TESPARRowDeleted(Me, New TESPARRowChangeEvent(CType(e.Row,TESPARRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TESPARRowDeletingEvent) Is Nothing) Then
                RaiseEvent TESPARRowDeleting(Me, New TESPARRowChangeEvent(CType(e.Row,TESPARRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTESPARRow(ByVal row As TESPARRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALCUA = New dsWALCUA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TESPARDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TESDAZDataTable
        Inherits Global.System.Data.TypedTableBase(Of TESDAZRow)
        
        Private columnDAZ_CODIGO As Global.System.Data.DataColumn
        
        Private columnDAZ_MANDANTE As Global.System.Data.DataColumn
        
        Private columnDAZ_SOCIEDAD As Global.System.Data.DataColumn
        
        Private columnDAZ_DOCCONT As Global.System.Data.DataColumn
        
        Private columnDAZ_EJERCICIO As Global.System.Data.DataColumn
        
        Private columnDAZ_CLASEDOC As Global.System.Data.DataColumn
        
        Private columnDAZ_CUENTABANCO As Global.System.Data.DataColumn
        
        Private columnDAZ_MONTO As Global.System.Data.DataColumn
        
        Private columnDAZ_MONTOMON As Global.System.Data.DataColumn
        
        Private columnDAZ_MONEDA As Global.System.Data.DataColumn
        
        Private columnDAZ_CONCEPTO As Global.System.Data.DataColumn
        
        Private columnDAZ_POSICION As Global.System.Data.DataColumn
        
        Private columnDAZ_CAJA As Global.System.Data.DataColumn
        
        Private columnDAZ_FECHADOC As Global.System.Data.DataColumn
        
        Private columnDAZ_TEXTOPOS As Global.System.Data.DataColumn
        
        Private columnDAZ_FECHAz As Global.System.Data.DataColumn
        
        Private columnDAZ_MEDIOPAGO As Global.System.Data.DataColumn
        
        Private columnDAZ_RETENCION As Global.System.Data.DataColumn
        
        Private columnDAZ_FECHADEP As Global.System.Data.DataColumn
        
        Private columnDAZ_DIAS As Global.System.Data.DataColumn
        
        Private columnDAZ_UNIDAD As Global.System.Data.DataColumn
        
        Private columnDAZ_VIA As Global.System.Data.DataColumn
        
        Private columnDAZ_CLAVEBANCO As Global.System.Data.DataColumn
        
        Private columnDAZ_ESTATUS As Global.System.Data.DataColumn
        
        Private columnDAZ_ENVIADOBANCO As Global.System.Data.DataColumn
        
        Private columnDAZ_ANULADO As Global.System.Data.DataColumn
        
        Private columnDAZ_FECHAANU As Global.System.Data.DataColumn
        
        Private columnDAZ_ESTADO As Global.System.Data.DataColumn
        
        Private columnPLA_CODIGO As Global.System.Data.DataColumn
        
        Private columnDAZ_FECHADIS As Global.System.Data.DataColumn
        
        Private columnDAZ_GLOSA As Global.System.Data.DataColumn
        
        Private columnDAZ_COLUMNA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TESDAZ"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_MANDANTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_MANDANTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_SOCIEDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_SOCIEDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_DOCCONTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_DOCCONT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_EJERCICIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_EJERCICIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_CLASEDOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_CLASEDOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_CUENTABANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_CUENTABANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_MONTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_MONTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_MONTOMONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_MONTOMON
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_MONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_MONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_CONCEPTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_CONCEPTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_POSICIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_POSICION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_CAJAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_CAJA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_FECHADOCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_FECHADOC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_TEXTOPOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_TEXTOPOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_FECHAzColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_FECHAz
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_MEDIOPAGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_MEDIOPAGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_RETENCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_RETENCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_FECHADEPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_FECHADEP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_DIASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_DIAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_UNIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_UNIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_VIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_VIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_CLAVEBANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_CLAVEBANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_ESTATUSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_ESTATUS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_ENVIADOBANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_ENVIADOBANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_ANULADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_ANULADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_FECHAANUColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_FECHAANU
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_ESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLA_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLA_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_FECHADISColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_FECHADIS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_GLOSAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_GLOSA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_COLUMNAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_COLUMNA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TESDAZRow
            Get
                Return CType(Me.Rows(index),TESDAZRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESDAZRowChanging As TESDAZRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESDAZRowChanged As TESDAZRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESDAZRowDeleting As TESDAZRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESDAZRowDeleted As TESDAZRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTESDAZRow(ByVal row As TESDAZRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTESDAZRow( _
                    ByVal DAZ_MANDANTE As Decimal,  _
                    ByVal DAZ_SOCIEDAD As String,  _
                    ByVal DAZ_DOCCONT As String,  _
                    ByVal DAZ_EJERCICIO As Decimal,  _
                    ByVal DAZ_CLASEDOC As String,  _
                    ByVal DAZ_CUENTABANCO As String,  _
                    ByVal DAZ_MONTO As Decimal,  _
                    ByVal DAZ_MONTOMON As Decimal,  _
                    ByVal DAZ_MONEDA As String,  _
                    ByVal DAZ_CONCEPTO As String,  _
                    ByVal DAZ_POSICION As String,  _
                    ByVal DAZ_CAJA As String,  _
                    ByVal DAZ_FECHADOC As Date,  _
                    ByVal DAZ_TEXTOPOS As String,  _
                    ByVal DAZ_FECHAz As Date,  _
                    ByVal DAZ_MEDIOPAGO As String,  _
                    ByVal DAZ_RETENCION As String,  _
                    ByVal DAZ_FECHADEP As Date,  _
                    ByVal DAZ_DIAS As Integer,  _
                    ByVal DAZ_UNIDAD As String,  _
                    ByVal DAZ_VIA As String,  _
                    ByVal DAZ_CLAVEBANCO As String,  _
                    ByVal DAZ_ESTATUS As String,  _
                    ByVal DAZ_ENVIADOBANCO As String,  _
                    ByVal DAZ_ANULADO As String,  _
                    ByVal DAZ_FECHAANU As Date,  _
                    ByVal DAZ_ESTADO As String,  _
                    ByVal PLA_CODIGO As Long,  _
                    ByVal DAZ_FECHADIS As Date,  _
                    ByVal DAZ_GLOSA As String,  _
                    ByVal DAZ_COLUMNA As Integer) As TESDAZRow
            Dim rowTESDAZRow As TESDAZRow = CType(Me.NewRow,TESDAZRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, DAZ_MANDANTE, DAZ_SOCIEDAD, DAZ_DOCCONT, DAZ_EJERCICIO, DAZ_CLASEDOC, DAZ_CUENTABANCO, DAZ_MONTO, DAZ_MONTOMON, DAZ_MONEDA, DAZ_CONCEPTO, DAZ_POSICION, DAZ_CAJA, DAZ_FECHADOC, DAZ_TEXTOPOS, DAZ_FECHAz, DAZ_MEDIOPAGO, DAZ_RETENCION, DAZ_FECHADEP, DAZ_DIAS, DAZ_UNIDAD, DAZ_VIA, DAZ_CLAVEBANCO, DAZ_ESTATUS, DAZ_ENVIADOBANCO, DAZ_ANULADO, DAZ_FECHAANU, DAZ_ESTADO, PLA_CODIGO, DAZ_FECHADIS, DAZ_GLOSA, DAZ_COLUMNA}
            rowTESDAZRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTESDAZRow)
            Return rowTESDAZRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByDAZ_CODIGO(ByVal DAZ_CODIGO As Long) As TESDAZRow
            Return CType(Me.Rows.Find(New Object() {DAZ_CODIGO}),TESDAZRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TESDAZDataTable = CType(MyBase.Clone,TESDAZDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TESDAZDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDAZ_CODIGO = MyBase.Columns("DAZ_CODIGO")
            Me.columnDAZ_MANDANTE = MyBase.Columns("DAZ_MANDANTE")
            Me.columnDAZ_SOCIEDAD = MyBase.Columns("DAZ_SOCIEDAD")
            Me.columnDAZ_DOCCONT = MyBase.Columns("DAZ_DOCCONT")
            Me.columnDAZ_EJERCICIO = MyBase.Columns("DAZ_EJERCICIO")
            Me.columnDAZ_CLASEDOC = MyBase.Columns("DAZ_CLASEDOC")
            Me.columnDAZ_CUENTABANCO = MyBase.Columns("DAZ_CUENTABANCO")
            Me.columnDAZ_MONTO = MyBase.Columns("DAZ_MONTO")
            Me.columnDAZ_MONTOMON = MyBase.Columns("DAZ_MONTOMON")
            Me.columnDAZ_MONEDA = MyBase.Columns("DAZ_MONEDA")
            Me.columnDAZ_CONCEPTO = MyBase.Columns("DAZ_CONCEPTO")
            Me.columnDAZ_POSICION = MyBase.Columns("DAZ_POSICION")
            Me.columnDAZ_CAJA = MyBase.Columns("DAZ_CAJA")
            Me.columnDAZ_FECHADOC = MyBase.Columns("DAZ_FECHADOC")
            Me.columnDAZ_TEXTOPOS = MyBase.Columns("DAZ_TEXTOPOS")
            Me.columnDAZ_FECHAz = MyBase.Columns("DAZ_FECHAz")
            Me.columnDAZ_MEDIOPAGO = MyBase.Columns("DAZ_MEDIOPAGO")
            Me.columnDAZ_RETENCION = MyBase.Columns("DAZ_RETENCION")
            Me.columnDAZ_FECHADEP = MyBase.Columns("DAZ_FECHADEP")
            Me.columnDAZ_DIAS = MyBase.Columns("DAZ_DIAS")
            Me.columnDAZ_UNIDAD = MyBase.Columns("DAZ_UNIDAD")
            Me.columnDAZ_VIA = MyBase.Columns("DAZ_VIA")
            Me.columnDAZ_CLAVEBANCO = MyBase.Columns("DAZ_CLAVEBANCO")
            Me.columnDAZ_ESTATUS = MyBase.Columns("DAZ_ESTATUS")
            Me.columnDAZ_ENVIADOBANCO = MyBase.Columns("DAZ_ENVIADOBANCO")
            Me.columnDAZ_ANULADO = MyBase.Columns("DAZ_ANULADO")
            Me.columnDAZ_FECHAANU = MyBase.Columns("DAZ_FECHAANU")
            Me.columnDAZ_ESTADO = MyBase.Columns("DAZ_ESTADO")
            Me.columnPLA_CODIGO = MyBase.Columns("PLA_CODIGO")
            Me.columnDAZ_FECHADIS = MyBase.Columns("DAZ_FECHADIS")
            Me.columnDAZ_GLOSA = MyBase.Columns("DAZ_GLOSA")
            Me.columnDAZ_COLUMNA = MyBase.Columns("DAZ_COLUMNA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDAZ_CODIGO = New Global.System.Data.DataColumn("DAZ_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_CODIGO)
            Me.columnDAZ_MANDANTE = New Global.System.Data.DataColumn("DAZ_MANDANTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_MANDANTE)
            Me.columnDAZ_SOCIEDAD = New Global.System.Data.DataColumn("DAZ_SOCIEDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_SOCIEDAD)
            Me.columnDAZ_DOCCONT = New Global.System.Data.DataColumn("DAZ_DOCCONT", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_DOCCONT)
            Me.columnDAZ_EJERCICIO = New Global.System.Data.DataColumn("DAZ_EJERCICIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_EJERCICIO)
            Me.columnDAZ_CLASEDOC = New Global.System.Data.DataColumn("DAZ_CLASEDOC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_CLASEDOC)
            Me.columnDAZ_CUENTABANCO = New Global.System.Data.DataColumn("DAZ_CUENTABANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_CUENTABANCO)
            Me.columnDAZ_MONTO = New Global.System.Data.DataColumn("DAZ_MONTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_MONTO)
            Me.columnDAZ_MONTOMON = New Global.System.Data.DataColumn("DAZ_MONTOMON", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_MONTOMON)
            Me.columnDAZ_MONEDA = New Global.System.Data.DataColumn("DAZ_MONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_MONEDA)
            Me.columnDAZ_CONCEPTO = New Global.System.Data.DataColumn("DAZ_CONCEPTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_CONCEPTO)
            Me.columnDAZ_POSICION = New Global.System.Data.DataColumn("DAZ_POSICION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_POSICION)
            Me.columnDAZ_CAJA = New Global.System.Data.DataColumn("DAZ_CAJA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_CAJA)
            Me.columnDAZ_FECHADOC = New Global.System.Data.DataColumn("DAZ_FECHADOC", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_FECHADOC)
            Me.columnDAZ_TEXTOPOS = New Global.System.Data.DataColumn("DAZ_TEXTOPOS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_TEXTOPOS)
            Me.columnDAZ_FECHAz = New Global.System.Data.DataColumn("DAZ_FECHAz", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_FECHAz)
            Me.columnDAZ_MEDIOPAGO = New Global.System.Data.DataColumn("DAZ_MEDIOPAGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_MEDIOPAGO)
            Me.columnDAZ_RETENCION = New Global.System.Data.DataColumn("DAZ_RETENCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_RETENCION)
            Me.columnDAZ_FECHADEP = New Global.System.Data.DataColumn("DAZ_FECHADEP", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_FECHADEP)
            Me.columnDAZ_DIAS = New Global.System.Data.DataColumn("DAZ_DIAS", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_DIAS)
            Me.columnDAZ_UNIDAD = New Global.System.Data.DataColumn("DAZ_UNIDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_UNIDAD)
            Me.columnDAZ_VIA = New Global.System.Data.DataColumn("DAZ_VIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_VIA)
            Me.columnDAZ_CLAVEBANCO = New Global.System.Data.DataColumn("DAZ_CLAVEBANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_CLAVEBANCO)
            Me.columnDAZ_ESTATUS = New Global.System.Data.DataColumn("DAZ_ESTATUS", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_ESTATUS)
            Me.columnDAZ_ENVIADOBANCO = New Global.System.Data.DataColumn("DAZ_ENVIADOBANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_ENVIADOBANCO)
            Me.columnDAZ_ANULADO = New Global.System.Data.DataColumn("DAZ_ANULADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_ANULADO)
            Me.columnDAZ_FECHAANU = New Global.System.Data.DataColumn("DAZ_FECHAANU", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_FECHAANU)
            Me.columnDAZ_ESTADO = New Global.System.Data.DataColumn("DAZ_ESTADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_ESTADO)
            Me.columnPLA_CODIGO = New Global.System.Data.DataColumn("PLA_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLA_CODIGO)
            Me.columnDAZ_FECHADIS = New Global.System.Data.DataColumn("DAZ_FECHADIS", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_FECHADIS)
            Me.columnDAZ_GLOSA = New Global.System.Data.DataColumn("DAZ_GLOSA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_GLOSA)
            Me.columnDAZ_COLUMNA = New Global.System.Data.DataColumn("DAZ_COLUMNA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_COLUMNA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDAZ_CODIGO}, true))
            Me.columnDAZ_CODIGO.AutoIncrement = true
            Me.columnDAZ_CODIGO.AutoIncrementSeed = -1
            Me.columnDAZ_CODIGO.AutoIncrementStep = -1
            Me.columnDAZ_CODIGO.AllowDBNull = false
            Me.columnDAZ_CODIGO.ReadOnly = true
            Me.columnDAZ_CODIGO.Unique = true
            Me.columnDAZ_SOCIEDAD.MaxLength = 4
            Me.columnDAZ_DOCCONT.MaxLength = 10
            Me.columnDAZ_CLASEDOC.MaxLength = 2
            Me.columnDAZ_CUENTABANCO.MaxLength = 10
            Me.columnDAZ_MONEDA.MaxLength = 5
            Me.columnDAZ_CONCEPTO.MaxLength = 2
            Me.columnDAZ_POSICION.MaxLength = 3
            Me.columnDAZ_CAJA.MaxLength = 16
            Me.columnDAZ_TEXTOPOS.MaxLength = 50
            Me.columnDAZ_MEDIOPAGO.MaxLength = 12
            Me.columnDAZ_RETENCION.MaxLength = 30
            Me.columnDAZ_UNIDAD.MaxLength = 20
            Me.columnDAZ_VIA.MaxLength = 1
            Me.columnDAZ_CLAVEBANCO.MaxLength = 5
            Me.columnDAZ_ESTATUS.MaxLength = 2
            Me.columnDAZ_ENVIADOBANCO.MaxLength = 1
            Me.columnDAZ_ANULADO.MaxLength = 1
            Me.columnDAZ_ESTADO.MaxLength = 1
            Me.columnDAZ_GLOSA.MaxLength = 25
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTESDAZRow() As TESDAZRow
            Return CType(Me.NewRow,TESDAZRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TESDAZRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TESDAZRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TESDAZRowChangedEvent) Is Nothing) Then
                RaiseEvent TESDAZRowChanged(Me, New TESDAZRowChangeEvent(CType(e.Row,TESDAZRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TESDAZRowChangingEvent) Is Nothing) Then
                RaiseEvent TESDAZRowChanging(Me, New TESDAZRowChangeEvent(CType(e.Row,TESDAZRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TESDAZRowDeletedEvent) Is Nothing) Then
                RaiseEvent TESDAZRowDeleted(Me, New TESDAZRowChangeEvent(CType(e.Row,TESDAZRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TESDAZRowDeletingEvent) Is Nothing) Then
                RaiseEvent TESDAZRowDeleting(Me, New TESDAZRowChangeEvent(CType(e.Row,TESDAZRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTESDAZRow(ByVal row As TESDAZRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALCUA = New dsWALCUA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TESDAZDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class AjustesManualesDataTable
        Inherits Global.System.Data.TypedTableBase(Of AjustesManualesRow)
        
        Private columnDOP_CODIGO As Global.System.Data.DataColumn
        
        Private columnDPL_CODIGO As Global.System.Data.DataColumn
        
        Private columnCOL_CODIGO As Global.System.Data.DataColumn
        
        Private columnDOP_MONTO As Global.System.Data.DataColumn
        
        Private columnDOP_TIPO As Global.System.Data.DataColumn
        
        Private columnDOP_NUMERO As Global.System.Data.DataColumn
        
        Private columnDOP_GLOSAADIC As Global.System.Data.DataColumn
        
        Private columnDOP_AUDITORIA As Global.System.Data.DataColumn
        
        Private columnDOP_TIPOREC As Global.System.Data.DataColumn
        
        Private columnDAZ_CODIGO As Global.System.Data.DataColumn
        
        Private columnCTE_CODIGO As Global.System.Data.DataColumn
        
        Private columnExpr1 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "AjustesManuales"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DPL_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDPL_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COL_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOL_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_MONTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_MONTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_NUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_NUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_GLOSAADICColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_GLOSAADIC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_AUDITORIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_AUDITORIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DOP_TIPORECColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDOP_TIPOREC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Expr1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As AjustesManualesRow
            Get
                Return CType(Me.Rows(index),AjustesManualesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AjustesManualesRowChanging As AjustesManualesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AjustesManualesRowChanged As AjustesManualesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AjustesManualesRowDeleting As AjustesManualesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event AjustesManualesRowDeleted As AjustesManualesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddAjustesManualesRow(ByVal row As AjustesManualesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddAjustesManualesRow(ByVal DPL_CODIGO As Long, ByVal COL_CODIGO As Integer, ByVal DOP_MONTO As Decimal, ByVal DOP_TIPO As String, ByVal DOP_NUMERO As String, ByVal DOP_GLOSAADIC As String, ByVal DOP_AUDITORIA As String, ByVal DOP_TIPOREC As String, ByVal DAZ_CODIGO As Long, ByVal CTE_CODIGO As Integer, ByVal Expr1 As String) As AjustesManualesRow
            Dim rowAjustesManualesRow As AjustesManualesRow = CType(Me.NewRow,AjustesManualesRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, DPL_CODIGO, COL_CODIGO, DOP_MONTO, DOP_TIPO, DOP_NUMERO, DOP_GLOSAADIC, DOP_AUDITORIA, DOP_TIPOREC, DAZ_CODIGO, CTE_CODIGO, Expr1}
            rowAjustesManualesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAjustesManualesRow)
            Return rowAjustesManualesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByDOP_CODIGO(ByVal DOP_CODIGO As Long) As AjustesManualesRow
            Return CType(Me.Rows.Find(New Object() {DOP_CODIGO}),AjustesManualesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As AjustesManualesDataTable = CType(MyBase.Clone,AjustesManualesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New AjustesManualesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDOP_CODIGO = MyBase.Columns("DOP_CODIGO")
            Me.columnDPL_CODIGO = MyBase.Columns("DPL_CODIGO")
            Me.columnCOL_CODIGO = MyBase.Columns("COL_CODIGO")
            Me.columnDOP_MONTO = MyBase.Columns("DOP_MONTO")
            Me.columnDOP_TIPO = MyBase.Columns("DOP_TIPO")
            Me.columnDOP_NUMERO = MyBase.Columns("DOP_NUMERO")
            Me.columnDOP_GLOSAADIC = MyBase.Columns("DOP_GLOSAADIC")
            Me.columnDOP_AUDITORIA = MyBase.Columns("DOP_AUDITORIA")
            Me.columnDOP_TIPOREC = MyBase.Columns("DOP_TIPOREC")
            Me.columnDAZ_CODIGO = MyBase.Columns("DAZ_CODIGO")
            Me.columnCTE_CODIGO = MyBase.Columns("CTE_CODIGO")
            Me.columnExpr1 = MyBase.Columns("Expr1")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDOP_CODIGO = New Global.System.Data.DataColumn("DOP_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_CODIGO)
            Me.columnDPL_CODIGO = New Global.System.Data.DataColumn("DPL_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDPL_CODIGO)
            Me.columnCOL_CODIGO = New Global.System.Data.DataColumn("COL_CODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOL_CODIGO)
            Me.columnDOP_MONTO = New Global.System.Data.DataColumn("DOP_MONTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_MONTO)
            Me.columnDOP_TIPO = New Global.System.Data.DataColumn("DOP_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_TIPO)
            Me.columnDOP_NUMERO = New Global.System.Data.DataColumn("DOP_NUMERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_NUMERO)
            Me.columnDOP_GLOSAADIC = New Global.System.Data.DataColumn("DOP_GLOSAADIC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_GLOSAADIC)
            Me.columnDOP_AUDITORIA = New Global.System.Data.DataColumn("DOP_AUDITORIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_AUDITORIA)
            Me.columnDOP_TIPOREC = New Global.System.Data.DataColumn("DOP_TIPOREC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDOP_TIPOREC)
            Me.columnDAZ_CODIGO = New Global.System.Data.DataColumn("DAZ_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_CODIGO)
            Me.columnCTE_CODIGO = New Global.System.Data.DataColumn("CTE_CODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CODIGO)
            Me.columnExpr1 = New Global.System.Data.DataColumn("Expr1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr1)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnDOP_CODIGO}, true))
            Me.columnDOP_CODIGO.AutoIncrement = true
            Me.columnDOP_CODIGO.AutoIncrementSeed = -1
            Me.columnDOP_CODIGO.AutoIncrementStep = -1
            Me.columnDOP_CODIGO.AllowDBNull = false
            Me.columnDOP_CODIGO.ReadOnly = true
            Me.columnDOP_CODIGO.Unique = true
            Me.columnDOP_TIPO.MaxLength = 1
            Me.columnDOP_NUMERO.MaxLength = 10
            Me.columnDOP_GLOSAADIC.MaxLength = 50
            Me.columnDOP_AUDITORIA.MaxLength = 44
            Me.columnDOP_TIPOREC.MaxLength = 1
            Me.columnCTE_CODIGO.AllowDBNull = false
            Me.columnExpr1.MaxLength = 1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewAjustesManualesRow() As AjustesManualesRow
            Return CType(Me.NewRow,AjustesManualesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New AjustesManualesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(AjustesManualesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.AjustesManualesRowChangedEvent) Is Nothing) Then
                RaiseEvent AjustesManualesRowChanged(Me, New AjustesManualesRowChangeEvent(CType(e.Row,AjustesManualesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.AjustesManualesRowChangingEvent) Is Nothing) Then
                RaiseEvent AjustesManualesRowChanging(Me, New AjustesManualesRowChangeEvent(CType(e.Row,AjustesManualesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.AjustesManualesRowDeletedEvent) Is Nothing) Then
                RaiseEvent AjustesManualesRowDeleted(Me, New AjustesManualesRowChangeEvent(CType(e.Row,AjustesManualesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.AjustesManualesRowDeletingEvent) Is Nothing) Then
                RaiseEvent AjustesManualesRowDeleting(Me, New AjustesManualesRowChangeEvent(CType(e.Row,AjustesManualesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveAjustesManualesRow(ByVal row As AjustesManualesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALCUA = New dsWALCUA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "AjustesManualesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TESCTEDataTable
        Inherits Global.System.Data.TypedTableBase(Of TESCTERow)
        
        Private columnCTE_CODIGO As Global.System.Data.DataColumn
        
        Private columnENT_CODIGO As Global.System.Data.DataColumn
        
        Private columnCON_CODIGO As Global.System.Data.DataColumn
        
        Private columnMON_CODIGO As Global.System.Data.DataColumn
        
        Private columnEMP_CODIGO As Global.System.Data.DataColumn
        
        Private columnCTE_NUMERO As Global.System.Data.DataColumn
        
        Private columnCTE_CUENTA As Global.System.Data.DataColumn
        
        Private columnCTE_SIGLA As Global.System.Data.DataColumn
        
        Private columnCTE_GRUPO As Global.System.Data.DataColumn
        
        Private columnCTE_TIPO As Global.System.Data.DataColumn
        
        Private columnCTE_SECUENCIA As Global.System.Data.DataColumn
        
        Private columnCTE_COLCHON1 As Global.System.Data.DataColumn
        
        Private columnCTE_COLCHON2 As Global.System.Data.DataColumn
        
        Private columnCTE_PLAZA As Global.System.Data.DataColumn
        
        Private columnCTE_MADRE As Global.System.Data.DataColumn
        
        Private columnCTE_AUDITORIA As Global.System.Data.DataColumn
        
        Private columnCTE_SOCIEDAD As Global.System.Data.DataColumn
        
        Private columnCTE_CODBANCO As Global.System.Data.DataColumn
        
        Private columnCTE_CUENTAID As Global.System.Data.DataColumn
        
        Private columnCTE_GLOSA As Global.System.Data.DataColumn
        
        Private columnCTE_CONTABLE As Global.System.Data.DataColumn
        
        Private columnCTE_MONEDASAP As Global.System.Data.DataColumn
        
        Private columnCTE_VIA As Global.System.Data.DataColumn
        
        Private columnCTE_CODCTE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TESCTE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CON_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCON_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MON_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMON_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMP_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMP_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_NUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_NUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_SIGLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_SIGLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_GRUPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_GRUPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_TIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_SECUENCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_SECUENCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_COLCHON1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_COLCHON1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_COLCHON2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_COLCHON2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_PLAZAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_PLAZA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_MADREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_MADRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_AUDITORIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_AUDITORIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_SOCIEDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_SOCIEDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CODBANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CODBANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CUENTAIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CUENTAID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_GLOSAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_GLOSA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CONTABLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CONTABLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_MONEDASAPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_MONEDASAP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_VIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_VIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CODCTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CODCTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TESCTERow
            Get
                Return CType(Me.Rows(index),TESCTERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESCTERowChanging As TESCTERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESCTERowChanged As TESCTERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESCTERowDeleting As TESCTERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TESCTERowDeleted As TESCTERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTESCTERow(ByVal row As TESCTERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTESCTERow( _
                    ByVal CTE_CODIGO As Integer,  _
                    ByVal ENT_CODIGO As Long,  _
                    ByVal CON_CODIGO As Long,  _
                    ByVal MON_CODIGO As String,  _
                    ByVal EMP_CODIGO As Long,  _
                    ByVal CTE_NUMERO As String,  _
                    ByVal CTE_CUENTA As String,  _
                    ByVal CTE_SIGLA As String,  _
                    ByVal CTE_GRUPO As String,  _
                    ByVal CTE_TIPO As String,  _
                    ByVal CTE_SECUENCIA As Integer,  _
                    ByVal CTE_COLCHON1 As Decimal,  _
                    ByVal CTE_COLCHON2 As Decimal,  _
                    ByVal CTE_PLAZA As Integer,  _
                    ByVal CTE_MADRE As Integer,  _
                    ByVal CTE_AUDITORIA As String,  _
                    ByVal CTE_SOCIEDAD As String,  _
                    ByVal CTE_CODBANCO As String,  _
                    ByVal CTE_CUENTAID As String,  _
                    ByVal CTE_GLOSA As String,  _
                    ByVal CTE_CONTABLE As String,  _
                    ByVal CTE_MONEDASAP As String,  _
                    ByVal CTE_VIA As String,  _
                    ByVal CTE_CODCTE As String) As TESCTERow
            Dim rowTESCTERow As TESCTERow = CType(Me.NewRow,TESCTERow)
            Dim columnValuesArray() As Object = New Object() {CTE_CODIGO, ENT_CODIGO, CON_CODIGO, MON_CODIGO, EMP_CODIGO, CTE_NUMERO, CTE_CUENTA, CTE_SIGLA, CTE_GRUPO, CTE_TIPO, CTE_SECUENCIA, CTE_COLCHON1, CTE_COLCHON2, CTE_PLAZA, CTE_MADRE, CTE_AUDITORIA, CTE_SOCIEDAD, CTE_CODBANCO, CTE_CUENTAID, CTE_GLOSA, CTE_CONTABLE, CTE_MONEDASAP, CTE_VIA, CTE_CODCTE}
            rowTESCTERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTESCTERow)
            Return rowTESCTERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCTE_CODIGO(ByVal CTE_CODIGO As Integer) As TESCTERow
            Return CType(Me.Rows.Find(New Object() {CTE_CODIGO}),TESCTERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TESCTEDataTable = CType(MyBase.Clone,TESCTEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TESCTEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCTE_CODIGO = MyBase.Columns("CTE_CODIGO")
            Me.columnENT_CODIGO = MyBase.Columns("ENT_CODIGO")
            Me.columnCON_CODIGO = MyBase.Columns("CON_CODIGO")
            Me.columnMON_CODIGO = MyBase.Columns("MON_CODIGO")
            Me.columnEMP_CODIGO = MyBase.Columns("EMP_CODIGO")
            Me.columnCTE_NUMERO = MyBase.Columns("CTE_NUMERO")
            Me.columnCTE_CUENTA = MyBase.Columns("CTE_CUENTA")
            Me.columnCTE_SIGLA = MyBase.Columns("CTE_SIGLA")
            Me.columnCTE_GRUPO = MyBase.Columns("CTE_GRUPO")
            Me.columnCTE_TIPO = MyBase.Columns("CTE_TIPO")
            Me.columnCTE_SECUENCIA = MyBase.Columns("CTE_SECUENCIA")
            Me.columnCTE_COLCHON1 = MyBase.Columns("CTE_COLCHON1")
            Me.columnCTE_COLCHON2 = MyBase.Columns("CTE_COLCHON2")
            Me.columnCTE_PLAZA = MyBase.Columns("CTE_PLAZA")
            Me.columnCTE_MADRE = MyBase.Columns("CTE_MADRE")
            Me.columnCTE_AUDITORIA = MyBase.Columns("CTE_AUDITORIA")
            Me.columnCTE_SOCIEDAD = MyBase.Columns("CTE_SOCIEDAD")
            Me.columnCTE_CODBANCO = MyBase.Columns("CTE_CODBANCO")
            Me.columnCTE_CUENTAID = MyBase.Columns("CTE_CUENTAID")
            Me.columnCTE_GLOSA = MyBase.Columns("CTE_GLOSA")
            Me.columnCTE_CONTABLE = MyBase.Columns("CTE_CONTABLE")
            Me.columnCTE_MONEDASAP = MyBase.Columns("CTE_MONEDASAP")
            Me.columnCTE_VIA = MyBase.Columns("CTE_VIA")
            Me.columnCTE_CODCTE = MyBase.Columns("CTE_CODCTE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCTE_CODIGO = New Global.System.Data.DataColumn("CTE_CODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CODIGO)
            Me.columnENT_CODIGO = New Global.System.Data.DataColumn("ENT_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_CODIGO)
            Me.columnCON_CODIGO = New Global.System.Data.DataColumn("CON_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCON_CODIGO)
            Me.columnMON_CODIGO = New Global.System.Data.DataColumn("MON_CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMON_CODIGO)
            Me.columnEMP_CODIGO = New Global.System.Data.DataColumn("EMP_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMP_CODIGO)
            Me.columnCTE_NUMERO = New Global.System.Data.DataColumn("CTE_NUMERO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_NUMERO)
            Me.columnCTE_CUENTA = New Global.System.Data.DataColumn("CTE_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CUENTA)
            Me.columnCTE_SIGLA = New Global.System.Data.DataColumn("CTE_SIGLA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_SIGLA)
            Me.columnCTE_GRUPO = New Global.System.Data.DataColumn("CTE_GRUPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_GRUPO)
            Me.columnCTE_TIPO = New Global.System.Data.DataColumn("CTE_TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_TIPO)
            Me.columnCTE_SECUENCIA = New Global.System.Data.DataColumn("CTE_SECUENCIA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_SECUENCIA)
            Me.columnCTE_COLCHON1 = New Global.System.Data.DataColumn("CTE_COLCHON1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_COLCHON1)
            Me.columnCTE_COLCHON2 = New Global.System.Data.DataColumn("CTE_COLCHON2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_COLCHON2)
            Me.columnCTE_PLAZA = New Global.System.Data.DataColumn("CTE_PLAZA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_PLAZA)
            Me.columnCTE_MADRE = New Global.System.Data.DataColumn("CTE_MADRE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_MADRE)
            Me.columnCTE_AUDITORIA = New Global.System.Data.DataColumn("CTE_AUDITORIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_AUDITORIA)
            Me.columnCTE_SOCIEDAD = New Global.System.Data.DataColumn("CTE_SOCIEDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_SOCIEDAD)
            Me.columnCTE_CODBANCO = New Global.System.Data.DataColumn("CTE_CODBANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CODBANCO)
            Me.columnCTE_CUENTAID = New Global.System.Data.DataColumn("CTE_CUENTAID", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CUENTAID)
            Me.columnCTE_GLOSA = New Global.System.Data.DataColumn("CTE_GLOSA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_GLOSA)
            Me.columnCTE_CONTABLE = New Global.System.Data.DataColumn("CTE_CONTABLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CONTABLE)
            Me.columnCTE_MONEDASAP = New Global.System.Data.DataColumn("CTE_MONEDASAP", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_MONEDASAP)
            Me.columnCTE_VIA = New Global.System.Data.DataColumn("CTE_VIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_VIA)
            Me.columnCTE_CODCTE = New Global.System.Data.DataColumn("CTE_CODCTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CODCTE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCTE_CODIGO}, true))
            Me.columnCTE_CODIGO.AllowDBNull = false
            Me.columnCTE_CODIGO.Unique = true
            Me.columnENT_CODIGO.AllowDBNull = false
            Me.columnMON_CODIGO.AllowDBNull = false
            Me.columnMON_CODIGO.MaxLength = 5
            Me.columnEMP_CODIGO.AllowDBNull = false
            Me.columnCTE_NUMERO.MaxLength = 25
            Me.columnCTE_CUENTA.MaxLength = 5
            Me.columnCTE_SIGLA.MaxLength = 13
            Me.columnCTE_GRUPO.MaxLength = 2
            Me.columnCTE_TIPO.MaxLength = 1
            Me.columnCTE_AUDITORIA.MaxLength = 44
            Me.columnCTE_SOCIEDAD.MaxLength = 4
            Me.columnCTE_CODBANCO.MaxLength = 5
            Me.columnCTE_CUENTAID.MaxLength = 10
            Me.columnCTE_GLOSA.MaxLength = 30
            Me.columnCTE_CONTABLE.MaxLength = 10
            Me.columnCTE_MONEDASAP.MaxLength = 5
            Me.columnCTE_VIA.MaxLength = 1
            Me.columnCTE_CODCTE.MaxLength = 7
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTESCTERow() As TESCTERow
            Return CType(Me.NewRow,TESCTERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TESCTERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TESCTERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TESCTERowChangedEvent) Is Nothing) Then
                RaiseEvent TESCTERowChanged(Me, New TESCTERowChangeEvent(CType(e.Row,TESCTERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TESCTERowChangingEvent) Is Nothing) Then
                RaiseEvent TESCTERowChanging(Me, New TESCTERowChangeEvent(CType(e.Row,TESCTERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TESCTERowDeletedEvent) Is Nothing) Then
                RaiseEvent TESCTERowDeleted(Me, New TESCTERowChangeEvent(CType(e.Row,TESCTERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TESCTERowDeletingEvent) Is Nothing) Then
                RaiseEvent TESCTERowDeleting(Me, New TESCTERowChangeEvent(CType(e.Row,TESCTERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTESCTERow(ByVal row As TESCTERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALCUA = New dsWALCUA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TESCTEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TraeCuadraturaDataTable
        Inherits Global.System.Data.TypedTableBase(Of TraeCuadraturaRow)
        
        Private columnCUA_CODIGO As Global.System.Data.DataColumn
        
        Private columnPLA_CODIGO As Global.System.Data.DataColumn
        
        Private columnCTE_CODIGO As Global.System.Data.DataColumn
        
        Private columnCUA_SALDOINI As Global.System.Data.DataColumn
        
        Private columnCUA_RESCATES As Global.System.Data.DataColumn
        
        Private columnCUA_RESCATES2 As Global.System.Data.DataColumn
        
        Private columnCUA_RECAUDACION As Global.System.Data.DataColumn
        
        Private columnCUA_RECAUDACION2 As Global.System.Data.DataColumn
        
        Private columnCUA_CHEQUESDEV As Global.System.Data.DataColumn
        
        Private columnCUA_CHEQUESDEV2 As Global.System.Data.DataColumn
        
        Private columnCUA_APORTES As Global.System.Data.DataColumn
        
        Private columnCUA_APORTES2 As Global.System.Data.DataColumn
        
        Private columnCUA_OTROSINGRESOS As Global.System.Data.DataColumn
        
        Private columnCUA_OTROSINGRESOS2 As Global.System.Data.DataColumn
        
        Private columnCUA_PAGOSCHE As Global.System.Data.DataColumn
        
        Private columnCUA_PAGOSCHE2 As Global.System.Data.DataColumn
        
        Private columnCUA_PAGOSCAR As Global.System.Data.DataColumn
        
        Private columnCUA_PAGOSCAR2 As Global.System.Data.DataColumn
        
        Private columnCUA_CHEQUESCAR As Global.System.Data.DataColumn
        
        Private columnCUA_CHEQUESCAR2 As Global.System.Data.DataColumn
        
        Private columnCUA_TRANSFERENCIASPOS As Global.System.Data.DataColumn
        
        Private columnCUA_TRANSFERENCIASPOS2 As Global.System.Data.DataColumn
        
        Private columnCUA_TRANSFERENCIASNEG As Global.System.Data.DataColumn
        
        Private columnCUA_TRANSFERENCIASNEG2 As Global.System.Data.DataColumn
        
        Private columnCUA_PORCOLOCAR As Global.System.Data.DataColumn
        
        Private columnCUA_PORCOLOCAR2 As Global.System.Data.DataColumn
        
        Private columnCUA_COLOCACIONES As Global.System.Data.DataColumn
        
        Private columnCUA_COLOCACIONES2 As Global.System.Data.DataColumn
        
        Private columnCUA_SALDO As Global.System.Data.DataColumn
        
        Private columnCUA_SALDO2 As Global.System.Data.DataColumn
        
        Private columnCUA_EGRESOSCHE As Global.System.Data.DataColumn
        
        Private columnCUA_PROXIMOSALDO As Global.System.Data.DataColumn
        
        Private columnCTE_CUENTA As Global.System.Data.DataColumn
        
        Private columnCTE_SECUENCIA As Global.System.Data.DataColumn
        
        Private columnENT_ABREVIATURA As Global.System.Data.DataColumn
        
        Private columnCodigo As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TraeCuadratura"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PLA_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPLA_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_SALDOINIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_SALDOINI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_RESCATESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_RESCATES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_RESCATES2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_RESCATES2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_RECAUDACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_RECAUDACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_RECAUDACION2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_RECAUDACION2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_CHEQUESDEVColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_CHEQUESDEV
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_CHEQUESDEV2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_CHEQUESDEV2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_APORTESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_APORTES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_APORTES2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_APORTES2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_OTROSINGRESOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_OTROSINGRESOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_OTROSINGRESOS2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_OTROSINGRESOS2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_PAGOSCHEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_PAGOSCHE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_PAGOSCHE2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_PAGOSCHE2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_PAGOSCARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_PAGOSCAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_PAGOSCAR2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_PAGOSCAR2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_CHEQUESCARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_CHEQUESCAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_CHEQUESCAR2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_CHEQUESCAR2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_TRANSFERENCIASPOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_TRANSFERENCIASPOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_TRANSFERENCIASPOS2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_TRANSFERENCIASPOS2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_TRANSFERENCIASNEGColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_TRANSFERENCIASNEG
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_TRANSFERENCIASNEG2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_TRANSFERENCIASNEG2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_PORCOLOCARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_PORCOLOCAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_PORCOLOCAR2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_PORCOLOCAR2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_COLOCACIONESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_COLOCACIONES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_COLOCACIONES2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_COLOCACIONES2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_SALDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_SALDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_SALDO2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_SALDO2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_EGRESOSCHEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_EGRESOSCHE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CUA_PROXIMOSALDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCUA_PROXIMOSALDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_CUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_CUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CTE_SECUENCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCTE_SECUENCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENT_ABREVIATURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENT_ABREVIATURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CodigoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCodigo
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TraeCuadraturaRow
            Get
                Return CType(Me.Rows(index),TraeCuadraturaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TraeCuadraturaRowChanging As TraeCuadraturaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TraeCuadraturaRowChanged As TraeCuadraturaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TraeCuadraturaRowDeleting As TraeCuadraturaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TraeCuadraturaRowDeleted As TraeCuadraturaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTraeCuadraturaRow(ByVal row As TraeCuadraturaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTraeCuadraturaRow( _
                    ByVal PLA_CODIGO As Long,  _
                    ByVal CTE_CODIGO As String,  _
                    ByVal CUA_SALDOINI As Decimal,  _
                    ByVal CUA_RESCATES As Decimal,  _
                    ByVal CUA_RESCATES2 As Decimal,  _
                    ByVal CUA_RECAUDACION As Decimal,  _
                    ByVal CUA_RECAUDACION2 As Decimal,  _
                    ByVal CUA_CHEQUESDEV As Decimal,  _
                    ByVal CUA_CHEQUESDEV2 As Decimal,  _
                    ByVal CUA_APORTES As Decimal,  _
                    ByVal CUA_APORTES2 As Decimal,  _
                    ByVal CUA_OTROSINGRESOS As Decimal,  _
                    ByVal CUA_OTROSINGRESOS2 As Decimal,  _
                    ByVal CUA_PAGOSCHE As Decimal,  _
                    ByVal CUA_PAGOSCHE2 As Decimal,  _
                    ByVal CUA_PAGOSCAR As Decimal,  _
                    ByVal CUA_PAGOSCAR2 As Decimal,  _
                    ByVal CUA_CHEQUESCAR As Decimal,  _
                    ByVal CUA_CHEQUESCAR2 As Decimal,  _
                    ByVal CUA_TRANSFERENCIASPOS As Decimal,  _
                    ByVal CUA_TRANSFERENCIASPOS2 As Decimal,  _
                    ByVal CUA_TRANSFERENCIASNEG As Decimal,  _
                    ByVal CUA_TRANSFERENCIASNEG2 As Decimal,  _
                    ByVal CUA_PORCOLOCAR As Decimal,  _
                    ByVal CUA_PORCOLOCAR2 As Decimal,  _
                    ByVal CUA_COLOCACIONES As Decimal,  _
                    ByVal CUA_COLOCACIONES2 As Decimal,  _
                    ByVal CUA_SALDO As Decimal,  _
                    ByVal CUA_SALDO2 As Decimal,  _
                    ByVal CUA_EGRESOSCHE As Decimal,  _
                    ByVal CUA_PROXIMOSALDO As Decimal,  _
                    ByVal CTE_CUENTA As String,  _
                    ByVal CTE_SECUENCIA As Integer,  _
                    ByVal ENT_ABREVIATURA As String,  _
                    ByVal Codigo As Integer) As TraeCuadraturaRow
            Dim rowTraeCuadraturaRow As TraeCuadraturaRow = CType(Me.NewRow,TraeCuadraturaRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, PLA_CODIGO, CTE_CODIGO, CUA_SALDOINI, CUA_RESCATES, CUA_RESCATES2, CUA_RECAUDACION, CUA_RECAUDACION2, CUA_CHEQUESDEV, CUA_CHEQUESDEV2, CUA_APORTES, CUA_APORTES2, CUA_OTROSINGRESOS, CUA_OTROSINGRESOS2, CUA_PAGOSCHE, CUA_PAGOSCHE2, CUA_PAGOSCAR, CUA_PAGOSCAR2, CUA_CHEQUESCAR, CUA_CHEQUESCAR2, CUA_TRANSFERENCIASPOS, CUA_TRANSFERENCIASPOS2, CUA_TRANSFERENCIASNEG, CUA_TRANSFERENCIASNEG2, CUA_PORCOLOCAR, CUA_PORCOLOCAR2, CUA_COLOCACIONES, CUA_COLOCACIONES2, CUA_SALDO, CUA_SALDO2, CUA_EGRESOSCHE, CUA_PROXIMOSALDO, CTE_CUENTA, CTE_SECUENCIA, ENT_ABREVIATURA, Codigo}
            rowTraeCuadraturaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTraeCuadraturaRow)
            Return rowTraeCuadraturaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCodigo(ByVal Codigo As Integer) As TraeCuadraturaRow
            Return CType(Me.Rows.Find(New Object() {Codigo}),TraeCuadraturaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TraeCuadraturaDataTable = CType(MyBase.Clone,TraeCuadraturaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TraeCuadraturaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCUA_CODIGO = MyBase.Columns("CUA_CODIGO")
            Me.columnPLA_CODIGO = MyBase.Columns("PLA_CODIGO")
            Me.columnCTE_CODIGO = MyBase.Columns("CTE_CODIGO")
            Me.columnCUA_SALDOINI = MyBase.Columns("CUA_SALDOINI")
            Me.columnCUA_RESCATES = MyBase.Columns("CUA_RESCATES")
            Me.columnCUA_RESCATES2 = MyBase.Columns("CUA_RESCATES2")
            Me.columnCUA_RECAUDACION = MyBase.Columns("CUA_RECAUDACION")
            Me.columnCUA_RECAUDACION2 = MyBase.Columns("CUA_RECAUDACION2")
            Me.columnCUA_CHEQUESDEV = MyBase.Columns("CUA_CHEQUESDEV")
            Me.columnCUA_CHEQUESDEV2 = MyBase.Columns("CUA_CHEQUESDEV2")
            Me.columnCUA_APORTES = MyBase.Columns("CUA_APORTES")
            Me.columnCUA_APORTES2 = MyBase.Columns("CUA_APORTES2")
            Me.columnCUA_OTROSINGRESOS = MyBase.Columns("CUA_OTROSINGRESOS")
            Me.columnCUA_OTROSINGRESOS2 = MyBase.Columns("CUA_OTROSINGRESOS2")
            Me.columnCUA_PAGOSCHE = MyBase.Columns("CUA_PAGOSCHE")
            Me.columnCUA_PAGOSCHE2 = MyBase.Columns("CUA_PAGOSCHE2")
            Me.columnCUA_PAGOSCAR = MyBase.Columns("CUA_PAGOSCAR")
            Me.columnCUA_PAGOSCAR2 = MyBase.Columns("CUA_PAGOSCAR2")
            Me.columnCUA_CHEQUESCAR = MyBase.Columns("CUA_CHEQUESCAR")
            Me.columnCUA_CHEQUESCAR2 = MyBase.Columns("CUA_CHEQUESCAR2")
            Me.columnCUA_TRANSFERENCIASPOS = MyBase.Columns("CUA_TRANSFERENCIASPOS")
            Me.columnCUA_TRANSFERENCIASPOS2 = MyBase.Columns("CUA_TRANSFERENCIASPOS2")
            Me.columnCUA_TRANSFERENCIASNEG = MyBase.Columns("CUA_TRANSFERENCIASNEG")
            Me.columnCUA_TRANSFERENCIASNEG2 = MyBase.Columns("CUA_TRANSFERENCIASNEG2")
            Me.columnCUA_PORCOLOCAR = MyBase.Columns("CUA_PORCOLOCAR")
            Me.columnCUA_PORCOLOCAR2 = MyBase.Columns("CUA_PORCOLOCAR2")
            Me.columnCUA_COLOCACIONES = MyBase.Columns("CUA_COLOCACIONES")
            Me.columnCUA_COLOCACIONES2 = MyBase.Columns("CUA_COLOCACIONES2")
            Me.columnCUA_SALDO = MyBase.Columns("CUA_SALDO")
            Me.columnCUA_SALDO2 = MyBase.Columns("CUA_SALDO2")
            Me.columnCUA_EGRESOSCHE = MyBase.Columns("CUA_EGRESOSCHE")
            Me.columnCUA_PROXIMOSALDO = MyBase.Columns("CUA_PROXIMOSALDO")
            Me.columnCTE_CUENTA = MyBase.Columns("CTE_CUENTA")
            Me.columnCTE_SECUENCIA = MyBase.Columns("CTE_SECUENCIA")
            Me.columnENT_ABREVIATURA = MyBase.Columns("ENT_ABREVIATURA")
            Me.columnCodigo = MyBase.Columns("Codigo")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCUA_CODIGO = New Global.System.Data.DataColumn("CUA_CODIGO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_CODIGO)
            Me.columnPLA_CODIGO = New Global.System.Data.DataColumn("PLA_CODIGO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPLA_CODIGO)
            Me.columnCTE_CODIGO = New Global.System.Data.DataColumn("CTE_CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CODIGO)
            Me.columnCUA_SALDOINI = New Global.System.Data.DataColumn("CUA_SALDOINI", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_SALDOINI)
            Me.columnCUA_RESCATES = New Global.System.Data.DataColumn("CUA_RESCATES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_RESCATES)
            Me.columnCUA_RESCATES2 = New Global.System.Data.DataColumn("CUA_RESCATES2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_RESCATES2)
            Me.columnCUA_RECAUDACION = New Global.System.Data.DataColumn("CUA_RECAUDACION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_RECAUDACION)
            Me.columnCUA_RECAUDACION2 = New Global.System.Data.DataColumn("CUA_RECAUDACION2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_RECAUDACION2)
            Me.columnCUA_CHEQUESDEV = New Global.System.Data.DataColumn("CUA_CHEQUESDEV", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_CHEQUESDEV)
            Me.columnCUA_CHEQUESDEV2 = New Global.System.Data.DataColumn("CUA_CHEQUESDEV2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_CHEQUESDEV2)
            Me.columnCUA_APORTES = New Global.System.Data.DataColumn("CUA_APORTES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_APORTES)
            Me.columnCUA_APORTES2 = New Global.System.Data.DataColumn("CUA_APORTES2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_APORTES2)
            Me.columnCUA_OTROSINGRESOS = New Global.System.Data.DataColumn("CUA_OTROSINGRESOS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_OTROSINGRESOS)
            Me.columnCUA_OTROSINGRESOS2 = New Global.System.Data.DataColumn("CUA_OTROSINGRESOS2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_OTROSINGRESOS2)
            Me.columnCUA_PAGOSCHE = New Global.System.Data.DataColumn("CUA_PAGOSCHE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_PAGOSCHE)
            Me.columnCUA_PAGOSCHE2 = New Global.System.Data.DataColumn("CUA_PAGOSCHE2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_PAGOSCHE2)
            Me.columnCUA_PAGOSCAR = New Global.System.Data.DataColumn("CUA_PAGOSCAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_PAGOSCAR)
            Me.columnCUA_PAGOSCAR2 = New Global.System.Data.DataColumn("CUA_PAGOSCAR2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_PAGOSCAR2)
            Me.columnCUA_CHEQUESCAR = New Global.System.Data.DataColumn("CUA_CHEQUESCAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_CHEQUESCAR)
            Me.columnCUA_CHEQUESCAR2 = New Global.System.Data.DataColumn("CUA_CHEQUESCAR2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_CHEQUESCAR2)
            Me.columnCUA_TRANSFERENCIASPOS = New Global.System.Data.DataColumn("CUA_TRANSFERENCIASPOS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_TRANSFERENCIASPOS)
            Me.columnCUA_TRANSFERENCIASPOS2 = New Global.System.Data.DataColumn("CUA_TRANSFERENCIASPOS2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_TRANSFERENCIASPOS2)
            Me.columnCUA_TRANSFERENCIASNEG = New Global.System.Data.DataColumn("CUA_TRANSFERENCIASNEG", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_TRANSFERENCIASNEG)
            Me.columnCUA_TRANSFERENCIASNEG2 = New Global.System.Data.DataColumn("CUA_TRANSFERENCIASNEG2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_TRANSFERENCIASNEG2)
            Me.columnCUA_PORCOLOCAR = New Global.System.Data.DataColumn("CUA_PORCOLOCAR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_PORCOLOCAR)
            Me.columnCUA_PORCOLOCAR2 = New Global.System.Data.DataColumn("CUA_PORCOLOCAR2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_PORCOLOCAR2)
            Me.columnCUA_COLOCACIONES = New Global.System.Data.DataColumn("CUA_COLOCACIONES", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_COLOCACIONES)
            Me.columnCUA_COLOCACIONES2 = New Global.System.Data.DataColumn("CUA_COLOCACIONES2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_COLOCACIONES2)
            Me.columnCUA_SALDO = New Global.System.Data.DataColumn("CUA_SALDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_SALDO)
            Me.columnCUA_SALDO2 = New Global.System.Data.DataColumn("CUA_SALDO2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_SALDO2)
            Me.columnCUA_EGRESOSCHE = New Global.System.Data.DataColumn("CUA_EGRESOSCHE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_EGRESOSCHE)
            Me.columnCUA_PROXIMOSALDO = New Global.System.Data.DataColumn("CUA_PROXIMOSALDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCUA_PROXIMOSALDO)
            Me.columnCTE_CUENTA = New Global.System.Data.DataColumn("CTE_CUENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_CUENTA)
            Me.columnCTE_SECUENCIA = New Global.System.Data.DataColumn("CTE_SECUENCIA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCTE_SECUENCIA)
            Me.columnENT_ABREVIATURA = New Global.System.Data.DataColumn("ENT_ABREVIATURA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENT_ABREVIATURA)
            Me.columnCodigo = New Global.System.Data.DataColumn("Codigo", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCodigo)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCodigo}, true))
            Me.columnCUA_CODIGO.AutoIncrement = true
            Me.columnCUA_CODIGO.AutoIncrementSeed = -1
            Me.columnCUA_CODIGO.AutoIncrementStep = -1
            Me.columnCUA_CODIGO.AllowDBNull = false
            Me.columnCUA_CODIGO.ReadOnly = true
            Me.columnCTE_CODIGO.MaxLength = 7
            Me.columnCTE_CUENTA.MaxLength = 5
            Me.columnENT_ABREVIATURA.MaxLength = 15
            Me.columnCodigo.AllowDBNull = false
            Me.columnCodigo.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTraeCuadraturaRow() As TraeCuadraturaRow
            Return CType(Me.NewRow,TraeCuadraturaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TraeCuadraturaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TraeCuadraturaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TraeCuadraturaRowChangedEvent) Is Nothing) Then
                RaiseEvent TraeCuadraturaRowChanged(Me, New TraeCuadraturaRowChangeEvent(CType(e.Row,TraeCuadraturaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TraeCuadraturaRowChangingEvent) Is Nothing) Then
                RaiseEvent TraeCuadraturaRowChanging(Me, New TraeCuadraturaRowChangeEvent(CType(e.Row,TraeCuadraturaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TraeCuadraturaRowDeletedEvent) Is Nothing) Then
                RaiseEvent TraeCuadraturaRowDeleted(Me, New TraeCuadraturaRowChangeEvent(CType(e.Row,TraeCuadraturaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TraeCuadraturaRowDeletingEvent) Is Nothing) Then
                RaiseEvent TraeCuadraturaRowDeleting(Me, New TraeCuadraturaRowChangeEvent(CType(e.Row,TraeCuadraturaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTraeCuadraturaRow(ByVal row As TraeCuadraturaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALCUA = New dsWALCUA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TraeCuadraturaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OP_TraeOtrosCargosDataTable
        Inherits Global.System.Data.TypedTableBase(Of OP_TraeOtrosCargosRow)
        
        Private columnDAZ_CUENTABANCO As Global.System.Data.DataColumn
        
        Private columntotales As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OP_TraeOtrosCargos"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DAZ_CUENTABANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDAZ_CUENTABANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property totalesColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columntotales
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OP_TraeOtrosCargosRow
            Get
                Return CType(Me.Rows(index),OP_TraeOtrosCargosRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeOtrosCargosRowChanging As OP_TraeOtrosCargosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeOtrosCargosRowChanged As OP_TraeOtrosCargosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeOtrosCargosRowDeleting As OP_TraeOtrosCargosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OP_TraeOtrosCargosRowDeleted As OP_TraeOtrosCargosRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddOP_TraeOtrosCargosRow(ByVal row As OP_TraeOtrosCargosRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddOP_TraeOtrosCargosRow(ByVal DAZ_CUENTABANCO As String, ByVal totales As Decimal) As OP_TraeOtrosCargosRow
            Dim rowOP_TraeOtrosCargosRow As OP_TraeOtrosCargosRow = CType(Me.NewRow,OP_TraeOtrosCargosRow)
            Dim columnValuesArray() As Object = New Object() {DAZ_CUENTABANCO, totales}
            rowOP_TraeOtrosCargosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOP_TraeOtrosCargosRow)
            Return rowOP_TraeOtrosCargosRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OP_TraeOtrosCargosDataTable = CType(MyBase.Clone,OP_TraeOtrosCargosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OP_TraeOtrosCargosDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDAZ_CUENTABANCO = MyBase.Columns("DAZ_CUENTABANCO")
            Me.columntotales = MyBase.Columns("totales")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDAZ_CUENTABANCO = New Global.System.Data.DataColumn("DAZ_CUENTABANCO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDAZ_CUENTABANCO)
            Me.columntotales = New Global.System.Data.DataColumn("totales", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columntotales)
            Me.columnDAZ_CUENTABANCO.MaxLength = 10
            Me.columntotales.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewOP_TraeOtrosCargosRow() As OP_TraeOtrosCargosRow
            Return CType(Me.NewRow,OP_TraeOtrosCargosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OP_TraeOtrosCargosRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OP_TraeOtrosCargosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OP_TraeOtrosCargosRowChangedEvent) Is Nothing) Then
                RaiseEvent OP_TraeOtrosCargosRowChanged(Me, New OP_TraeOtrosCargosRowChangeEvent(CType(e.Row,OP_TraeOtrosCargosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OP_TraeOtrosCargosRowChangingEvent) Is Nothing) Then
                RaiseEvent OP_TraeOtrosCargosRowChanging(Me, New OP_TraeOtrosCargosRowChangeEvent(CType(e.Row,OP_TraeOtrosCargosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OP_TraeOtrosCargosRowDeletedEvent) Is Nothing) Then
                RaiseEvent OP_TraeOtrosCargosRowDeleted(Me, New OP_TraeOtrosCargosRowChangeEvent(CType(e.Row,OP_TraeOtrosCargosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OP_TraeOtrosCargosRowDeletingEvent) Is Nothing) Then
                RaiseEvent OP_TraeOtrosCargosRowDeleting(Me, New OP_TraeOtrosCargosRowChangeEvent(CType(e.Row,OP_TraeOtrosCargosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveOP_TraeOtrosCargosRow(ByVal row As OP_TraeOtrosCargosRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALCUA = New dsWALCUA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OP_TraeOtrosCargosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class DiferenciasDataTable
        Inherits Global.System.Data.TypedTableBase(Of DiferenciasRow)
        
        Private columnSecuencia As Global.System.Data.DataColumn
        
        Private columnBanco As Global.System.Data.DataColumn
        
        Private columnCuenta As Global.System.Data.DataColumn
        
        Private columnDato1 As Global.System.Data.DataColumn
        
        Private columnDato2 As Global.System.Data.DataColumn
        
        Private columnDiferencia As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Diferencias"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SecuenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSecuencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BancoColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBanco
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CuentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCuenta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Dato1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDato1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Dato2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDato2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DiferenciaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDiferencia
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As DiferenciasRow
            Get
                Return CType(Me.Rows(index),DiferenciasRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DiferenciasRowChanging As DiferenciasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DiferenciasRowChanged As DiferenciasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DiferenciasRowDeleting As DiferenciasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event DiferenciasRowDeleted As DiferenciasRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddDiferenciasRow(ByVal row As DiferenciasRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddDiferenciasRow(ByVal Secuencia As Long, ByVal Banco As String, ByVal Cuenta As Integer, ByVal Dato1 As Double, ByVal Dato2 As Double, ByVal Diferencia As Double) As DiferenciasRow
            Dim rowDiferenciasRow As DiferenciasRow = CType(Me.NewRow,DiferenciasRow)
            Dim columnValuesArray() As Object = New Object() {Secuencia, Banco, Cuenta, Dato1, Dato2, Diferencia}
            rowDiferenciasRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowDiferenciasRow)
            Return rowDiferenciasRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As DiferenciasDataTable = CType(MyBase.Clone,DiferenciasDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New DiferenciasDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSecuencia = MyBase.Columns("Secuencia")
            Me.columnBanco = MyBase.Columns("Banco")
            Me.columnCuenta = MyBase.Columns("Cuenta")
            Me.columnDato1 = MyBase.Columns("Dato1")
            Me.columnDato2 = MyBase.Columns("Dato2")
            Me.columnDiferencia = MyBase.Columns("Diferencia")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSecuencia = New Global.System.Data.DataColumn("Secuencia", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSecuencia)
            Me.columnBanco = New Global.System.Data.DataColumn("Banco", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBanco)
            Me.columnCuenta = New Global.System.Data.DataColumn("Cuenta", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCuenta)
            Me.columnDato1 = New Global.System.Data.DataColumn("Dato1", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDato1)
            Me.columnDato2 = New Global.System.Data.DataColumn("Dato2", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDato2)
            Me.columnDiferencia = New Global.System.Data.DataColumn("Diferencia", GetType(Double), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDiferencia)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewDiferenciasRow() As DiferenciasRow
            Return CType(Me.NewRow,DiferenciasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New DiferenciasRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(DiferenciasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.DiferenciasRowChangedEvent) Is Nothing) Then
                RaiseEvent DiferenciasRowChanged(Me, New DiferenciasRowChangeEvent(CType(e.Row,DiferenciasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.DiferenciasRowChangingEvent) Is Nothing) Then
                RaiseEvent DiferenciasRowChanging(Me, New DiferenciasRowChangeEvent(CType(e.Row,DiferenciasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.DiferenciasRowDeletedEvent) Is Nothing) Then
                RaiseEvent DiferenciasRowDeleted(Me, New DiferenciasRowChangeEvent(CType(e.Row,DiferenciasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.DiferenciasRowDeletingEvent) Is Nothing) Then
                RaiseEvent DiferenciasRowDeleting(Me, New DiferenciasRowChangeEvent(CType(e.Row,DiferenciasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveDiferenciasRow(ByVal row As DiferenciasRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsWALCUA = New dsWALCUA()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "DiferenciasDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class OP_Trae2RescatesRow
        Inherits Global.System.Data.DataRow
        
        Private tableOP_Trae2Rescates As OP_Trae2RescatesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOP_Trae2Rescates = CType(Me.Table,OP_Trae2RescatesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property daz_cuentabanco() As String
            Get
                Try 
                    Return CType(Me(Me.tableOP_Trae2Rescates.daz_cuentabancoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'daz_cuentabanco' de la tabla 'OP_Trae2Rescates' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_Trae2Rescates.daz_cuentabancoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property totales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableOP_Trae2Rescates.totalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'totales' de la tabla 'OP_Trae2Rescates' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_Trae2Rescates.totalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdaz_cuentabancoNull() As Boolean
            Return Me.IsNull(Me.tableOP_Trae2Rescates.daz_cuentabancoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdaz_cuentabancoNull()
            Me(Me.tableOP_Trae2Rescates.daz_cuentabancoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstotalesNull() As Boolean
            Return Me.IsNull(Me.tableOP_Trae2Rescates.totalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettotalesNull()
            Me(Me.tableOP_Trae2Rescates.totalesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class OP_Trae2ChequesDevueltosRow
        Inherits Global.System.Data.DataRow
        
        Private tableOP_Trae2ChequesDevueltos As OP_Trae2ChequesDevueltosDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOP_Trae2ChequesDevueltos = CType(Me.Table,OP_Trae2ChequesDevueltosDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property daz_cuentabanco() As String
            Get
                Try 
                    Return CType(Me(Me.tableOP_Trae2ChequesDevueltos.daz_cuentabancoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'daz_cuentabanco' de la tabla 'OP_Trae2ChequesDevueltos' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_Trae2ChequesDevueltos.daz_cuentabancoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property totales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableOP_Trae2ChequesDevueltos.totalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'totales' de la tabla 'OP_Trae2ChequesDevueltos' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_Trae2ChequesDevueltos.totalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdaz_cuentabancoNull() As Boolean
            Return Me.IsNull(Me.tableOP_Trae2ChequesDevueltos.daz_cuentabancoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdaz_cuentabancoNull()
            Me(Me.tableOP_Trae2ChequesDevueltos.daz_cuentabancoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstotalesNull() As Boolean
            Return Me.IsNull(Me.tableOP_Trae2ChequesDevueltos.totalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettotalesNull()
            Me(Me.tableOP_Trae2ChequesDevueltos.totalesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class OP_Trae2OtrosIngresosRow
        Inherits Global.System.Data.DataRow
        
        Private tableOP_Trae2OtrosIngresos As OP_Trae2OtrosIngresosDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOP_Trae2OtrosIngresos = CType(Me.Table,OP_Trae2OtrosIngresosDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property daz_cuentabanco() As String
            Get
                Try 
                    Return CType(Me(Me.tableOP_Trae2OtrosIngresos.daz_cuentabancoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'daz_cuentabanco' de la tabla 'OP_Trae2OtrosIngresos' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_Trae2OtrosIngresos.daz_cuentabancoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property totales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableOP_Trae2OtrosIngresos.totalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'totales' de la tabla 'OP_Trae2OtrosIngresos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_Trae2OtrosIngresos.totalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdaz_cuentabancoNull() As Boolean
            Return Me.IsNull(Me.tableOP_Trae2OtrosIngresos.daz_cuentabancoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdaz_cuentabancoNull()
            Me(Me.tableOP_Trae2OtrosIngresos.daz_cuentabancoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstotalesNull() As Boolean
            Return Me.IsNull(Me.tableOP_Trae2OtrosIngresos.totalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettotalesNull()
            Me(Me.tableOP_Trae2OtrosIngresos.totalesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class OP_TraeColocacionesRow
        Inherits Global.System.Data.DataRow
        
        Private tableOP_TraeColocaciones As OP_TraeColocacionesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOP_TraeColocaciones = CType(Me.Table,OP_TraeColocacionesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property daz_cuentabanco() As String
            Get
                Try 
                    Return CType(Me(Me.tableOP_TraeColocaciones.daz_cuentabancoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'daz_cuentabanco' de la tabla 'OP_TraeColocaciones' es DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_TraeColocaciones.daz_cuentabancoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property totales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableOP_TraeColocaciones.totalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'totales' de la tabla 'OP_TraeColocaciones' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_TraeColocaciones.totalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdaz_cuentabancoNull() As Boolean
            Return Me.IsNull(Me.tableOP_TraeColocaciones.daz_cuentabancoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdaz_cuentabancoNull()
            Me(Me.tableOP_TraeColocaciones.daz_cuentabancoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstotalesNull() As Boolean
            Return Me.IsNull(Me.tableOP_TraeColocaciones.totalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettotalesNull()
            Me(Me.tableOP_TraeColocaciones.totalesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class OP_TraePagosConChequeRow
        Inherits Global.System.Data.DataRow
        
        Private tableOP_TraePagosConCheque As OP_TraePagosConChequeDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOP_TraePagosConCheque = CType(Me.Table,OP_TraePagosConChequeDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property daz_cuentabanco() As String
            Get
                Try 
                    Return CType(Me(Me.tableOP_TraePagosConCheque.daz_cuentabancoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'daz_cuentabanco' de la tabla 'OP_TraePagosConCheque' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_TraePagosConCheque.daz_cuentabancoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property totales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableOP_TraePagosConCheque.totalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'totales' de la tabla 'OP_TraePagosConCheque' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_TraePagosConCheque.totalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdaz_cuentabancoNull() As Boolean
            Return Me.IsNull(Me.tableOP_TraePagosConCheque.daz_cuentabancoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdaz_cuentabancoNull()
            Me(Me.tableOP_TraePagosConCheque.daz_cuentabancoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstotalesNull() As Boolean
            Return Me.IsNull(Me.tableOP_TraePagosConCheque.totalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettotalesNull()
            Me(Me.tableOP_TraePagosConCheque.totalesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class OP_TraeRecaudacionRow
        Inherits Global.System.Data.DataRow
        
        Private tableOP_TraeRecaudacion As OP_TraeRecaudacionDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOP_TraeRecaudacion = CType(Me.Table,OP_TraeRecaudacionDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property daz_cuentabanco() As String
            Get
                Try 
                    Return CType(Me(Me.tableOP_TraeRecaudacion.daz_cuentabancoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'daz_cuentabanco' de la tabla 'OP_TraeRecaudacion' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_TraeRecaudacion.daz_cuentabancoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property totales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableOP_TraeRecaudacion.totalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'totales' de la tabla 'OP_TraeRecaudacion' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_TraeRecaudacion.totalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdaz_cuentabancoNull() As Boolean
            Return Me.IsNull(Me.tableOP_TraeRecaudacion.daz_cuentabancoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdaz_cuentabancoNull()
            Me(Me.tableOP_TraeRecaudacion.daz_cuentabancoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstotalesNull() As Boolean
            Return Me.IsNull(Me.tableOP_TraeRecaudacion.totalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettotalesNull()
            Me(Me.tableOP_TraeRecaudacion.totalesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class OP_TraeTotalesRow
        Inherits Global.System.Data.DataRow
        
        Private tableOP_TraeTotales As OP_TraeTotalesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOP_TraeTotales = CType(Me.Table,OP_TraeTotalesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property daz_cuentabanco() As String
            Get
                Try 
                    Return CType(Me(Me.tableOP_TraeTotales.daz_cuentabancoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'daz_cuentabanco' de la tabla 'OP_TraeTotales' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_TraeTotales.daz_cuentabancoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property totales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableOP_TraeTotales.totalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'totales' de la tabla 'OP_TraeTotales' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_TraeTotales.totalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdaz_cuentabancoNull() As Boolean
            Return Me.IsNull(Me.tableOP_TraeTotales.daz_cuentabancoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdaz_cuentabancoNull()
            Me(Me.tableOP_TraeTotales.daz_cuentabancoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstotalesNull() As Boolean
            Return Me.IsNull(Me.tableOP_TraeTotales.totalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettotalesNull()
            Me(Me.tableOP_TraeTotales.totalesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class OP_TraeTransferenciasNegRow
        Inherits Global.System.Data.DataRow
        
        Private tableOP_TraeTransferenciasNeg As OP_TraeTransferenciasNegDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOP_TraeTransferenciasNeg = CType(Me.Table,OP_TraeTransferenciasNegDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property daz_cuentabanco() As String
            Get
                Try 
                    Return CType(Me(Me.tableOP_TraeTransferenciasNeg.daz_cuentabancoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'daz_cuentabanco' de la tabla 'OP_TraeTransferenciasNeg' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_TraeTransferenciasNeg.daz_cuentabancoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property totales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableOP_TraeTransferenciasNeg.totalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'totales' de la tabla 'OP_TraeTransferenciasNeg' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_TraeTransferenciasNeg.totalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdaz_cuentabancoNull() As Boolean
            Return Me.IsNull(Me.tableOP_TraeTransferenciasNeg.daz_cuentabancoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdaz_cuentabancoNull()
            Me(Me.tableOP_TraeTransferenciasNeg.daz_cuentabancoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstotalesNull() As Boolean
            Return Me.IsNull(Me.tableOP_TraeTransferenciasNeg.totalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettotalesNull()
            Me(Me.tableOP_TraeTransferenciasNeg.totalesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class OP_TraeTransferenciasPosRow
        Inherits Global.System.Data.DataRow
        
        Private tableOP_TraeTransferenciasPos As OP_TraeTransferenciasPosDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOP_TraeTransferenciasPos = CType(Me.Table,OP_TraeTransferenciasPosDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property daz_cuentabanco() As String
            Get
                Try 
                    Return CType(Me(Me.tableOP_TraeTransferenciasPos.daz_cuentabancoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'daz_cuentabanco' de la tabla 'OP_TraeTransferenciasPos' e"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_TraeTransferenciasPos.daz_cuentabancoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property totales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableOP_TraeTransferenciasPos.totalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'totales' de la tabla 'OP_TraeTransferenciasPos' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_TraeTransferenciasPos.totalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Isdaz_cuentabancoNull() As Boolean
            Return Me.IsNull(Me.tableOP_TraeTransferenciasPos.daz_cuentabancoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Setdaz_cuentabancoNull()
            Me(Me.tableOP_TraeTransferenciasPos.daz_cuentabancoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstotalesNull() As Boolean
            Return Me.IsNull(Me.tableOP_TraeTransferenciasPos.totalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettotalesNull()
            Me(Me.tableOP_TraeTransferenciasPos.totalesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TESDPLRow
        Inherits Global.System.Data.DataRow
        
        Private tableTESDPL As TESDPLDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTESDPL = CType(Me.Table,TESDPLDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPL_CODIGO() As Long
            Get
                Return CType(Me(Me.tableTESDPL.DPL_CODIGOColumn),Long)
            End Get
            Set
                Me(Me.tableTESDPL.DPL_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLA_CODIGO() As Long
            Get
                Return CType(Me(Me.tableTESDPL.PLA_CODIGOColumn),Long)
            End Get
            Set
                Me(Me.tableTESDPL.PLA_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Expr1() As Integer
            Get
                Return CType(Me(Me.tableTESDPL.Expr1Column),Integer)
            End Get
            Set
                Me(Me.tableTESDPL.Expr1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPL_SALDOINI() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.DPL_SALDOINIColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DPL_SALDOINI' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.DPL_SALDOINIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPL_RESCATES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.DPL_RESCATESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DPL_RESCATES' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.DPL_RESCATESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPL_RECAUDACION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.DPL_RECAUDACIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DPL_RECAUDACION' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.DPL_RECAUDACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPL_CHEQUESDEV() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.DPL_CHEQUESDEVColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DPL_CHEQUESDEV' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.DPL_CHEQUESDEVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPL_APORTES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.DPL_APORTESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DPL_APORTES' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.DPL_APORTESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPL_OTROSINGRESOS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.DPL_OTROSINGRESOSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DPL_OTROSINGRESOS' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.DPL_OTROSINGRESOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPL_PAGOSCHE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.DPL_PAGOSCHEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DPL_PAGOSCHE' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.DPL_PAGOSCHEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPL_PAGOSCAR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.DPL_PAGOSCARColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DPL_PAGOSCAR' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.DPL_PAGOSCARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPL_CHEQUESCAR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.DPL_CHEQUESCARColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DPL_CHEQUESCAR' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.DPL_CHEQUESCARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPL_TRANSFERENCIASPOS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.DPL_TRANSFERENCIASPOSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DPL_TRANSFERENCIASPOS' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.DPL_TRANSFERENCIASPOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPL_TRANSFERENCIASNEG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.DPL_TRANSFERENCIASNEGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DPL_TRANSFERENCIASNEG' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.DPL_TRANSFERENCIASNEGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPL_PORCOLOCAR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.DPL_PORCOLOCARColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DPL_PORCOLOCAR' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.DPL_PORCOLOCARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPL_COLOCACIONES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.DPL_COLOCACIONESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DPL_COLOCACIONES' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.DPL_COLOCACIONESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPL_SALDO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.DPL_SALDOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DPL_SALDO' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.DPL_SALDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPL_AUDITORIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.DPL_AUDITORIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DPL_AUDITORIA' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.DPL_AUDITORIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CODIGO() As String
            Get
                Return CType(Me(Me.tableTESDPL.CTE_CODIGOColumn),String)
            End Get
            Set
                Me(Me.tableTESDPL.CTE_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Expr2() As Long
            Get
                Return CType(Me(Me.tableTESDPL.Expr2Column),Long)
            End Get
            Set
                Me(Me.tableTESDPL.Expr2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CON_CODIGO() As Long
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.CON_CODIGOColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CON_CODIGO' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.CON_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MON_CODIGO() As String
            Get
                Return CType(Me(Me.tableTESDPL.MON_CODIGOColumn),String)
            End Get
            Set
                Me(Me.tableTESDPL.MON_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMP_CODIGO() As Long
            Get
                Return CType(Me(Me.tableTESDPL.EMP_CODIGOColumn),Long)
            End Get
            Set
                Me(Me.tableTESDPL.EMP_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_NUMERO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.CTE_NUMEROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_NUMERO' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.CTE_NUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.CTE_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CUENTA' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.CTE_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_SIGLA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.CTE_SIGLAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_SIGLA' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.CTE_SIGLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_GRUPO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.CTE_GRUPOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_GRUPO' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.CTE_GRUPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_TIPO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.CTE_TIPOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_TIPO' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.CTE_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_SECUENCIA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.CTE_SECUENCIAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_SECUENCIA' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.CTE_SECUENCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_COLCHON1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.CTE_COLCHON1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_COLCHON1' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.CTE_COLCHON1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_COLCHON2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.CTE_COLCHON2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_COLCHON2' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.CTE_COLCHON2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_PLAZA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.CTE_PLAZAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_PLAZA' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.CTE_PLAZAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_MADRE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.CTE_MADREColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_MADRE' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.CTE_MADREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_AUDITORIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.CTE_AUDITORIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_AUDITORIA' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.CTE_AUDITORIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_SOCIEDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.CTE_SOCIEDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_SOCIEDAD' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.CTE_SOCIEDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CODBANCO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.CTE_CODBANCOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CODBANCO' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.CTE_CODBANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CUENTAID() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.CTE_CUENTAIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CUENTAID' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.CTE_CUENTAIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_GLOSA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.CTE_GLOSAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_GLOSA' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.CTE_GLOSAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CONTABLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.CTE_CONTABLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CONTABLE' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.CTE_CONTABLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_MONEDASAP() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.CTE_MONEDASAPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_MONEDASAP' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.CTE_MONEDASAPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_VIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.CTE_VIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_VIA' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.CTE_VIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CODCTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.CTE_CODCTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CODCTE' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.CTE_CODCTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_CODIGO() As Long
            Get
                Return CType(Me(Me.tableTESDPL.ENT_CODIGOColumn),Long)
            End Get
            Set
                Me(Me.tableTESDPL.ENT_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TEN_CODIGO() As Integer
            Get
                Return CType(Me(Me.tableTESDPL.TEN_CODIGOColumn),Integer)
            End Get
            Set
                Me(Me.tableTESDPL.TEN_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_RAZON() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.ENT_RAZONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENT_RAZON' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.ENT_RAZONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_ABREVIATURA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.ENT_ABREVIATURAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENT_ABREVIATURA' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.ENT_ABREVIATURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_RUT() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.ENT_RUTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENT_RUT' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.ENT_RUTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_LIMITE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.ENT_LIMITEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENT_LIMITE' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.ENT_LIMITEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_ESTADO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.ENT_ESTADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENT_ESTADO' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.ENT_ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_SITIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.ENT_SITIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENT_SITIO' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.ENT_SITIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_AUDITORIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.ENT_AUDITORIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENT_AUDITORIA' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.ENT_AUDITORIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_SAP() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDPL.ENT_SAPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENT_SAP' de la tabla 'TESDPL' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDPL.ENT_SAPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPL_SALDOININull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.DPL_SALDOINIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPL_SALDOININull()
            Me(Me.tableTESDPL.DPL_SALDOINIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPL_RESCATESNull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.DPL_RESCATESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPL_RESCATESNull()
            Me(Me.tableTESDPL.DPL_RESCATESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPL_RECAUDACIONNull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.DPL_RECAUDACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPL_RECAUDACIONNull()
            Me(Me.tableTESDPL.DPL_RECAUDACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPL_CHEQUESDEVNull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.DPL_CHEQUESDEVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPL_CHEQUESDEVNull()
            Me(Me.tableTESDPL.DPL_CHEQUESDEVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPL_APORTESNull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.DPL_APORTESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPL_APORTESNull()
            Me(Me.tableTESDPL.DPL_APORTESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPL_OTROSINGRESOSNull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.DPL_OTROSINGRESOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPL_OTROSINGRESOSNull()
            Me(Me.tableTESDPL.DPL_OTROSINGRESOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPL_PAGOSCHENull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.DPL_PAGOSCHEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPL_PAGOSCHENull()
            Me(Me.tableTESDPL.DPL_PAGOSCHEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPL_PAGOSCARNull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.DPL_PAGOSCARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPL_PAGOSCARNull()
            Me(Me.tableTESDPL.DPL_PAGOSCARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPL_CHEQUESCARNull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.DPL_CHEQUESCARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPL_CHEQUESCARNull()
            Me(Me.tableTESDPL.DPL_CHEQUESCARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPL_TRANSFERENCIASPOSNull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.DPL_TRANSFERENCIASPOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPL_TRANSFERENCIASPOSNull()
            Me(Me.tableTESDPL.DPL_TRANSFERENCIASPOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPL_TRANSFERENCIASNEGNull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.DPL_TRANSFERENCIASNEGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPL_TRANSFERENCIASNEGNull()
            Me(Me.tableTESDPL.DPL_TRANSFERENCIASNEGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPL_PORCOLOCARNull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.DPL_PORCOLOCARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPL_PORCOLOCARNull()
            Me(Me.tableTESDPL.DPL_PORCOLOCARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPL_COLOCACIONESNull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.DPL_COLOCACIONESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPL_COLOCACIONESNull()
            Me(Me.tableTESDPL.DPL_COLOCACIONESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPL_SALDONull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.DPL_SALDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPL_SALDONull()
            Me(Me.tableTESDPL.DPL_SALDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPL_AUDITORIANull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.DPL_AUDITORIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPL_AUDITORIANull()
            Me(Me.tableTESDPL.DPL_AUDITORIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCON_CODIGONull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.CON_CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCON_CODIGONull()
            Me(Me.tableTESDPL.CON_CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_NUMERONull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.CTE_NUMEROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_NUMERONull()
            Me(Me.tableTESDPL.CTE_NUMEROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.CTE_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CUENTANull()
            Me(Me.tableTESDPL.CTE_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_SIGLANull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.CTE_SIGLAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_SIGLANull()
            Me(Me.tableTESDPL.CTE_SIGLAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_GRUPONull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.CTE_GRUPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_GRUPONull()
            Me(Me.tableTESDPL.CTE_GRUPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_TIPONull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.CTE_TIPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_TIPONull()
            Me(Me.tableTESDPL.CTE_TIPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_SECUENCIANull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.CTE_SECUENCIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_SECUENCIANull()
            Me(Me.tableTESDPL.CTE_SECUENCIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_COLCHON1Null() As Boolean
            Return Me.IsNull(Me.tableTESDPL.CTE_COLCHON1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_COLCHON1Null()
            Me(Me.tableTESDPL.CTE_COLCHON1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_COLCHON2Null() As Boolean
            Return Me.IsNull(Me.tableTESDPL.CTE_COLCHON2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_COLCHON2Null()
            Me(Me.tableTESDPL.CTE_COLCHON2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_PLAZANull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.CTE_PLAZAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_PLAZANull()
            Me(Me.tableTESDPL.CTE_PLAZAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_MADRENull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.CTE_MADREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_MADRENull()
            Me(Me.tableTESDPL.CTE_MADREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_AUDITORIANull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.CTE_AUDITORIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_AUDITORIANull()
            Me(Me.tableTESDPL.CTE_AUDITORIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_SOCIEDADNull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.CTE_SOCIEDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_SOCIEDADNull()
            Me(Me.tableTESDPL.CTE_SOCIEDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CODBANCONull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.CTE_CODBANCOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CODBANCONull()
            Me(Me.tableTESDPL.CTE_CODBANCOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CUENTAIDNull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.CTE_CUENTAIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CUENTAIDNull()
            Me(Me.tableTESDPL.CTE_CUENTAIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_GLOSANull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.CTE_GLOSAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_GLOSANull()
            Me(Me.tableTESDPL.CTE_GLOSAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CONTABLENull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.CTE_CONTABLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CONTABLENull()
            Me(Me.tableTESDPL.CTE_CONTABLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_MONEDASAPNull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.CTE_MONEDASAPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_MONEDASAPNull()
            Me(Me.tableTESDPL.CTE_MONEDASAPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_VIANull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.CTE_VIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_VIANull()
            Me(Me.tableTESDPL.CTE_VIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CODCTENull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.CTE_CODCTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CODCTENull()
            Me(Me.tableTESDPL.CTE_CODCTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENT_RAZONNull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.ENT_RAZONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENT_RAZONNull()
            Me(Me.tableTESDPL.ENT_RAZONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENT_ABREVIATURANull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.ENT_ABREVIATURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENT_ABREVIATURANull()
            Me(Me.tableTESDPL.ENT_ABREVIATURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENT_RUTNull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.ENT_RUTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENT_RUTNull()
            Me(Me.tableTESDPL.ENT_RUTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENT_LIMITENull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.ENT_LIMITEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENT_LIMITENull()
            Me(Me.tableTESDPL.ENT_LIMITEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENT_ESTADONull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.ENT_ESTADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENT_ESTADONull()
            Me(Me.tableTESDPL.ENT_ESTADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENT_SITIONull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.ENT_SITIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENT_SITIONull()
            Me(Me.tableTESDPL.ENT_SITIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENT_AUDITORIANull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.ENT_AUDITORIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENT_AUDITORIANull()
            Me(Me.tableTESDPL.ENT_AUDITORIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENT_SAPNull() As Boolean
            Return Me.IsNull(Me.tableTESDPL.ENT_SAPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENT_SAPNull()
            Me(Me.tableTESDPL.ENT_SAPColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TESCUARow
        Inherits Global.System.Data.DataRow
        
        Private tableTESCUA As TESCUADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTESCUA = CType(Me.Table,TESCUADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_CODIGO() As Decimal
            Get
                Return CType(Me(Me.tableTESCUA.CUA_CODIGOColumn),Decimal)
            End Get
            Set
                Me(Me.tableTESCUA.CUA_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLA_CODIGO() As Long
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.PLA_CODIGOColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PLA_CODIGO' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.PLA_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CTE_CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CODIGO' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CTE_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_SALDOINI() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_SALDOINIColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_SALDOINI' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_SALDOINIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_RESCATES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_RESCATESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_RESCATES' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_RESCATESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_RESCATES2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_RESCATES2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_RESCATES2' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_RESCATES2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_RECAUDACION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_RECAUDACIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_RECAUDACION' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_RECAUDACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_RECAUDACION2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_RECAUDACION2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_RECAUDACION2' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_RECAUDACION2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_CHEQUESDEV() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_CHEQUESDEVColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_CHEQUESDEV' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_CHEQUESDEVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_CHEQUESDEV2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_CHEQUESDEV2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_CHEQUESDEV2' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_CHEQUESDEV2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_APORTES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_APORTESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_APORTES' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_APORTESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_APORTES2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_APORTES2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_APORTES2' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_APORTES2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_OTROSINGRESOS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_OTROSINGRESOSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_OTROSINGRESOS' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_OTROSINGRESOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_OTROSINGRESOS2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_OTROSINGRESOS2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_OTROSINGRESOS2' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_OTROSINGRESOS2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_PAGOSCHE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_PAGOSCHEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_PAGOSCHE' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_PAGOSCHEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_PAGOSCHE2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_PAGOSCHE2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_PAGOSCHE2' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_PAGOSCHE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_PAGOSCAR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_PAGOSCARColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_PAGOSCAR' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_PAGOSCARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_PAGOSCAR2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_PAGOSCAR2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_PAGOSCAR2' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_PAGOSCAR2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_CHEQUESCAR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_CHEQUESCARColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_CHEQUESCAR' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_CHEQUESCARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_CHEQUESCAR2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_CHEQUESCAR2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_CHEQUESCAR2' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_CHEQUESCAR2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_TRANSFERENCIASPOS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_TRANSFERENCIASPOSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_TRANSFERENCIASPOS' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_TRANSFERENCIASPOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_TRANSFERENCIASPOS2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_TRANSFERENCIASPOS2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_TRANSFERENCIASPOS2' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_TRANSFERENCIASPOS2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_TRANSFERENCIASNEG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_TRANSFERENCIASNEGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_TRANSFERENCIASNEG' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_TRANSFERENCIASNEGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_TRANSFERENCIASNEG2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_TRANSFERENCIASNEG2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_TRANSFERENCIASNEG2' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_TRANSFERENCIASNEG2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_PORCOLOCAR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_PORCOLOCARColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_PORCOLOCAR' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_PORCOLOCARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_PORCOLOCAR2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_PORCOLOCAR2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_PORCOLOCAR2' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_PORCOLOCAR2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_COLOCACIONES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_COLOCACIONESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_COLOCACIONES' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_COLOCACIONESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_COLOCACIONES2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_COLOCACIONES2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_COLOCACIONES2' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_COLOCACIONES2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_SALDO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_SALDOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_SALDO' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_SALDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_SALDO2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_SALDO2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_SALDO2' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_SALDO2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_EGRESOSCHE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_EGRESOSCHEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_EGRESOSCHE' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_EGRESOSCHEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_PROXIMOSALDO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCUA.CUA_PROXIMOSALDOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_PROXIMOSALDO' de la tabla 'TESCUA' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCUA.CUA_PROXIMOSALDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPLA_CODIGONull() As Boolean
            Return Me.IsNull(Me.tableTESCUA.PLA_CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPLA_CODIGONull()
            Me(Me.tableTESCUA.PLA_CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CODIGONull() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CTE_CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CODIGONull()
            Me(Me.tableTESCUA.CTE_CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_SALDOININull() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_SALDOINIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_SALDOININull()
            Me(Me.tableTESCUA.CUA_SALDOINIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_RESCATESNull() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_RESCATESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_RESCATESNull()
            Me(Me.tableTESCUA.CUA_RESCATESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_RESCATES2Null() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_RESCATES2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_RESCATES2Null()
            Me(Me.tableTESCUA.CUA_RESCATES2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_RECAUDACIONNull() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_RECAUDACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_RECAUDACIONNull()
            Me(Me.tableTESCUA.CUA_RECAUDACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_RECAUDACION2Null() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_RECAUDACION2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_RECAUDACION2Null()
            Me(Me.tableTESCUA.CUA_RECAUDACION2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_CHEQUESDEVNull() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_CHEQUESDEVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_CHEQUESDEVNull()
            Me(Me.tableTESCUA.CUA_CHEQUESDEVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_CHEQUESDEV2Null() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_CHEQUESDEV2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_CHEQUESDEV2Null()
            Me(Me.tableTESCUA.CUA_CHEQUESDEV2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_APORTESNull() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_APORTESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_APORTESNull()
            Me(Me.tableTESCUA.CUA_APORTESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_APORTES2Null() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_APORTES2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_APORTES2Null()
            Me(Me.tableTESCUA.CUA_APORTES2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_OTROSINGRESOSNull() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_OTROSINGRESOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_OTROSINGRESOSNull()
            Me(Me.tableTESCUA.CUA_OTROSINGRESOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_OTROSINGRESOS2Null() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_OTROSINGRESOS2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_OTROSINGRESOS2Null()
            Me(Me.tableTESCUA.CUA_OTROSINGRESOS2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_PAGOSCHENull() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_PAGOSCHEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_PAGOSCHENull()
            Me(Me.tableTESCUA.CUA_PAGOSCHEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_PAGOSCHE2Null() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_PAGOSCHE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_PAGOSCHE2Null()
            Me(Me.tableTESCUA.CUA_PAGOSCHE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_PAGOSCARNull() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_PAGOSCARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_PAGOSCARNull()
            Me(Me.tableTESCUA.CUA_PAGOSCARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_PAGOSCAR2Null() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_PAGOSCAR2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_PAGOSCAR2Null()
            Me(Me.tableTESCUA.CUA_PAGOSCAR2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_CHEQUESCARNull() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_CHEQUESCARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_CHEQUESCARNull()
            Me(Me.tableTESCUA.CUA_CHEQUESCARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_CHEQUESCAR2Null() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_CHEQUESCAR2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_CHEQUESCAR2Null()
            Me(Me.tableTESCUA.CUA_CHEQUESCAR2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_TRANSFERENCIASPOSNull() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_TRANSFERENCIASPOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_TRANSFERENCIASPOSNull()
            Me(Me.tableTESCUA.CUA_TRANSFERENCIASPOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_TRANSFERENCIASPOS2Null() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_TRANSFERENCIASPOS2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_TRANSFERENCIASPOS2Null()
            Me(Me.tableTESCUA.CUA_TRANSFERENCIASPOS2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_TRANSFERENCIASNEGNull() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_TRANSFERENCIASNEGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_TRANSFERENCIASNEGNull()
            Me(Me.tableTESCUA.CUA_TRANSFERENCIASNEGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_TRANSFERENCIASNEG2Null() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_TRANSFERENCIASNEG2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_TRANSFERENCIASNEG2Null()
            Me(Me.tableTESCUA.CUA_TRANSFERENCIASNEG2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_PORCOLOCARNull() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_PORCOLOCARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_PORCOLOCARNull()
            Me(Me.tableTESCUA.CUA_PORCOLOCARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_PORCOLOCAR2Null() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_PORCOLOCAR2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_PORCOLOCAR2Null()
            Me(Me.tableTESCUA.CUA_PORCOLOCAR2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_COLOCACIONESNull() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_COLOCACIONESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_COLOCACIONESNull()
            Me(Me.tableTESCUA.CUA_COLOCACIONESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_COLOCACIONES2Null() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_COLOCACIONES2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_COLOCACIONES2Null()
            Me(Me.tableTESCUA.CUA_COLOCACIONES2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_SALDONull() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_SALDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_SALDONull()
            Me(Me.tableTESCUA.CUA_SALDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_SALDO2Null() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_SALDO2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_SALDO2Null()
            Me(Me.tableTESCUA.CUA_SALDO2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_EGRESOSCHENull() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_EGRESOSCHEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_EGRESOSCHENull()
            Me(Me.tableTESCUA.CUA_EGRESOSCHEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_PROXIMOSALDONull() As Boolean
            Return Me.IsNull(Me.tableTESCUA.CUA_PROXIMOSALDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_PROXIMOSALDONull()
            Me(Me.tableTESCUA.CUA_PROXIMOSALDOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class Actualiza_PlanillaRow
        Inherits Global.System.Data.DataRow
        
        Private tableActualiza_Planilla As Actualiza_PlanillaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableActualiza_Planilla = CType(Me.Table,Actualiza_PlanillaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLA_CODIGO() As Long
            Get
                Return CType(Me(Me.tableActualiza_Planilla.PLA_CODIGOColumn),Long)
            End Get
            Set
                Me(Me.tableActualiza_Planilla.PLA_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableActualiza_Planilla.Total1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total1' de la tabla 'Actualiza_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableActualiza_Planilla.Total1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableActualiza_Planilla.Total2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total2' de la tabla 'Actualiza_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableActualiza_Planilla.Total2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total3() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableActualiza_Planilla.Total3Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total3' de la tabla 'Actualiza_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableActualiza_Planilla.Total3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total4() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableActualiza_Planilla.Total4Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total4' de la tabla 'Actualiza_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableActualiza_Planilla.Total4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableActualiza_Planilla.Total5Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total5' de la tabla 'Actualiza_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableActualiza_Planilla.Total5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total6() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableActualiza_Planilla.Total6Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total6' de la tabla 'Actualiza_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableActualiza_Planilla.Total6Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total7() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableActualiza_Planilla.Total7Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total7' de la tabla 'Actualiza_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableActualiza_Planilla.Total7Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total8() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableActualiza_Planilla.Total8Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total8' de la tabla 'Actualiza_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableActualiza_Planilla.Total8Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total9() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableActualiza_Planilla.Total9Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total9' de la tabla 'Actualiza_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableActualiza_Planilla.Total9Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableActualiza_Planilla.Total10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total10' de la tabla 'Actualiza_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableActualiza_Planilla.Total10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total11() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableActualiza_Planilla.Total11Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total11' de la tabla 'Actualiza_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableActualiza_Planilla.Total11Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Total12() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableActualiza_Planilla.Total12Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Total12' de la tabla 'Actualiza_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableActualiza_Planilla.Total12Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property total13() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableActualiza_Planilla.total13Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'total13' de la tabla 'Actualiza_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableActualiza_Planilla.total13Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property total14() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableActualiza_Planilla.total14Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'total14' de la tabla 'Actualiza_Planilla' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableActualiza_Planilla.total14Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal1Null() As Boolean
            Return Me.IsNull(Me.tableActualiza_Planilla.Total1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal1Null()
            Me(Me.tableActualiza_Planilla.Total1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal2Null() As Boolean
            Return Me.IsNull(Me.tableActualiza_Planilla.Total2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal2Null()
            Me(Me.tableActualiza_Planilla.Total2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal3Null() As Boolean
            Return Me.IsNull(Me.tableActualiza_Planilla.Total3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal3Null()
            Me(Me.tableActualiza_Planilla.Total3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal4Null() As Boolean
            Return Me.IsNull(Me.tableActualiza_Planilla.Total4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal4Null()
            Me(Me.tableActualiza_Planilla.Total4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal5Null() As Boolean
            Return Me.IsNull(Me.tableActualiza_Planilla.Total5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal5Null()
            Me(Me.tableActualiza_Planilla.Total5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal6Null() As Boolean
            Return Me.IsNull(Me.tableActualiza_Planilla.Total6Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal6Null()
            Me(Me.tableActualiza_Planilla.Total6Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal7Null() As Boolean
            Return Me.IsNull(Me.tableActualiza_Planilla.Total7Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal7Null()
            Me(Me.tableActualiza_Planilla.Total7Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal8Null() As Boolean
            Return Me.IsNull(Me.tableActualiza_Planilla.Total8Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal8Null()
            Me(Me.tableActualiza_Planilla.Total8Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal9Null() As Boolean
            Return Me.IsNull(Me.tableActualiza_Planilla.Total9Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal9Null()
            Me(Me.tableActualiza_Planilla.Total9Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal10Null() As Boolean
            Return Me.IsNull(Me.tableActualiza_Planilla.Total10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal10Null()
            Me(Me.tableActualiza_Planilla.Total10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal11Null() As Boolean
            Return Me.IsNull(Me.tableActualiza_Planilla.Total11Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal11Null()
            Me(Me.tableActualiza_Planilla.Total11Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotal12Null() As Boolean
            Return Me.IsNull(Me.tableActualiza_Planilla.Total12Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotal12Null()
            Me(Me.tableActualiza_Planilla.Total12Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Istotal13Null() As Boolean
            Return Me.IsNull(Me.tableActualiza_Planilla.total13Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Settotal13Null()
            Me(Me.tableActualiza_Planilla.total13Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function Istotal14Null() As Boolean
            Return Me.IsNull(Me.tableActualiza_Planilla.total14Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub Settotal14Null()
            Me(Me.tableActualiza_Planilla.total14Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TESDOPRow
        Inherits Global.System.Data.DataRow
        
        Private tableTESDOP As TESDOPDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTESDOP = CType(Me.Table,TESDOPDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_CODIGO() As Long
            Get
                Return CType(Me(Me.tableTESDOP.DOP_CODIGOColumn),Long)
            End Get
            Set
                Me(Me.tableTESDOP.DOP_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPL_CODIGO() As Long
            Get
                Try 
                    Return CType(Me(Me.tableTESDOP.DPL_CODIGOColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DPL_CODIGO' de la tabla 'TESDOP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDOP.DPL_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COL_CODIGO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTESDOP.COL_CODIGOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COL_CODIGO' de la tabla 'TESDOP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDOP.COL_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_MONTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDOP.DOP_MONTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DOP_MONTO' de la tabla 'TESDOP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDOP.DOP_MONTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_TIPO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDOP.DOP_TIPOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DOP_TIPO' de la tabla 'TESDOP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDOP.DOP_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_NUMERO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDOP.DOP_NUMEROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DOP_NUMERO' de la tabla 'TESDOP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDOP.DOP_NUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_GLOSAADIC() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDOP.DOP_GLOSAADICColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DOP_GLOSAADIC' de la tabla 'TESDOP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDOP.DOP_GLOSAADICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_AUDITORIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDOP.DOP_AUDITORIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DOP_AUDITORIA' de la tabla 'TESDOP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDOP.DOP_AUDITORIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_TIPOREC() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDOP.DOP_TIPORECColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DOP_TIPOREC' de la tabla 'TESDOP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDOP.DOP_TIPORECColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_CODIGO() As Long
            Get
                Try 
                    Return CType(Me(Me.tableTESDOP.DAZ_CODIGOColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_CODIGO' de la tabla 'TESDOP' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDOP.DAZ_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPL_CODIGONull() As Boolean
            Return Me.IsNull(Me.tableTESDOP.DPL_CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPL_CODIGONull()
            Me(Me.tableTESDOP.DPL_CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOL_CODIGONull() As Boolean
            Return Me.IsNull(Me.tableTESDOP.COL_CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOL_CODIGONull()
            Me(Me.tableTESDOP.COL_CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOP_MONTONull() As Boolean
            Return Me.IsNull(Me.tableTESDOP.DOP_MONTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOP_MONTONull()
            Me(Me.tableTESDOP.DOP_MONTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOP_TIPONull() As Boolean
            Return Me.IsNull(Me.tableTESDOP.DOP_TIPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOP_TIPONull()
            Me(Me.tableTESDOP.DOP_TIPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOP_NUMERONull() As Boolean
            Return Me.IsNull(Me.tableTESDOP.DOP_NUMEROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOP_NUMERONull()
            Me(Me.tableTESDOP.DOP_NUMEROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOP_GLOSAADICNull() As Boolean
            Return Me.IsNull(Me.tableTESDOP.DOP_GLOSAADICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOP_GLOSAADICNull()
            Me(Me.tableTESDOP.DOP_GLOSAADICColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOP_AUDITORIANull() As Boolean
            Return Me.IsNull(Me.tableTESDOP.DOP_AUDITORIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOP_AUDITORIANull()
            Me(Me.tableTESDOP.DOP_AUDITORIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOP_TIPORECNull() As Boolean
            Return Me.IsNull(Me.tableTESDOP.DOP_TIPORECColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOP_TIPORECNull()
            Me(Me.tableTESDOP.DOP_TIPORECColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_CODIGONull() As Boolean
            Return Me.IsNull(Me.tableTESDOP.DAZ_CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_CODIGONull()
            Me(Me.tableTESDOP.DAZ_CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TESPARRow
        Inherits Global.System.Data.DataRow
        
        Private tableTESPAR As TESPARDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTESPAR = CType(Me.Table,TESPARDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAR_ACTUALIZA() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTESPAR.PAR_ACTUALIZAColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PAR_ACTUALIZA' de la tabla 'TESPAR' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESPAR.PAR_ACTUALIZAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAR_FECHAPRO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTESPAR.PAR_FECHAPROColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PAR_FECHAPRO' de la tabla 'TESPAR' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESPAR.PAR_FECHAPROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAR_FECHAACT() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTESPAR.PAR_FECHAACTColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PAR_FECHAACT' de la tabla 'TESPAR' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESPAR.PAR_FECHAACTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAR_AUDITORIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESPAR.PAR_AUDITORIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PAR_AUDITORIA' de la tabla 'TESPAR' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESPAR.PAR_AUDITORIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAR_UNIDADPA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTESPAR.PAR_UNIDADPAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PAR_UNIDADPA' de la tabla 'TESPAR' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESPAR.PAR_UNIDADPAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAR_PLANILLA() As Integer
            Get
                Return CType(Me(Me.tableTESPAR.PAR_PLANILLAColumn),Integer)
            End Get
            Set
                Me(Me.tableTESPAR.PAR_PLANILLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAR_ESTADOPLA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESPAR.PAR_ESTADOPLAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PAR_ESTADOPLA' de la tabla 'TESPAR' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESPAR.PAR_ESTADOPLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAR_LIMITECIERRE() As Single
            Get
                Try 
                    Return CType(Me(Me.tableTESPAR.PAR_LIMITECIERREColumn),Single)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PAR_LIMITECIERRE' de la tabla 'TESPAR' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESPAR.PAR_LIMITECIERREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAR_PLANILLAFONDO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTESPAR.PAR_PLANILLAFONDOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PAR_PLANILLAFONDO' de la tabla 'TESPAR' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESPAR.PAR_PLANILLAFONDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAR_ESTADOPLAFONDO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESPAR.PAR_ESTADOPLAFONDOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PAR_ESTADOPLAFONDO' de la tabla 'TESPAR' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESPAR.PAR_ESTADOPLAFONDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAR_FECHACIERRE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTESPAR.PAR_FECHACIERREColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PAR_FECHACIERRE' de la tabla 'TESPAR' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESPAR.PAR_FECHACIERREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAR_CUOTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESPAR.PAR_CUOTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PAR_CUOTA' de la tabla 'TESPAR' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESPAR.PAR_CUOTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAR_FECHAPROFON() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTESPAR.PAR_FECHAPROFONColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PAR_FECHAPROFON' de la tabla 'TESPAR' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESPAR.PAR_FECHAPROFONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAR_MANDANTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESPAR.PAR_MANDANTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PAR_MANDANTE' de la tabla 'TESPAR' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESPAR.PAR_MANDANTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAR_SOCIEDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESPAR.PAR_SOCIEDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PAR_SOCIEDAD' de la tabla 'TESPAR' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESPAR.PAR_SOCIEDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAR_CAJATES() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESPAR.PAR_CAJATESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PAR_CAJATES' de la tabla 'TESPAR' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESPAR.PAR_CAJATESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAR_ACTUALIZANull() As Boolean
            Return Me.IsNull(Me.tableTESPAR.PAR_ACTUALIZAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAR_ACTUALIZANull()
            Me(Me.tableTESPAR.PAR_ACTUALIZAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAR_FECHAPRONull() As Boolean
            Return Me.IsNull(Me.tableTESPAR.PAR_FECHAPROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAR_FECHAPRONull()
            Me(Me.tableTESPAR.PAR_FECHAPROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAR_FECHAACTNull() As Boolean
            Return Me.IsNull(Me.tableTESPAR.PAR_FECHAACTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAR_FECHAACTNull()
            Me(Me.tableTESPAR.PAR_FECHAACTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAR_AUDITORIANull() As Boolean
            Return Me.IsNull(Me.tableTESPAR.PAR_AUDITORIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAR_AUDITORIANull()
            Me(Me.tableTESPAR.PAR_AUDITORIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAR_UNIDADPANull() As Boolean
            Return Me.IsNull(Me.tableTESPAR.PAR_UNIDADPAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAR_UNIDADPANull()
            Me(Me.tableTESPAR.PAR_UNIDADPAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAR_ESTADOPLANull() As Boolean
            Return Me.IsNull(Me.tableTESPAR.PAR_ESTADOPLAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAR_ESTADOPLANull()
            Me(Me.tableTESPAR.PAR_ESTADOPLAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAR_LIMITECIERRENull() As Boolean
            Return Me.IsNull(Me.tableTESPAR.PAR_LIMITECIERREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAR_LIMITECIERRENull()
            Me(Me.tableTESPAR.PAR_LIMITECIERREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAR_PLANILLAFONDONull() As Boolean
            Return Me.IsNull(Me.tableTESPAR.PAR_PLANILLAFONDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAR_PLANILLAFONDONull()
            Me(Me.tableTESPAR.PAR_PLANILLAFONDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAR_ESTADOPLAFONDONull() As Boolean
            Return Me.IsNull(Me.tableTESPAR.PAR_ESTADOPLAFONDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAR_ESTADOPLAFONDONull()
            Me(Me.tableTESPAR.PAR_ESTADOPLAFONDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAR_FECHACIERRENull() As Boolean
            Return Me.IsNull(Me.tableTESPAR.PAR_FECHACIERREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAR_FECHACIERRENull()
            Me(Me.tableTESPAR.PAR_FECHACIERREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAR_CUOTANull() As Boolean
            Return Me.IsNull(Me.tableTESPAR.PAR_CUOTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAR_CUOTANull()
            Me(Me.tableTESPAR.PAR_CUOTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAR_FECHAPROFONNull() As Boolean
            Return Me.IsNull(Me.tableTESPAR.PAR_FECHAPROFONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAR_FECHAPROFONNull()
            Me(Me.tableTESPAR.PAR_FECHAPROFONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAR_MANDANTENull() As Boolean
            Return Me.IsNull(Me.tableTESPAR.PAR_MANDANTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAR_MANDANTENull()
            Me(Me.tableTESPAR.PAR_MANDANTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAR_SOCIEDADNull() As Boolean
            Return Me.IsNull(Me.tableTESPAR.PAR_SOCIEDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAR_SOCIEDADNull()
            Me(Me.tableTESPAR.PAR_SOCIEDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAR_CAJATESNull() As Boolean
            Return Me.IsNull(Me.tableTESPAR.PAR_CAJATESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAR_CAJATESNull()
            Me(Me.tableTESPAR.PAR_CAJATESColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TESDAZRow
        Inherits Global.System.Data.DataRow
        
        Private tableTESDAZ As TESDAZDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTESDAZ = CType(Me.Table,TESDAZDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_CODIGO() As Long
            Get
                Return CType(Me(Me.tableTESDAZ.DAZ_CODIGOColumn),Long)
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_MANDANTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_MANDANTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_MANDANTE' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_MANDANTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_SOCIEDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_SOCIEDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_SOCIEDAD' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_SOCIEDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_DOCCONT() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_DOCCONTColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_DOCCONT' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_DOCCONTColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_EJERCICIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_EJERCICIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_EJERCICIO' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_EJERCICIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_CLASEDOC() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_CLASEDOCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_CLASEDOC' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_CLASEDOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_CUENTABANCO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_CUENTABANCOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_CUENTABANCO' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_CUENTABANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_MONTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_MONTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_MONTO' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_MONTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_MONTOMON() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_MONTOMONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_MONTOMON' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_MONTOMONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_MONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_MONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_MONEDA' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_MONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_CONCEPTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_CONCEPTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_CONCEPTO' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_CONCEPTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_POSICION() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_POSICIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_POSICION' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_POSICIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_CAJA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_CAJAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_CAJA' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_CAJAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_FECHADOC() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_FECHADOCColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_FECHADOC' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_FECHADOCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_TEXTOPOS() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_TEXTOPOSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_TEXTOPOS' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_TEXTOPOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_FECHAz() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_FECHAzColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_FECHAz' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_FECHAzColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_MEDIOPAGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_MEDIOPAGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_MEDIOPAGO' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_MEDIOPAGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_RETENCION() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_RETENCIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_RETENCION' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_RETENCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_FECHADEP() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_FECHADEPColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_FECHADEP' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_FECHADEPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_DIAS() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_DIASColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_DIAS' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_DIASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_UNIDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_UNIDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_UNIDAD' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_UNIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_VIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_VIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_VIA' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_VIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_CLAVEBANCO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_CLAVEBANCOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_CLAVEBANCO' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_CLAVEBANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_ESTATUS() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_ESTATUSColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_ESTATUS' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_ESTATUSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_ENVIADOBANCO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_ENVIADOBANCOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_ENVIADOBANCO' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_ENVIADOBANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_ANULADO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_ANULADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_ANULADO' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_ANULADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_FECHAANU() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_FECHAANUColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_FECHAANU' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_FECHAANUColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_ESTADO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_ESTADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_ESTADO' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLA_CODIGO() As Long
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.PLA_CODIGOColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PLA_CODIGO' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.PLA_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_FECHADIS() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_FECHADISColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_FECHADIS' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_FECHADISColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_GLOSA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_GLOSAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_GLOSA' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_GLOSAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_COLUMNA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTESDAZ.DAZ_COLUMNAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_COLUMNA' de la tabla 'TESDAZ' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESDAZ.DAZ_COLUMNAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_MANDANTENull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_MANDANTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_MANDANTENull()
            Me(Me.tableTESDAZ.DAZ_MANDANTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_SOCIEDADNull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_SOCIEDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_SOCIEDADNull()
            Me(Me.tableTESDAZ.DAZ_SOCIEDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_DOCCONTNull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_DOCCONTColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_DOCCONTNull()
            Me(Me.tableTESDAZ.DAZ_DOCCONTColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_EJERCICIONull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_EJERCICIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_EJERCICIONull()
            Me(Me.tableTESDAZ.DAZ_EJERCICIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_CLASEDOCNull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_CLASEDOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_CLASEDOCNull()
            Me(Me.tableTESDAZ.DAZ_CLASEDOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_CUENTABANCONull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_CUENTABANCOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_CUENTABANCONull()
            Me(Me.tableTESDAZ.DAZ_CUENTABANCOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_MONTONull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_MONTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_MONTONull()
            Me(Me.tableTESDAZ.DAZ_MONTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_MONTOMONNull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_MONTOMONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_MONTOMONNull()
            Me(Me.tableTESDAZ.DAZ_MONTOMONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_MONEDANull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_MONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_MONEDANull()
            Me(Me.tableTESDAZ.DAZ_MONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_CONCEPTONull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_CONCEPTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_CONCEPTONull()
            Me(Me.tableTESDAZ.DAZ_CONCEPTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_POSICIONNull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_POSICIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_POSICIONNull()
            Me(Me.tableTESDAZ.DAZ_POSICIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_CAJANull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_CAJAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_CAJANull()
            Me(Me.tableTESDAZ.DAZ_CAJAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_FECHADOCNull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_FECHADOCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_FECHADOCNull()
            Me(Me.tableTESDAZ.DAZ_FECHADOCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_TEXTOPOSNull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_TEXTOPOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_TEXTOPOSNull()
            Me(Me.tableTESDAZ.DAZ_TEXTOPOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_FECHAzNull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_FECHAzColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_FECHAzNull()
            Me(Me.tableTESDAZ.DAZ_FECHAzColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_MEDIOPAGONull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_MEDIOPAGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_MEDIOPAGONull()
            Me(Me.tableTESDAZ.DAZ_MEDIOPAGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_RETENCIONNull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_RETENCIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_RETENCIONNull()
            Me(Me.tableTESDAZ.DAZ_RETENCIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_FECHADEPNull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_FECHADEPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_FECHADEPNull()
            Me(Me.tableTESDAZ.DAZ_FECHADEPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_DIASNull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_DIASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_DIASNull()
            Me(Me.tableTESDAZ.DAZ_DIASColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_UNIDADNull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_UNIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_UNIDADNull()
            Me(Me.tableTESDAZ.DAZ_UNIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_VIANull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_VIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_VIANull()
            Me(Me.tableTESDAZ.DAZ_VIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_CLAVEBANCONull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_CLAVEBANCOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_CLAVEBANCONull()
            Me(Me.tableTESDAZ.DAZ_CLAVEBANCOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_ESTATUSNull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_ESTATUSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_ESTATUSNull()
            Me(Me.tableTESDAZ.DAZ_ESTATUSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_ENVIADOBANCONull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_ENVIADOBANCOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_ENVIADOBANCONull()
            Me(Me.tableTESDAZ.DAZ_ENVIADOBANCOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_ANULADONull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_ANULADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_ANULADONull()
            Me(Me.tableTESDAZ.DAZ_ANULADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_FECHAANUNull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_FECHAANUColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_FECHAANUNull()
            Me(Me.tableTESDAZ.DAZ_FECHAANUColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_ESTADONull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_ESTADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_ESTADONull()
            Me(Me.tableTESDAZ.DAZ_ESTADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPLA_CODIGONull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.PLA_CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPLA_CODIGONull()
            Me(Me.tableTESDAZ.PLA_CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_FECHADISNull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_FECHADISColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_FECHADISNull()
            Me(Me.tableTESDAZ.DAZ_FECHADISColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_GLOSANull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_GLOSAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_GLOSANull()
            Me(Me.tableTESDAZ.DAZ_GLOSAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_COLUMNANull() As Boolean
            Return Me.IsNull(Me.tableTESDAZ.DAZ_COLUMNAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_COLUMNANull()
            Me(Me.tableTESDAZ.DAZ_COLUMNAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class AjustesManualesRow
        Inherits Global.System.Data.DataRow
        
        Private tableAjustesManuales As AjustesManualesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableAjustesManuales = CType(Me.Table,AjustesManualesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_CODIGO() As Long
            Get
                Return CType(Me(Me.tableAjustesManuales.DOP_CODIGOColumn),Long)
            End Get
            Set
                Me(Me.tableAjustesManuales.DOP_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DPL_CODIGO() As Long
            Get
                Try 
                    Return CType(Me(Me.tableAjustesManuales.DPL_CODIGOColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DPL_CODIGO' de la tabla 'AjustesManuales' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAjustesManuales.DPL_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COL_CODIGO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableAjustesManuales.COL_CODIGOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'COL_CODIGO' de la tabla 'AjustesManuales' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAjustesManuales.COL_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_MONTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAjustesManuales.DOP_MONTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DOP_MONTO' de la tabla 'AjustesManuales' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAjustesManuales.DOP_MONTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_TIPO() As String
            Get
                Try 
                    Return CType(Me(Me.tableAjustesManuales.DOP_TIPOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DOP_TIPO' de la tabla 'AjustesManuales' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAjustesManuales.DOP_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_NUMERO() As String
            Get
                Try 
                    Return CType(Me(Me.tableAjustesManuales.DOP_NUMEROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DOP_NUMERO' de la tabla 'AjustesManuales' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAjustesManuales.DOP_NUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_GLOSAADIC() As String
            Get
                Try 
                    Return CType(Me(Me.tableAjustesManuales.DOP_GLOSAADICColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DOP_GLOSAADIC' de la tabla 'AjustesManuales' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAjustesManuales.DOP_GLOSAADICColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_AUDITORIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableAjustesManuales.DOP_AUDITORIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DOP_AUDITORIA' de la tabla 'AjustesManuales' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAjustesManuales.DOP_AUDITORIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DOP_TIPOREC() As String
            Get
                Try 
                    Return CType(Me(Me.tableAjustesManuales.DOP_TIPORECColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DOP_TIPOREC' de la tabla 'AjustesManuales' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAjustesManuales.DOP_TIPORECColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_CODIGO() As Long
            Get
                Try 
                    Return CType(Me(Me.tableAjustesManuales.DAZ_CODIGOColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_CODIGO' de la tabla 'AjustesManuales' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAjustesManuales.DAZ_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CODIGO() As Integer
            Get
                Return CType(Me(Me.tableAjustesManuales.CTE_CODIGOColumn),Integer)
            End Get
            Set
                Me(Me.tableAjustesManuales.CTE_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Expr1() As String
            Get
                Try 
                    Return CType(Me(Me.tableAjustesManuales.Expr1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Expr1' de la tabla 'AjustesManuales' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAjustesManuales.Expr1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDPL_CODIGONull() As Boolean
            Return Me.IsNull(Me.tableAjustesManuales.DPL_CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDPL_CODIGONull()
            Me(Me.tableAjustesManuales.DPL_CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOL_CODIGONull() As Boolean
            Return Me.IsNull(Me.tableAjustesManuales.COL_CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOL_CODIGONull()
            Me(Me.tableAjustesManuales.COL_CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOP_MONTONull() As Boolean
            Return Me.IsNull(Me.tableAjustesManuales.DOP_MONTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOP_MONTONull()
            Me(Me.tableAjustesManuales.DOP_MONTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOP_TIPONull() As Boolean
            Return Me.IsNull(Me.tableAjustesManuales.DOP_TIPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOP_TIPONull()
            Me(Me.tableAjustesManuales.DOP_TIPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOP_NUMERONull() As Boolean
            Return Me.IsNull(Me.tableAjustesManuales.DOP_NUMEROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOP_NUMERONull()
            Me(Me.tableAjustesManuales.DOP_NUMEROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOP_GLOSAADICNull() As Boolean
            Return Me.IsNull(Me.tableAjustesManuales.DOP_GLOSAADICColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOP_GLOSAADICNull()
            Me(Me.tableAjustesManuales.DOP_GLOSAADICColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOP_AUDITORIANull() As Boolean
            Return Me.IsNull(Me.tableAjustesManuales.DOP_AUDITORIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOP_AUDITORIANull()
            Me(Me.tableAjustesManuales.DOP_AUDITORIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDOP_TIPORECNull() As Boolean
            Return Me.IsNull(Me.tableAjustesManuales.DOP_TIPORECColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDOP_TIPORECNull()
            Me(Me.tableAjustesManuales.DOP_TIPORECColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_CODIGONull() As Boolean
            Return Me.IsNull(Me.tableAjustesManuales.DAZ_CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_CODIGONull()
            Me(Me.tableAjustesManuales.DAZ_CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpr1Null() As Boolean
            Return Me.IsNull(Me.tableAjustesManuales.Expr1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpr1Null()
            Me(Me.tableAjustesManuales.Expr1Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TESCTERow
        Inherits Global.System.Data.DataRow
        
        Private tableTESCTE As TESCTEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTESCTE = CType(Me.Table,TESCTEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CODIGO() As Integer
            Get
                Return CType(Me(Me.tableTESCTE.CTE_CODIGOColumn),Integer)
            End Get
            Set
                Me(Me.tableTESCTE.CTE_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_CODIGO() As Long
            Get
                Return CType(Me(Me.tableTESCTE.ENT_CODIGOColumn),Long)
            End Get
            Set
                Me(Me.tableTESCTE.ENT_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CON_CODIGO() As Long
            Get
                Try 
                    Return CType(Me(Me.tableTESCTE.CON_CODIGOColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CON_CODIGO' de la tabla 'TESCTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCTE.CON_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MON_CODIGO() As String
            Get
                Return CType(Me(Me.tableTESCTE.MON_CODIGOColumn),String)
            End Get
            Set
                Me(Me.tableTESCTE.MON_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMP_CODIGO() As Long
            Get
                Return CType(Me(Me.tableTESCTE.EMP_CODIGOColumn),Long)
            End Get
            Set
                Me(Me.tableTESCTE.EMP_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_NUMERO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESCTE.CTE_NUMEROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_NUMERO' de la tabla 'TESCTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCTE.CTE_NUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESCTE.CTE_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CUENTA' de la tabla 'TESCTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCTE.CTE_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_SIGLA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESCTE.CTE_SIGLAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_SIGLA' de la tabla 'TESCTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCTE.CTE_SIGLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_GRUPO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESCTE.CTE_GRUPOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_GRUPO' de la tabla 'TESCTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCTE.CTE_GRUPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_TIPO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESCTE.CTE_TIPOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_TIPO' de la tabla 'TESCTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCTE.CTE_TIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_SECUENCIA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTESCTE.CTE_SECUENCIAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_SECUENCIA' de la tabla 'TESCTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCTE.CTE_SECUENCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_COLCHON1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCTE.CTE_COLCHON1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_COLCHON1' de la tabla 'TESCTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCTE.CTE_COLCHON1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_COLCHON2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTESCTE.CTE_COLCHON2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_COLCHON2' de la tabla 'TESCTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCTE.CTE_COLCHON2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_PLAZA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTESCTE.CTE_PLAZAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_PLAZA' de la tabla 'TESCTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCTE.CTE_PLAZAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_MADRE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTESCTE.CTE_MADREColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_MADRE' de la tabla 'TESCTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCTE.CTE_MADREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_AUDITORIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESCTE.CTE_AUDITORIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_AUDITORIA' de la tabla 'TESCTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCTE.CTE_AUDITORIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_SOCIEDAD() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESCTE.CTE_SOCIEDADColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_SOCIEDAD' de la tabla 'TESCTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCTE.CTE_SOCIEDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CODBANCO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESCTE.CTE_CODBANCOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CODBANCO' de la tabla 'TESCTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCTE.CTE_CODBANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CUENTAID() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESCTE.CTE_CUENTAIDColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CUENTAID' de la tabla 'TESCTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCTE.CTE_CUENTAIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_GLOSA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESCTE.CTE_GLOSAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_GLOSA' de la tabla 'TESCTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCTE.CTE_GLOSAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CONTABLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESCTE.CTE_CONTABLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CONTABLE' de la tabla 'TESCTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCTE.CTE_CONTABLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_MONEDASAP() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESCTE.CTE_MONEDASAPColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_MONEDASAP' de la tabla 'TESCTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCTE.CTE_MONEDASAPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_VIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESCTE.CTE_VIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_VIA' de la tabla 'TESCTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCTE.CTE_VIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CODCTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableTESCTE.CTE_CODCTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CODCTE' de la tabla 'TESCTE' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTESCTE.CTE_CODCTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCON_CODIGONull() As Boolean
            Return Me.IsNull(Me.tableTESCTE.CON_CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCON_CODIGONull()
            Me(Me.tableTESCTE.CON_CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_NUMERONull() As Boolean
            Return Me.IsNull(Me.tableTESCTE.CTE_NUMEROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_NUMERONull()
            Me(Me.tableTESCTE.CTE_NUMEROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableTESCTE.CTE_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CUENTANull()
            Me(Me.tableTESCTE.CTE_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_SIGLANull() As Boolean
            Return Me.IsNull(Me.tableTESCTE.CTE_SIGLAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_SIGLANull()
            Me(Me.tableTESCTE.CTE_SIGLAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_GRUPONull() As Boolean
            Return Me.IsNull(Me.tableTESCTE.CTE_GRUPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_GRUPONull()
            Me(Me.tableTESCTE.CTE_GRUPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_TIPONull() As Boolean
            Return Me.IsNull(Me.tableTESCTE.CTE_TIPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_TIPONull()
            Me(Me.tableTESCTE.CTE_TIPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_SECUENCIANull() As Boolean
            Return Me.IsNull(Me.tableTESCTE.CTE_SECUENCIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_SECUENCIANull()
            Me(Me.tableTESCTE.CTE_SECUENCIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_COLCHON1Null() As Boolean
            Return Me.IsNull(Me.tableTESCTE.CTE_COLCHON1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_COLCHON1Null()
            Me(Me.tableTESCTE.CTE_COLCHON1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_COLCHON2Null() As Boolean
            Return Me.IsNull(Me.tableTESCTE.CTE_COLCHON2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_COLCHON2Null()
            Me(Me.tableTESCTE.CTE_COLCHON2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_PLAZANull() As Boolean
            Return Me.IsNull(Me.tableTESCTE.CTE_PLAZAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_PLAZANull()
            Me(Me.tableTESCTE.CTE_PLAZAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_MADRENull() As Boolean
            Return Me.IsNull(Me.tableTESCTE.CTE_MADREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_MADRENull()
            Me(Me.tableTESCTE.CTE_MADREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_AUDITORIANull() As Boolean
            Return Me.IsNull(Me.tableTESCTE.CTE_AUDITORIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_AUDITORIANull()
            Me(Me.tableTESCTE.CTE_AUDITORIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_SOCIEDADNull() As Boolean
            Return Me.IsNull(Me.tableTESCTE.CTE_SOCIEDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_SOCIEDADNull()
            Me(Me.tableTESCTE.CTE_SOCIEDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CODBANCONull() As Boolean
            Return Me.IsNull(Me.tableTESCTE.CTE_CODBANCOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CODBANCONull()
            Me(Me.tableTESCTE.CTE_CODBANCOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CUENTAIDNull() As Boolean
            Return Me.IsNull(Me.tableTESCTE.CTE_CUENTAIDColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CUENTAIDNull()
            Me(Me.tableTESCTE.CTE_CUENTAIDColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_GLOSANull() As Boolean
            Return Me.IsNull(Me.tableTESCTE.CTE_GLOSAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_GLOSANull()
            Me(Me.tableTESCTE.CTE_GLOSAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CONTABLENull() As Boolean
            Return Me.IsNull(Me.tableTESCTE.CTE_CONTABLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CONTABLENull()
            Me(Me.tableTESCTE.CTE_CONTABLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_MONEDASAPNull() As Boolean
            Return Me.IsNull(Me.tableTESCTE.CTE_MONEDASAPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_MONEDASAPNull()
            Me(Me.tableTESCTE.CTE_MONEDASAPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_VIANull() As Boolean
            Return Me.IsNull(Me.tableTESCTE.CTE_VIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_VIANull()
            Me(Me.tableTESCTE.CTE_VIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CODCTENull() As Boolean
            Return Me.IsNull(Me.tableTESCTE.CTE_CODCTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CODCTENull()
            Me(Me.tableTESCTE.CTE_CODCTEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TraeCuadraturaRow
        Inherits Global.System.Data.DataRow
        
        Private tableTraeCuadratura As TraeCuadraturaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTraeCuadratura = CType(Me.Table,TraeCuadraturaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_CODIGO() As Decimal
            Get
                Return CType(Me(Me.tableTraeCuadratura.CUA_CODIGOColumn),Decimal)
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PLA_CODIGO() As Long
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.PLA_CODIGOColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'PLA_CODIGO' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.PLA_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CTE_CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CODIGO' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CTE_CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_SALDOINI() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_SALDOINIColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_SALDOINI' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_SALDOINIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_RESCATES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_RESCATESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_RESCATES' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_RESCATESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_RESCATES2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_RESCATES2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_RESCATES2' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_RESCATES2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_RECAUDACION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_RECAUDACIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_RECAUDACION' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_RECAUDACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_RECAUDACION2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_RECAUDACION2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_RECAUDACION2' de la tabla 'TraeCuadratura' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_RECAUDACION2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_CHEQUESDEV() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_CHEQUESDEVColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_CHEQUESDEV' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_CHEQUESDEVColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_CHEQUESDEV2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_CHEQUESDEV2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_CHEQUESDEV2' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_CHEQUESDEV2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_APORTES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_APORTESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_APORTES' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_APORTESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_APORTES2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_APORTES2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_APORTES2' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_APORTES2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_OTROSINGRESOS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_OTROSINGRESOSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_OTROSINGRESOS' de la tabla 'TraeCuadratura' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_OTROSINGRESOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_OTROSINGRESOS2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_OTROSINGRESOS2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_OTROSINGRESOS2' de la tabla 'TraeCuadratura' es DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_OTROSINGRESOS2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_PAGOSCHE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_PAGOSCHEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_PAGOSCHE' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_PAGOSCHEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_PAGOSCHE2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_PAGOSCHE2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_PAGOSCHE2' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_PAGOSCHE2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_PAGOSCAR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_PAGOSCARColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_PAGOSCAR' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_PAGOSCARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_PAGOSCAR2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_PAGOSCAR2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_PAGOSCAR2' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_PAGOSCAR2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_CHEQUESCAR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_CHEQUESCARColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_CHEQUESCAR' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_CHEQUESCARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_CHEQUESCAR2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_CHEQUESCAR2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_CHEQUESCAR2' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_CHEQUESCAR2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_TRANSFERENCIASPOS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_TRANSFERENCIASPOSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_TRANSFERENCIASPOS' de la tabla 'TraeCuadratura' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_TRANSFERENCIASPOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_TRANSFERENCIASPOS2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_TRANSFERENCIASPOS2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_TRANSFERENCIASPOS2' de la tabla 'TraeCuadratura' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_TRANSFERENCIASPOS2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_TRANSFERENCIASNEG() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_TRANSFERENCIASNEGColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_TRANSFERENCIASNEG' de la tabla 'TraeCuadratura' es DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_TRANSFERENCIASNEGColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_TRANSFERENCIASNEG2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_TRANSFERENCIASNEG2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_TRANSFERENCIASNEG2' de la tabla 'TraeCuadratura' es D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_TRANSFERENCIASNEG2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_PORCOLOCAR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_PORCOLOCARColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_PORCOLOCAR' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_PORCOLOCARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_PORCOLOCAR2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_PORCOLOCAR2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_PORCOLOCAR2' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_PORCOLOCAR2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_COLOCACIONES() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_COLOCACIONESColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_COLOCACIONES' de la tabla 'TraeCuadratura' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_COLOCACIONESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_COLOCACIONES2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_COLOCACIONES2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_COLOCACIONES2' de la tabla 'TraeCuadratura' es DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_COLOCACIONES2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_SALDO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_SALDOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_SALDO' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_SALDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_SALDO2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_SALDO2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_SALDO2' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_SALDO2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_EGRESOSCHE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_EGRESOSCHEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_EGRESOSCHE' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_EGRESOSCHEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CUA_PROXIMOSALDO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CUA_PROXIMOSALDOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CUA_PROXIMOSALDO' de la tabla 'TraeCuadratura' es DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CUA_PROXIMOSALDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_CUENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CTE_CUENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_CUENTA' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CTE_CUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CTE_SECUENCIA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.CTE_SECUENCIAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'CTE_SECUENCIA' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.CTE_SECUENCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENT_ABREVIATURA() As String
            Get
                Try 
                    Return CType(Me(Me.tableTraeCuadratura.ENT_ABREVIATURAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'ENT_ABREVIATURA' de la tabla 'TraeCuadratura' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTraeCuadratura.ENT_ABREVIATURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Codigo() As Integer
            Get
                Return CType(Me(Me.tableTraeCuadratura.CodigoColumn),Integer)
            End Get
            Set
                Me(Me.tableTraeCuadratura.CodigoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPLA_CODIGONull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.PLA_CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPLA_CODIGONull()
            Me(Me.tableTraeCuadratura.PLA_CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CODIGONull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CTE_CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CODIGONull()
            Me(Me.tableTraeCuadratura.CTE_CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_SALDOININull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_SALDOINIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_SALDOININull()
            Me(Me.tableTraeCuadratura.CUA_SALDOINIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_RESCATESNull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_RESCATESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_RESCATESNull()
            Me(Me.tableTraeCuadratura.CUA_RESCATESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_RESCATES2Null() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_RESCATES2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_RESCATES2Null()
            Me(Me.tableTraeCuadratura.CUA_RESCATES2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_RECAUDACIONNull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_RECAUDACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_RECAUDACIONNull()
            Me(Me.tableTraeCuadratura.CUA_RECAUDACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_RECAUDACION2Null() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_RECAUDACION2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_RECAUDACION2Null()
            Me(Me.tableTraeCuadratura.CUA_RECAUDACION2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_CHEQUESDEVNull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_CHEQUESDEVColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_CHEQUESDEVNull()
            Me(Me.tableTraeCuadratura.CUA_CHEQUESDEVColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_CHEQUESDEV2Null() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_CHEQUESDEV2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_CHEQUESDEV2Null()
            Me(Me.tableTraeCuadratura.CUA_CHEQUESDEV2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_APORTESNull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_APORTESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_APORTESNull()
            Me(Me.tableTraeCuadratura.CUA_APORTESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_APORTES2Null() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_APORTES2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_APORTES2Null()
            Me(Me.tableTraeCuadratura.CUA_APORTES2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_OTROSINGRESOSNull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_OTROSINGRESOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_OTROSINGRESOSNull()
            Me(Me.tableTraeCuadratura.CUA_OTROSINGRESOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_OTROSINGRESOS2Null() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_OTROSINGRESOS2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_OTROSINGRESOS2Null()
            Me(Me.tableTraeCuadratura.CUA_OTROSINGRESOS2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_PAGOSCHENull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_PAGOSCHEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_PAGOSCHENull()
            Me(Me.tableTraeCuadratura.CUA_PAGOSCHEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_PAGOSCHE2Null() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_PAGOSCHE2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_PAGOSCHE2Null()
            Me(Me.tableTraeCuadratura.CUA_PAGOSCHE2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_PAGOSCARNull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_PAGOSCARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_PAGOSCARNull()
            Me(Me.tableTraeCuadratura.CUA_PAGOSCARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_PAGOSCAR2Null() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_PAGOSCAR2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_PAGOSCAR2Null()
            Me(Me.tableTraeCuadratura.CUA_PAGOSCAR2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_CHEQUESCARNull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_CHEQUESCARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_CHEQUESCARNull()
            Me(Me.tableTraeCuadratura.CUA_CHEQUESCARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_CHEQUESCAR2Null() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_CHEQUESCAR2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_CHEQUESCAR2Null()
            Me(Me.tableTraeCuadratura.CUA_CHEQUESCAR2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_TRANSFERENCIASPOSNull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_TRANSFERENCIASPOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_TRANSFERENCIASPOSNull()
            Me(Me.tableTraeCuadratura.CUA_TRANSFERENCIASPOSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_TRANSFERENCIASPOS2Null() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_TRANSFERENCIASPOS2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_TRANSFERENCIASPOS2Null()
            Me(Me.tableTraeCuadratura.CUA_TRANSFERENCIASPOS2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_TRANSFERENCIASNEGNull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_TRANSFERENCIASNEGColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_TRANSFERENCIASNEGNull()
            Me(Me.tableTraeCuadratura.CUA_TRANSFERENCIASNEGColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_TRANSFERENCIASNEG2Null() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_TRANSFERENCIASNEG2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_TRANSFERENCIASNEG2Null()
            Me(Me.tableTraeCuadratura.CUA_TRANSFERENCIASNEG2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_PORCOLOCARNull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_PORCOLOCARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_PORCOLOCARNull()
            Me(Me.tableTraeCuadratura.CUA_PORCOLOCARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_PORCOLOCAR2Null() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_PORCOLOCAR2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_PORCOLOCAR2Null()
            Me(Me.tableTraeCuadratura.CUA_PORCOLOCAR2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_COLOCACIONESNull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_COLOCACIONESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_COLOCACIONESNull()
            Me(Me.tableTraeCuadratura.CUA_COLOCACIONESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_COLOCACIONES2Null() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_COLOCACIONES2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_COLOCACIONES2Null()
            Me(Me.tableTraeCuadratura.CUA_COLOCACIONES2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_SALDONull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_SALDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_SALDONull()
            Me(Me.tableTraeCuadratura.CUA_SALDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_SALDO2Null() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_SALDO2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_SALDO2Null()
            Me(Me.tableTraeCuadratura.CUA_SALDO2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_EGRESOSCHENull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_EGRESOSCHEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_EGRESOSCHENull()
            Me(Me.tableTraeCuadratura.CUA_EGRESOSCHEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCUA_PROXIMOSALDONull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CUA_PROXIMOSALDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCUA_PROXIMOSALDONull()
            Me(Me.tableTraeCuadratura.CUA_PROXIMOSALDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_CUENTANull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CTE_CUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_CUENTANull()
            Me(Me.tableTraeCuadratura.CTE_CUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCTE_SECUENCIANull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.CTE_SECUENCIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCTE_SECUENCIANull()
            Me(Me.tableTraeCuadratura.CTE_SECUENCIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENT_ABREVIATURANull() As Boolean
            Return Me.IsNull(Me.tableTraeCuadratura.ENT_ABREVIATURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENT_ABREVIATURANull()
            Me(Me.tableTraeCuadratura.ENT_ABREVIATURAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class OP_TraeOtrosCargosRow
        Inherits Global.System.Data.DataRow
        
        Private tableOP_TraeOtrosCargos As OP_TraeOtrosCargosDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOP_TraeOtrosCargos = CType(Me.Table,OP_TraeOtrosCargosDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DAZ_CUENTABANCO() As String
            Get
                Try 
                    Return CType(Me(Me.tableOP_TraeOtrosCargos.DAZ_CUENTABANCOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'DAZ_CUENTABANCO' de la tabla 'OP_TraeOtrosCargos' es DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_TraeOtrosCargos.DAZ_CUENTABANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property totales() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableOP_TraeOtrosCargos.totalesColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'totales' de la tabla 'OP_TraeOtrosCargos' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOP_TraeOtrosCargos.totalesColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDAZ_CUENTABANCONull() As Boolean
            Return Me.IsNull(Me.tableOP_TraeOtrosCargos.DAZ_CUENTABANCOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDAZ_CUENTABANCONull()
            Me(Me.tableOP_TraeOtrosCargos.DAZ_CUENTABANCOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IstotalesNull() As Boolean
            Return Me.IsNull(Me.tableOP_TraeOtrosCargos.totalesColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SettotalesNull()
            Me(Me.tableOP_TraeOtrosCargos.totalesColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class DiferenciasRow
        Inherits Global.System.Data.DataRow
        
        Private tableDiferencias As DiferenciasDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableDiferencias = CType(Me.Table,DiferenciasDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Secuencia() As Long
            Get
                Try 
                    Return CType(Me(Me.tableDiferencias.SecuenciaColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Secuencia' de la tabla 'Diferencias' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDiferencias.SecuenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Banco() As String
            Get
                Try 
                    Return CType(Me(Me.tableDiferencias.BancoColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Banco' de la tabla 'Diferencias' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDiferencias.BancoColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Cuenta() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableDiferencias.CuentaColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Cuenta' de la tabla 'Diferencias' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDiferencias.CuentaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Dato1() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDiferencias.Dato1Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Dato1' de la tabla 'Diferencias' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDiferencias.Dato1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Dato2() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDiferencias.Dato2Column),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Dato2' de la tabla 'Diferencias' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDiferencias.Dato2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Diferencia() As Double
            Get
                Try 
                    Return CType(Me(Me.tableDiferencias.DiferenciaColumn),Double)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("El valor de la columna 'Diferencia' de la tabla 'Diferencias' es DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableDiferencias.DiferenciaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSecuenciaNull() As Boolean
            Return Me.IsNull(Me.tableDiferencias.SecuenciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSecuenciaNull()
            Me(Me.tableDiferencias.SecuenciaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBancoNull() As Boolean
            Return Me.IsNull(Me.tableDiferencias.BancoColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBancoNull()
            Me(Me.tableDiferencias.BancoColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCuentaNull() As Boolean
            Return Me.IsNull(Me.tableDiferencias.CuentaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCuentaNull()
            Me(Me.tableDiferencias.CuentaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDato1Null() As Boolean
            Return Me.IsNull(Me.tableDiferencias.Dato1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDato1Null()
            Me(Me.tableDiferencias.Dato1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDato2Null() As Boolean
            Return Me.IsNull(Me.tableDiferencias.Dato2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDato2Null()
            Me(Me.tableDiferencias.Dato2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDiferenciaNull() As Boolean
            Return Me.IsNull(Me.tableDiferencias.DiferenciaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDiferenciaNull()
            Me(Me.tableDiferencias.DiferenciaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class OP_Trae2RescatesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OP_Trae2RescatesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As OP_Trae2RescatesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As OP_Trae2RescatesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class OP_Trae2ChequesDevueltosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OP_Trae2ChequesDevueltosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As OP_Trae2ChequesDevueltosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As OP_Trae2ChequesDevueltosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class OP_Trae2OtrosIngresosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OP_Trae2OtrosIngresosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As OP_Trae2OtrosIngresosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As OP_Trae2OtrosIngresosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class OP_TraeColocacionesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OP_TraeColocacionesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As OP_TraeColocacionesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As OP_TraeColocacionesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class OP_TraePagosConChequeRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OP_TraePagosConChequeRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As OP_TraePagosConChequeRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As OP_TraePagosConChequeRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class OP_TraeRecaudacionRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OP_TraeRecaudacionRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As OP_TraeRecaudacionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As OP_TraeRecaudacionRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class OP_TraeTotalesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OP_TraeTotalesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As OP_TraeTotalesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As OP_TraeTotalesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class OP_TraeTransferenciasNegRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OP_TraeTransferenciasNegRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As OP_TraeTransferenciasNegRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As OP_TraeTransferenciasNegRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class OP_TraeTransferenciasPosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OP_TraeTransferenciasPosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As OP_TraeTransferenciasPosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As OP_TraeTransferenciasPosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TESDPLRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TESDPLRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TESDPLRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TESDPLRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TESCUARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TESCUARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TESCUARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TESCUARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class Actualiza_PlanillaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As Actualiza_PlanillaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As Actualiza_PlanillaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As Actualiza_PlanillaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TESDOPRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TESDOPRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TESDOPRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TESDOPRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TESPARRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TESPARRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TESPARRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TESPARRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TESDAZRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TESDAZRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TESDAZRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TESDAZRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class AjustesManualesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As AjustesManualesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As AjustesManualesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As AjustesManualesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TESCTERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TESCTERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TESCTERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TESCTERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TraeCuadraturaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TraeCuadraturaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TraeCuadraturaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TraeCuadraturaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class OP_TraeOtrosCargosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OP_TraeOtrosCargosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As OP_TraeOtrosCargosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As OP_TraeOtrosCargosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class DiferenciasRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As DiferenciasRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As DiferenciasRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As DiferenciasRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsWALCUATableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OP_Trae2RescatesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OP_Trae2Rescates"
            tableMapping.ColumnMappings.Add("daz_cuentabanco", "daz_cuentabanco")
            tableMapping.ColumnMappings.Add("totales", "totales")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.OP_Trae2Rescates"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsWALCUA.OP_Trae2RescatesDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsWALCUA.OP_Trae2RescatesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsWALCUA.OP_Trae2RescatesDataTable = New dsWALCUA.OP_Trae2RescatesDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OP_Trae2ChequesDevueltosTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OP_Trae2ChequesDevueltos"
            tableMapping.ColumnMappings.Add("daz_cuentabanco", "daz_cuentabanco")
            tableMapping.ColumnMappings.Add("totales", "totales")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.OP_Trae2ChequesDevueltos"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsWALCUA.OP_Trae2ChequesDevueltosDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsWALCUA.OP_Trae2ChequesDevueltosDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsWALCUA.OP_Trae2ChequesDevueltosDataTable = New dsWALCUA.OP_Trae2ChequesDevueltosDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OP_Trae2OtrosIngresosTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OP_Trae2OtrosIngresos"
            tableMapping.ColumnMappings.Add("daz_cuentabanco", "daz_cuentabanco")
            tableMapping.ColumnMappings.Add("totales", "totales")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.OP_Trae2OtrosIngresos"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsWALCUA.OP_Trae2OtrosIngresosDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsWALCUA.OP_Trae2OtrosIngresosDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsWALCUA.OP_Trae2OtrosIngresosDataTable = New dsWALCUA.OP_Trae2OtrosIngresosDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OP_TraeColocacionesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OP_TraeColocaciones"
            tableMapping.ColumnMappings.Add("daz_cuentabanco", "daz_cuentabanco")
            tableMapping.ColumnMappings.Add("totales", "totales")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.OP_TraeColocaciones"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fecha", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsWALCUA.OP_TraeColocacionesDataTable, ByVal Fecha As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Fecha Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Fecha As String) As dsWALCUA.OP_TraeColocacionesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Fecha Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha,String)
            End If
            Dim dataTable As dsWALCUA.OP_TraeColocacionesDataTable = New dsWALCUA.OP_TraeColocacionesDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OP_TraePagosConChequeTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OP_TraePagosConCheque"
            tableMapping.ColumnMappings.Add("daz_cuentabanco", "daz_cuentabanco")
            tableMapping.ColumnMappings.Add("totales", "totales")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.OP_TraePagosConCheque"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fecha", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsWALCUA.OP_TraePagosConChequeDataTable, ByVal Fecha As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Fecha Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Fecha As String) As dsWALCUA.OP_TraePagosConChequeDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Fecha Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha,String)
            End If
            Dim dataTable As dsWALCUA.OP_TraePagosConChequeDataTable = New dsWALCUA.OP_TraePagosConChequeDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OP_TraeRecaudacionTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OP_TraeRecaudacion"
            tableMapping.ColumnMappings.Add("daz_cuentabanco", "daz_cuentabanco")
            tableMapping.ColumnMappings.Add("totales", "totales")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.OP_TraeRecaudacion"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fecha", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsWALCUA.OP_TraeRecaudacionDataTable, ByVal Fecha As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Fecha Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Fecha As String) As dsWALCUA.OP_TraeRecaudacionDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Fecha Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha,String)
            End If
            Dim dataTable As dsWALCUA.OP_TraeRecaudacionDataTable = New dsWALCUA.OP_TraeRecaudacionDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OP_TraeTotalesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OP_TraeTotales"
            tableMapping.ColumnMappings.Add("daz_cuentabanco", "daz_cuentabanco")
            tableMapping.ColumnMappings.Add("totales", "totales")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.OP_TraeTotales"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Concepto", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Clase", Global.System.Data.SqlDbType.[Char], 2, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Tipo", Global.System.Data.SqlDbType.[Char], 1, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Caja", Global.System.Data.SqlDbType.[Char], 16, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Glosa", Global.System.Data.SqlDbType.[Char], 4, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Glosa1", Global.System.Data.SqlDbType.[Char], 4, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsWALCUA.OP_TraeTotalesDataTable, ByVal Concepto As String, ByVal Clase As String, ByVal Tipo As String, ByVal Caja As String, ByVal Glosa As String, ByVal Glosa1 As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Concepto Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Concepto,String)
            End If
            If (Clase Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Clase,String)
            End If
            If (Tipo Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Tipo,String)
            End If
            If (Caja Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Caja,String)
            End If
            If (Glosa Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Glosa,String)
            End If
            If (Glosa1 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(Glosa1,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Concepto As String, ByVal Clase As String, ByVal Tipo As String, ByVal Caja As String, ByVal Glosa As String, ByVal Glosa1 As String) As dsWALCUA.OP_TraeTotalesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Concepto Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Concepto,String)
            End If
            If (Clase Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Clase,String)
            End If
            If (Tipo Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Tipo,String)
            End If
            If (Caja Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Caja,String)
            End If
            If (Glosa Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(Glosa,String)
            End If
            If (Glosa1 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(Glosa1,String)
            End If
            Dim dataTable As dsWALCUA.OP_TraeTotalesDataTable = New dsWALCUA.OP_TraeTotalesDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OP_TraeTransferenciasNegTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OP_TraeTransferenciasNeg"
            tableMapping.ColumnMappings.Add("daz_cuentabanco", "daz_cuentabanco")
            tableMapping.ColumnMappings.Add("totales", "totales")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.OP_TraeTransferenciasNeg"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fecha", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsWALCUA.OP_TraeTransferenciasNegDataTable, ByVal Fecha As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Fecha Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Fecha As String) As dsWALCUA.OP_TraeTransferenciasNegDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Fecha Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha,String)
            End If
            Dim dataTable As dsWALCUA.OP_TraeTransferenciasNegDataTable = New dsWALCUA.OP_TraeTransferenciasNegDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OP_TraeTransferenciasPosTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OP_TraeTransferenciasPos"
            tableMapping.ColumnMappings.Add("daz_cuentabanco", "daz_cuentabanco")
            tableMapping.ColumnMappings.Add("totales", "totales")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.OP_TraeTransferenciasPos"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fecha", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsWALCUA.OP_TraeTransferenciasPosDataTable, ByVal Fecha As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Fecha Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Fecha As String) As dsWALCUA.OP_TraeTransferenciasPosDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Fecha Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha,String)
            End If
            Dim dataTable As dsWALCUA.OP_TraeTransferenciasPosDataTable = New dsWALCUA.OP_TraeTransferenciasPosDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TESDPLTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TESDPL"
            tableMapping.ColumnMappings.Add("DPL_CODIGO", "DPL_CODIGO")
            tableMapping.ColumnMappings.Add("PLA_CODIGO", "PLA_CODIGO")
            tableMapping.ColumnMappings.Add("Expr1", "Expr1")
            tableMapping.ColumnMappings.Add("DPL_SALDOINI", "DPL_SALDOINI")
            tableMapping.ColumnMappings.Add("DPL_RESCATES", "DPL_RESCATES")
            tableMapping.ColumnMappings.Add("DPL_RECAUDACION", "DPL_RECAUDACION")
            tableMapping.ColumnMappings.Add("DPL_CHEQUESDEV", "DPL_CHEQUESDEV")
            tableMapping.ColumnMappings.Add("DPL_APORTES", "DPL_APORTES")
            tableMapping.ColumnMappings.Add("DPL_OTROSINGRESOS", "DPL_OTROSINGRESOS")
            tableMapping.ColumnMappings.Add("DPL_PAGOSCHE", "DPL_PAGOSCHE")
            tableMapping.ColumnMappings.Add("DPL_PAGOSCAR", "DPL_PAGOSCAR")
            tableMapping.ColumnMappings.Add("DPL_CHEQUESCAR", "DPL_CHEQUESCAR")
            tableMapping.ColumnMappings.Add("DPL_TRANSFERENCIASPOS", "DPL_TRANSFERENCIASPOS")
            tableMapping.ColumnMappings.Add("DPL_TRANSFERENCIASNEG", "DPL_TRANSFERENCIASNEG")
            tableMapping.ColumnMappings.Add("DPL_PORCOLOCAR", "DPL_PORCOLOCAR")
            tableMapping.ColumnMappings.Add("DPL_COLOCACIONES", "DPL_COLOCACIONES")
            tableMapping.ColumnMappings.Add("DPL_SALDO", "DPL_SALDO")
            tableMapping.ColumnMappings.Add("DPL_AUDITORIA", "DPL_AUDITORIA")
            tableMapping.ColumnMappings.Add("CTE_CODIGO", "CTE_CODIGO")
            tableMapping.ColumnMappings.Add("Expr2", "Expr2")
            tableMapping.ColumnMappings.Add("CON_CODIGO", "CON_CODIGO")
            tableMapping.ColumnMappings.Add("MON_CODIGO", "MON_CODIGO")
            tableMapping.ColumnMappings.Add("EMP_CODIGO", "EMP_CODIGO")
            tableMapping.ColumnMappings.Add("CTE_NUMERO", "CTE_NUMERO")
            tableMapping.ColumnMappings.Add("CTE_CUENTA", "CTE_CUENTA")
            tableMapping.ColumnMappings.Add("CTE_SIGLA", "CTE_SIGLA")
            tableMapping.ColumnMappings.Add("CTE_GRUPO", "CTE_GRUPO")
            tableMapping.ColumnMappings.Add("CTE_TIPO", "CTE_TIPO")
            tableMapping.ColumnMappings.Add("CTE_SECUENCIA", "CTE_SECUENCIA")
            tableMapping.ColumnMappings.Add("CTE_COLCHON1", "CTE_COLCHON1")
            tableMapping.ColumnMappings.Add("CTE_COLCHON2", "CTE_COLCHON2")
            tableMapping.ColumnMappings.Add("CTE_PLAZA", "CTE_PLAZA")
            tableMapping.ColumnMappings.Add("CTE_MADRE", "CTE_MADRE")
            tableMapping.ColumnMappings.Add("CTE_AUDITORIA", "CTE_AUDITORIA")
            tableMapping.ColumnMappings.Add("CTE_SOCIEDAD", "CTE_SOCIEDAD")
            tableMapping.ColumnMappings.Add("CTE_CODBANCO", "CTE_CODBANCO")
            tableMapping.ColumnMappings.Add("CTE_CUENTAID", "CTE_CUENTAID")
            tableMapping.ColumnMappings.Add("CTE_GLOSA", "CTE_GLOSA")
            tableMapping.ColumnMappings.Add("CTE_CONTABLE", "CTE_CONTABLE")
            tableMapping.ColumnMappings.Add("CTE_MONEDASAP", "CTE_MONEDASAP")
            tableMapping.ColumnMappings.Add("CTE_VIA", "CTE_VIA")
            tableMapping.ColumnMappings.Add("CTE_CODCTE", "CTE_CODCTE")
            tableMapping.ColumnMappings.Add("ENT_CODIGO", "ENT_CODIGO")
            tableMapping.ColumnMappings.Add("TEN_CODIGO", "TEN_CODIGO")
            tableMapping.ColumnMappings.Add("ENT_RAZON", "ENT_RAZON")
            tableMapping.ColumnMappings.Add("ENT_ABREVIATURA", "ENT_ABREVIATURA")
            tableMapping.ColumnMappings.Add("ENT_RUT", "ENT_RUT")
            tableMapping.ColumnMappings.Add("ENT_LIMITE", "ENT_LIMITE")
            tableMapping.ColumnMappings.Add("ENT_ESTADO", "ENT_ESTADO")
            tableMapping.ColumnMappings.Add("ENT_SITIO", "ENT_SITIO")
            tableMapping.ColumnMappings.Add("ENT_AUDITORIA", "ENT_AUDITORIA")
            tableMapping.ColumnMappings.Add("ENT_SAP", "ENT_SAP")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TESDPL.DPL_CODIGO, TESDPL.PLA_CODIGO, TESDPL.CTE_CODIGO AS Expr1, T"& _ 
                "ESDPL.DPL_SALDOINI, TESDPL.DPL_RESCATES, TESDPL.DPL_RECAUDACION, TESDPL.DPL_CHEQ"& _ 
                "UESDEV, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESDPL.DPL_APORTES, TESDPL.DPL_OTROSINGRESOS,"& _ 
                " TESDPL.DPL_PAGOSCHE, TESDPL.DPL_PAGOSCAR, TESDPL.DPL_CHEQUESCAR, TESDPL.DPL_TRA"& _ 
                "NSFERENCIASPOS, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESDPL.DPL_TRANSFERENCIASNEG, TESDPL."& _ 
                "DPL_PORCOLOCAR, TESDPL.DPL_COLOCACIONES, TESDPL.DPL_SALDO, TESDPL.DPL_AUDITORIA,"& _ 
                " TESCTE.CTE_CODIGO, TESCTE.ENT_CODIGO AS Expr2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESCT"& _ 
                "E.CON_CODIGO, TESCTE.MON_CODIGO, TESCTE.EMP_CODIGO, TESCTE.CTE_NUMERO, TESCTE.CT"& _ 
                "E_CUENTA, TESCTE.CTE_SIGLA, TESCTE.CTE_GRUPO, TESCTE.CTE_TIPO, TESCTE.CTE_SECUEN"& _ 
                "CIA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESCTE.CTE_COLCHON1, TESCTE.CTE_COLCHON2, TESCTE"& _ 
                ".CTE_PLAZA, TESCTE.CTE_MADRE, TESCTE.CTE_AUDITORIA, TESCTE.CTE_SOCIEDAD, TESCTE."& _ 
                "CTE_CODBANCO, TESCTE.CTE_CUENTAID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESCTE.CTE_GLOSA, "& _ 
                "TESCTE.CTE_CONTABLE, TESCTE.CTE_MONEDASAP, TESCTE.CTE_VIA, TESCTE.CTE_CODCTE, TE"& _ 
                "SENT.ENT_CODIGO, TESENT.TEN_CODIGO, TESENT.ENT_RAZON, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " TESENT.ENT_ABREVIATURA, TESENT.ENT_RUT, TESENT.ENT_LIMITE, TESENT.ENT_ESTADO, T"& _ 
                "ESENT.ENT_SITIO, TESENT.ENT_AUDITORIA, TESENT.ENT_SAP"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            TESDPL IN"& _ 
                "NER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESCTE ON TESDPL.CTE_CODIGO = TESCTE.CTE_CODI"& _ 
                "GO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESENT ON TESCTE.ENT_CODIGO = TESENT.ENT"& _ 
                "_CODIGO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY TESCTE.CTE_SECUENCIA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        TESDPL.DPL_CODIGO, TESDPL.PLA_CODIGO, TESDPL.CTE_CODIGO AS Expr1, T"& _ 
                "ESDPL.DPL_SALDOINI, TESDPL.DPL_RESCATES, TESDPL.DPL_RECAUDACION, TESDPL.DPL_CHEQ"& _ 
                "UESDEV, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESDPL.DPL_APORTES, TESDPL.DPL_OTROSINGRESOS,"& _ 
                " TESDPL.DPL_PAGOSCHE, TESDPL.DPL_PAGOSCAR, TESDPL.DPL_CHEQUESCAR, TESDPL.DPL_TRA"& _ 
                "NSFERENCIASPOS, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESDPL.DPL_TRANSFERENCIASNEG, TESDPL."& _ 
                "DPL_PORCOLOCAR, TESDPL.DPL_COLOCACIONES, TESDPL.DPL_SALDO, TESDPL.DPL_AUDITORIA,"& _ 
                " TESCTE.CTE_CODIGO, TESCTE.ENT_CODIGO AS Expr2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESCT"& _ 
                "E.CON_CODIGO, TESCTE.MON_CODIGO, TESCTE.EMP_CODIGO, TESCTE.CTE_NUMERO, TESCTE.CT"& _ 
                "E_CUENTA, TESCTE.CTE_SIGLA, TESCTE.CTE_GRUPO, TESCTE.CTE_TIPO, TESCTE.CTE_SECUEN"& _ 
                "CIA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESCTE.CTE_COLCHON1, TESCTE.CTE_COLCHON2, TESCTE"& _ 
                ".CTE_PLAZA, TESCTE.CTE_MADRE, TESCTE.CTE_AUDITORIA, TESCTE.CTE_SOCIEDAD, TESCTE."& _ 
                "CTE_CODBANCO, TESCTE.CTE_CUENTAID, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESCTE.CTE_GLOSA, "& _ 
                "TESCTE.CTE_CONTABLE, TESCTE.CTE_MONEDASAP, TESCTE.CTE_VIA, TESCTE.CTE_CODCTE, TE"& _ 
                "SENT.ENT_CODIGO, TESENT.TEN_CODIGO, TESENT.ENT_RAZON, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " TESENT.ENT_ABREVIATURA, TESENT.ENT_RUT, TESENT.ENT_LIMITE, TESENT.ENT_ESTADO, T"& _ 
                "ESENT.ENT_SITIO, TESENT.ENT_AUDITORIA, TESENT.ENT_SAP"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            TESDPL IN"& _ 
                "NER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESCTE ON TESDPL.CTE_CODIGO = TESCTE.CTE_CODI"& _ 
                "GO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESENT ON TESCTE.ENT_CODIGO = TESENT.ENT"& _ 
                "_CODIGO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (TESDPL.PLA_CODIGO = @Planilla)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY TESCTE.CTE_SECUE"& _ 
                "NCIA"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Planilla", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsWALCUA.TESDPLDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsWALCUA.TESDPLDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsWALCUA.TESDPLDataTable = New dsWALCUA.TESDPLDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByPlanilla(ByVal dataTable As dsWALCUA.TESDPLDataTable, ByVal Planilla As Long) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Planilla,Long)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByPlanilla(ByVal Planilla As Long) As dsWALCUA.TESDPLDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Planilla,Long)
            Dim dataTable As dsWALCUA.TESDPLDataTable = New dsWALCUA.TESDPLDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TESCUATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TESCUA"
            tableMapping.ColumnMappings.Add("CUA_CODIGO", "CUA_CODIGO")
            tableMapping.ColumnMappings.Add("PLA_CODIGO", "PLA_CODIGO")
            tableMapping.ColumnMappings.Add("CTE_CODIGO", "CTE_CODIGO")
            tableMapping.ColumnMappings.Add("CUA_SALDOINI", "CUA_SALDOINI")
            tableMapping.ColumnMappings.Add("CUA_RESCATES", "CUA_RESCATES")
            tableMapping.ColumnMappings.Add("CUA_RESCATES2", "CUA_RESCATES2")
            tableMapping.ColumnMappings.Add("CUA_RECAUDACION", "CUA_RECAUDACION")
            tableMapping.ColumnMappings.Add("CUA_RECAUDACION2", "CUA_RECAUDACION2")
            tableMapping.ColumnMappings.Add("CUA_CHEQUESDEV", "CUA_CHEQUESDEV")
            tableMapping.ColumnMappings.Add("CUA_CHEQUESDEV2", "CUA_CHEQUESDEV2")
            tableMapping.ColumnMappings.Add("CUA_APORTES", "CUA_APORTES")
            tableMapping.ColumnMappings.Add("CUA_APORTES2", "CUA_APORTES2")
            tableMapping.ColumnMappings.Add("CUA_OTROSINGRESOS", "CUA_OTROSINGRESOS")
            tableMapping.ColumnMappings.Add("CUA_OTROSINGRESOS2", "CUA_OTROSINGRESOS2")
            tableMapping.ColumnMappings.Add("CUA_PAGOSCHE", "CUA_PAGOSCHE")
            tableMapping.ColumnMappings.Add("CUA_PAGOSCHE2", "CUA_PAGOSCHE2")
            tableMapping.ColumnMappings.Add("CUA_PAGOSCAR", "CUA_PAGOSCAR")
            tableMapping.ColumnMappings.Add("CUA_PAGOSCAR2", "CUA_PAGOSCAR2")
            tableMapping.ColumnMappings.Add("CUA_CHEQUESCAR", "CUA_CHEQUESCAR")
            tableMapping.ColumnMappings.Add("CUA_CHEQUESCAR2", "CUA_CHEQUESCAR2")
            tableMapping.ColumnMappings.Add("CUA_TRANSFERENCIASPOS", "CUA_TRANSFERENCIASPOS")
            tableMapping.ColumnMappings.Add("CUA_TRANSFERENCIASPOS2", "CUA_TRANSFERENCIASPOS2")
            tableMapping.ColumnMappings.Add("CUA_TRANSFERENCIASNEG", "CUA_TRANSFERENCIASNEG")
            tableMapping.ColumnMappings.Add("CUA_TRANSFERENCIASNEG2", "CUA_TRANSFERENCIASNEG2")
            tableMapping.ColumnMappings.Add("CUA_PORCOLOCAR", "CUA_PORCOLOCAR")
            tableMapping.ColumnMappings.Add("CUA_PORCOLOCAR2", "CUA_PORCOLOCAR2")
            tableMapping.ColumnMappings.Add("CUA_COLOCACIONES", "CUA_COLOCACIONES")
            tableMapping.ColumnMappings.Add("CUA_COLOCACIONES2", "CUA_COLOCACIONES2")
            tableMapping.ColumnMappings.Add("CUA_SALDO", "CUA_SALDO")
            tableMapping.ColumnMappings.Add("CUA_SALDO2", "CUA_SALDO2")
            tableMapping.ColumnMappings.Add("CUA_EGRESOSCHE", "CUA_EGRESOSCHE")
            tableMapping.ColumnMappings.Add("CUA_PROXIMOSALDO", "CUA_PROXIMOSALDO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TESCUA] WHERE (([CUA_CODIGO] = @Original_CUA_CODIGO) AND ((@Is"& _ 
                "Null_PLA_CODIGO = 1 AND [PLA_CODIGO] IS NULL) OR ([PLA_CODIGO] = @Original_PLA_C"& _ 
                "ODIGO)) AND ((@IsNull_CTE_CODIGO = 1 AND [CTE_CODIGO] IS NULL) OR ([CTE_CODIGO] "& _ 
                "= @Original_CTE_CODIGO)) AND ((@IsNull_CUA_SALDOINI = 1 AND [CUA_SALDOINI] IS NU"& _ 
                "LL) OR ([CUA_SALDOINI] = @Original_CUA_SALDOINI)) AND ((@IsNull_CUA_RESCATES = 1"& _ 
                " AND [CUA_RESCATES] IS NULL) OR ([CUA_RESCATES] = @Original_CUA_RESCATES)) AND ("& _ 
                "(@IsNull_CUA_RESCATES2 = 1 AND [CUA_RESCATES2] IS NULL) OR ([CUA_RESCATES2] = @O"& _ 
                "riginal_CUA_RESCATES2)) AND ((@IsNull_CUA_RECAUDACION = 1 AND [CUA_RECAUDACION] "& _ 
                "IS NULL) OR ([CUA_RECAUDACION] = @Original_CUA_RECAUDACION)) AND ((@IsNull_CUA_R"& _ 
                "ECAUDACION2 = 1 AND [CUA_RECAUDACION2] IS NULL) OR ([CUA_RECAUDACION2] = @Origin"& _ 
                "al_CUA_RECAUDACION2)) AND ((@IsNull_CUA_CHEQUESDEV = 1 AND [CUA_CHEQUESDEV] IS N"& _ 
                "ULL) OR ([CUA_CHEQUESDEV] = @Original_CUA_CHEQUESDEV)) AND ((@IsNull_CUA_CHEQUES"& _ 
                "DEV2 = 1 AND [CUA_CHEQUESDEV2] IS NULL) OR ([CUA_CHEQUESDEV2] = @Original_CUA_CH"& _ 
                "EQUESDEV2)) AND ((@IsNull_CUA_APORTES = 1 AND [CUA_APORTES] IS NULL) OR ([CUA_AP"& _ 
                "ORTES] = @Original_CUA_APORTES)) AND ((@IsNull_CUA_APORTES2 = 1 AND [CUA_APORTES"& _ 
                "2] IS NULL) OR ([CUA_APORTES2] = @Original_CUA_APORTES2)) AND ((@IsNull_CUA_OTRO"& _ 
                "SINGRESOS = 1 AND [CUA_OTROSINGRESOS] IS NULL) OR ([CUA_OTROSINGRESOS] = @Origin"& _ 
                "al_CUA_OTROSINGRESOS)) AND ((@IsNull_CUA_OTROSINGRESOS2 = 1 AND [CUA_OTROSINGRES"& _ 
                "OS2] IS NULL) OR ([CUA_OTROSINGRESOS2] = @Original_CUA_OTROSINGRESOS2)) AND ((@I"& _ 
                "sNull_CUA_PAGOSCHE = 1 AND [CUA_PAGOSCHE] IS NULL) OR ([CUA_PAGOSCHE] = @Origina"& _ 
                "l_CUA_PAGOSCHE)) AND ((@IsNull_CUA_PAGOSCHE2 = 1 AND [CUA_PAGOSCHE2] IS NULL) OR"& _ 
                " ([CUA_PAGOSCHE2] = @Original_CUA_PAGOSCHE2)) AND ((@IsNull_CUA_PAGOSCAR = 1 AND"& _ 
                " [CUA_PAGOSCAR] IS NULL) OR ([CUA_PAGOSCAR] = @Original_CUA_PAGOSCAR)) AND ((@Is"& _ 
                "Null_CUA_PAGOSCAR2 = 1 AND [CUA_PAGOSCAR2] IS NULL) OR ([CUA_PAGOSCAR2] = @Origi"& _ 
                "nal_CUA_PAGOSCAR2)) AND ((@IsNull_CUA_CHEQUESCAR = 1 AND [CUA_CHEQUESCAR] IS NUL"& _ 
                "L) OR ([CUA_CHEQUESCAR] = @Original_CUA_CHEQUESCAR)) AND ((@IsNull_CUA_CHEQUESCA"& _ 
                "R2 = 1 AND [CUA_CHEQUESCAR2] IS NULL) OR ([CUA_CHEQUESCAR2] = @Original_CUA_CHEQ"& _ 
                "UESCAR2)) AND ((@IsNull_CUA_TRANSFERENCIASPOS = 1 AND [CUA_TRANSFERENCIASPOS] IS"& _ 
                " NULL) OR ([CUA_TRANSFERENCIASPOS] = @Original_CUA_TRANSFERENCIASPOS)) AND ((@Is"& _ 
                "Null_CUA_TRANSFERENCIASPOS2 = 1 AND [CUA_TRANSFERENCIASPOS2] IS NULL) OR ([CUA_T"& _ 
                "RANSFERENCIASPOS2] = @Original_CUA_TRANSFERENCIASPOS2)) AND ((@IsNull_CUA_TRANSF"& _ 
                "ERENCIASNEG = 1 AND [CUA_TRANSFERENCIASNEG] IS NULL) OR ([CUA_TRANSFERENCIASNEG]"& _ 
                " = @Original_CUA_TRANSFERENCIASNEG)) AND ((@IsNull_CUA_TRANSFERENCIASNEG2 = 1 AN"& _ 
                "D [CUA_TRANSFERENCIASNEG2] IS NULL) OR ([CUA_TRANSFERENCIASNEG2] = @Original_CUA"& _ 
                "_TRANSFERENCIASNEG2)) AND ((@IsNull_CUA_PORCOLOCAR = 1 AND [CUA_PORCOLOCAR] IS N"& _ 
                "ULL) OR ([CUA_PORCOLOCAR] = @Original_CUA_PORCOLOCAR)) AND ((@IsNull_CUA_PORCOLO"& _ 
                "CAR2 = 1 AND [CUA_PORCOLOCAR2] IS NULL) OR ([CUA_PORCOLOCAR2] = @Original_CUA_PO"& _ 
                "RCOLOCAR2)) AND ((@IsNull_CUA_COLOCACIONES = 1 AND [CUA_COLOCACIONES] IS NULL) O"& _ 
                "R ([CUA_COLOCACIONES] = @Original_CUA_COLOCACIONES)) AND ((@IsNull_CUA_COLOCACIO"& _ 
                "NES2 = 1 AND [CUA_COLOCACIONES2] IS NULL) OR ([CUA_COLOCACIONES2] = @Original_CU"& _ 
                "A_COLOCACIONES2)) AND ((@IsNull_CUA_SALDO = 1 AND [CUA_SALDO] IS NULL) OR ([CUA_"& _ 
                "SALDO] = @Original_CUA_SALDO)) AND ((@IsNull_CUA_SALDO2 = 1 AND [CUA_SALDO2] IS "& _ 
                "NULL) OR ([CUA_SALDO2] = @Original_CUA_SALDO2)) AND ((@IsNull_CUA_EGRESOSCHE = 1"& _ 
                " AND [CUA_EGRESOSCHE] IS NULL) OR ([CUA_EGRESOSCHE] = @Original_CUA_EGRESOSCHE))"& _ 
                " AND ((@IsNull_CUA_PROXIMOSALDO = 1 AND [CUA_PROXIMOSALDO] IS NULL) OR ([CUA_PRO"& _ 
                "XIMOSALDO] = @Original_CUA_PROXIMOSALDO)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_CODIGO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CUA_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PLA_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PLA_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_CODIGO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_SALDOINI", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_SALDOINI", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_SALDOINI", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_SALDOINI", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_RESCATES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_RESCATES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_RESCATES", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_RESCATES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_RESCATES2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_RESCATES2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_RESCATES2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_RESCATES2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_RECAUDACION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_RECAUDACION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_RECAUDACION", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_RECAUDACION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_RECAUDACION2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_RECAUDACION2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_RECAUDACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_RECAUDACION2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_CHEQUESDEV", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_CHEQUESDEV", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_CHEQUESDEV", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_CHEQUESDEV", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_CHEQUESDEV2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_CHEQUESDEV2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_CHEQUESDEV2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_CHEQUESDEV2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_APORTES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_APORTES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_APORTES", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_APORTES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_APORTES2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_APORTES2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_APORTES2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_APORTES2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_OTROSINGRESOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_OTROSINGRESOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_OTROSINGRESOS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_OTROSINGRESOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_OTROSINGRESOS2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_OTROSINGRESOS2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_OTROSINGRESOS2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_OTROSINGRESOS2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_PAGOSCHE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_PAGOSCHE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_PAGOSCHE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PAGOSCHE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_PAGOSCHE2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_PAGOSCHE2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_PAGOSCHE2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PAGOSCHE2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_PAGOSCAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_PAGOSCAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_PAGOSCAR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PAGOSCAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_PAGOSCAR2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_PAGOSCAR2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_PAGOSCAR2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PAGOSCAR2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_CHEQUESCAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_CHEQUESCAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_CHEQUESCAR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_CHEQUESCAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_CHEQUESCAR2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_CHEQUESCAR2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_CHEQUESCAR2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_CHEQUESCAR2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_TRANSFERENCIASPOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_TRANSFERENCIASPOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_TRANSFERENCIASPOS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_TRANSFERENCIASPOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_TRANSFERENCIASPOS2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_TRANSFERENCIASPOS2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_TRANSFERENCIASPOS2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_TRANSFERENCIASPOS2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_TRANSFERENCIASNEG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_TRANSFERENCIASNEG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_TRANSFERENCIASNEG", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_TRANSFERENCIASNEG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_TRANSFERENCIASNEG2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_TRANSFERENCIASNEG2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_TRANSFERENCIASNEG2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_TRANSFERENCIASNEG2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_PORCOLOCAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_PORCOLOCAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_PORCOLOCAR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PORCOLOCAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_PORCOLOCAR2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_PORCOLOCAR2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_PORCOLOCAR2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PORCOLOCAR2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_COLOCACIONES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_COLOCACIONES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_COLOCACIONES", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_COLOCACIONES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_COLOCACIONES2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_COLOCACIONES2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_COLOCACIONES2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_COLOCACIONES2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_SALDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_SALDO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_SALDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_SALDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_SALDO2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_SALDO2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_SALDO2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_SALDO2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_EGRESOSCHE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_EGRESOSCHE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_EGRESOSCHE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_EGRESOSCHE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_PROXIMOSALDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_PROXIMOSALDO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_PROXIMOSALDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PROXIMOSALDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TESCUA] ([PLA_CODIGO], [CTE_CODIGO], [CUA_SALDOINI], [CUA_RESC"& _ 
                "ATES], [CUA_RESCATES2], [CUA_RECAUDACION], [CUA_RECAUDACION2], [CUA_CHEQUESDEV],"& _ 
                " [CUA_CHEQUESDEV2], [CUA_APORTES], [CUA_APORTES2], [CUA_OTROSINGRESOS], [CUA_OTR"& _ 
                "OSINGRESOS2], [CUA_PAGOSCHE], [CUA_PAGOSCHE2], [CUA_PAGOSCAR], [CUA_PAGOSCAR2], "& _ 
                "[CUA_CHEQUESCAR], [CUA_CHEQUESCAR2], [CUA_TRANSFERENCIASPOS], [CUA_TRANSFERENCIA"& _ 
                "SPOS2], [CUA_TRANSFERENCIASNEG], [CUA_TRANSFERENCIASNEG2], [CUA_PORCOLOCAR], [CU"& _ 
                "A_PORCOLOCAR2], [CUA_COLOCACIONES], [CUA_COLOCACIONES2], [CUA_SALDO], [CUA_SALDO"& _ 
                "2], [CUA_EGRESOSCHE], [CUA_PROXIMOSALDO]) VALUES (@PLA_CODIGO, @CTE_CODIGO, @CUA"& _ 
                "_SALDOINI, @CUA_RESCATES, @CUA_RESCATES2, @CUA_RECAUDACION, @CUA_RECAUDACION2, @"& _ 
                "CUA_CHEQUESDEV, @CUA_CHEQUESDEV2, @CUA_APORTES, @CUA_APORTES2, @CUA_OTROSINGRESO"& _ 
                "S, @CUA_OTROSINGRESOS2, @CUA_PAGOSCHE, @CUA_PAGOSCHE2, @CUA_PAGOSCAR, @CUA_PAGOS"& _ 
                "CAR2, @CUA_CHEQUESCAR, @CUA_CHEQUESCAR2, @CUA_TRANSFERENCIASPOS, @CUA_TRANSFEREN"& _ 
                "CIASPOS2, @CUA_TRANSFERENCIASNEG, @CUA_TRANSFERENCIASNEG2, @CUA_PORCOLOCAR, @CUA"& _ 
                "_PORCOLOCAR2, @CUA_COLOCACIONES, @CUA_COLOCACIONES2, @CUA_SALDO, @CUA_SALDO2, @C"& _ 
                "UA_EGRESOSCHE, @CUA_PROXIMOSALDO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CUA_CODIGO, PLA_CODIGO, CTE_CODIGO, C"& _ 
                "UA_SALDOINI, CUA_RESCATES, CUA_RESCATES2, CUA_RECAUDACION, CUA_RECAUDACION2, CUA"& _ 
                "_CHEQUESDEV, CUA_CHEQUESDEV2, CUA_APORTES, CUA_APORTES2, CUA_OTROSINGRESOS, CUA_"& _ 
                "OTROSINGRESOS2, CUA_PAGOSCHE, CUA_PAGOSCHE2, CUA_PAGOSCAR, CUA_PAGOSCAR2, CUA_CH"& _ 
                "EQUESCAR, CUA_CHEQUESCAR2, CUA_TRANSFERENCIASPOS, CUA_TRANSFERENCIASPOS2, CUA_TR"& _ 
                "ANSFERENCIASNEG, CUA_TRANSFERENCIASNEG2, CUA_PORCOLOCAR, CUA_PORCOLOCAR2, CUA_CO"& _ 
                "LOCACIONES, CUA_COLOCACIONES2, CUA_SALDO, CUA_SALDO2, CUA_EGRESOSCHE, CUA_PROXIM"& _ 
                "OSALDO FROM TESCUA WHERE (CUA_CODIGO = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLA_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_CODIGO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_SALDOINI", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_SALDOINI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_RESCATES", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_RESCATES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_RESCATES2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_RESCATES2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_RECAUDACION", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_RECAUDACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_RECAUDACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_RECAUDACION2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_CHEQUESDEV", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_CHEQUESDEV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_CHEQUESDEV2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_CHEQUESDEV2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_APORTES", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_APORTES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_APORTES2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_APORTES2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_OTROSINGRESOS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_OTROSINGRESOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_OTROSINGRESOS2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_OTROSINGRESOS2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_PAGOSCHE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PAGOSCHE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_PAGOSCHE2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PAGOSCHE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_PAGOSCAR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PAGOSCAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_PAGOSCAR2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PAGOSCAR2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_CHEQUESCAR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_CHEQUESCAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_CHEQUESCAR2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_CHEQUESCAR2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_TRANSFERENCIASPOS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_TRANSFERENCIASPOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_TRANSFERENCIASPOS2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_TRANSFERENCIASPOS2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_TRANSFERENCIASNEG", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_TRANSFERENCIASNEG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_TRANSFERENCIASNEG2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_TRANSFERENCIASNEG2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_PORCOLOCAR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PORCOLOCAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_PORCOLOCAR2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PORCOLOCAR2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_COLOCACIONES", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_COLOCACIONES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_COLOCACIONES2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_COLOCACIONES2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_SALDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_SALDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_SALDO2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_SALDO2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_EGRESOSCHE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_EGRESOSCHE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_PROXIMOSALDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PROXIMOSALDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TESCUA] SET [PLA_CODIGO] = @PLA_CODIGO, [CTE_CODIGO] = @CTE_CODIGO,"& _ 
                " [CUA_SALDOINI] = @CUA_SALDOINI, [CUA_RESCATES] = @CUA_RESCATES, [CUA_RESCATES2]"& _ 
                " = @CUA_RESCATES2, [CUA_RECAUDACION] = @CUA_RECAUDACION, [CUA_RECAUDACION2] = @C"& _ 
                "UA_RECAUDACION2, [CUA_CHEQUESDEV] = @CUA_CHEQUESDEV, [CUA_CHEQUESDEV2] = @CUA_CH"& _ 
                "EQUESDEV2, [CUA_APORTES] = @CUA_APORTES, [CUA_APORTES2] = @CUA_APORTES2, [CUA_OT"& _ 
                "ROSINGRESOS] = @CUA_OTROSINGRESOS, [CUA_OTROSINGRESOS2] = @CUA_OTROSINGRESOS2, ["& _ 
                "CUA_PAGOSCHE] = @CUA_PAGOSCHE, [CUA_PAGOSCHE2] = @CUA_PAGOSCHE2, [CUA_PAGOSCAR] "& _ 
                "= @CUA_PAGOSCAR, [CUA_PAGOSCAR2] = @CUA_PAGOSCAR2, [CUA_CHEQUESCAR] = @CUA_CHEQU"& _ 
                "ESCAR, [CUA_CHEQUESCAR2] = @CUA_CHEQUESCAR2, [CUA_TRANSFERENCIASPOS] = @CUA_TRAN"& _ 
                "SFERENCIASPOS, [CUA_TRANSFERENCIASPOS2] = @CUA_TRANSFERENCIASPOS2, [CUA_TRANSFER"& _ 
                "ENCIASNEG] = @CUA_TRANSFERENCIASNEG, [CUA_TRANSFERENCIASNEG2] = @CUA_TRANSFERENC"& _ 
                "IASNEG2, [CUA_PORCOLOCAR] = @CUA_PORCOLOCAR, [CUA_PORCOLOCAR2] = @CUA_PORCOLOCAR"& _ 
                "2, [CUA_COLOCACIONES] = @CUA_COLOCACIONES, [CUA_COLOCACIONES2] = @CUA_COLOCACION"& _ 
                "ES2, [CUA_SALDO] = @CUA_SALDO, [CUA_SALDO2] = @CUA_SALDO2, [CUA_EGRESOSCHE] = @C"& _ 
                "UA_EGRESOSCHE, [CUA_PROXIMOSALDO] = @CUA_PROXIMOSALDO WHERE (([CUA_CODIGO] = @Or"& _ 
                "iginal_CUA_CODIGO) AND ((@IsNull_PLA_CODIGO = 1 AND [PLA_CODIGO] IS NULL) OR ([P"& _ 
                "LA_CODIGO] = @Original_PLA_CODIGO)) AND ((@IsNull_CTE_CODIGO = 1 AND [CTE_CODIGO"& _ 
                "] IS NULL) OR ([CTE_CODIGO] = @Original_CTE_CODIGO)) AND ((@IsNull_CUA_SALDOINI "& _ 
                "= 1 AND [CUA_SALDOINI] IS NULL) OR ([CUA_SALDOINI] = @Original_CUA_SALDOINI)) AN"& _ 
                "D ((@IsNull_CUA_RESCATES = 1 AND [CUA_RESCATES] IS NULL) OR ([CUA_RESCATES] = @O"& _ 
                "riginal_CUA_RESCATES)) AND ((@IsNull_CUA_RESCATES2 = 1 AND [CUA_RESCATES2] IS NU"& _ 
                "LL) OR ([CUA_RESCATES2] = @Original_CUA_RESCATES2)) AND ((@IsNull_CUA_RECAUDACIO"& _ 
                "N = 1 AND [CUA_RECAUDACION] IS NULL) OR ([CUA_RECAUDACION] = @Original_CUA_RECAU"& _ 
                "DACION)) AND ((@IsNull_CUA_RECAUDACION2 = 1 AND [CUA_RECAUDACION2] IS NULL) OR ("& _ 
                "[CUA_RECAUDACION2] = @Original_CUA_RECAUDACION2)) AND ((@IsNull_CUA_CHEQUESDEV ="& _ 
                " 1 AND [CUA_CHEQUESDEV] IS NULL) OR ([CUA_CHEQUESDEV] = @Original_CUA_CHEQUESDEV"& _ 
                ")) AND ((@IsNull_CUA_CHEQUESDEV2 = 1 AND [CUA_CHEQUESDEV2] IS NULL) OR ([CUA_CHE"& _ 
                "QUESDEV2] = @Original_CUA_CHEQUESDEV2)) AND ((@IsNull_CUA_APORTES = 1 AND [CUA_A"& _ 
                "PORTES] IS NULL) OR ([CUA_APORTES] = @Original_CUA_APORTES)) AND ((@IsNull_CUA_A"& _ 
                "PORTES2 = 1 AND [CUA_APORTES2] IS NULL) OR ([CUA_APORTES2] = @Original_CUA_APORT"& _ 
                "ES2)) AND ((@IsNull_CUA_OTROSINGRESOS = 1 AND [CUA_OTROSINGRESOS] IS NULL) OR (["& _ 
                "CUA_OTROSINGRESOS] = @Original_CUA_OTROSINGRESOS)) AND ((@IsNull_CUA_OTROSINGRES"& _ 
                "OS2 = 1 AND [CUA_OTROSINGRESOS2] IS NULL) OR ([CUA_OTROSINGRESOS2] = @Original_C"& _ 
                "UA_OTROSINGRESOS2)) AND ((@IsNull_CUA_PAGOSCHE = 1 AND [CUA_PAGOSCHE] IS NULL) O"& _ 
                "R ([CUA_PAGOSCHE] = @Original_CUA_PAGOSCHE)) AND ((@IsNull_CUA_PAGOSCHE2 = 1 AND"& _ 
                " [CUA_PAGOSCHE2] IS NULL) OR ([CUA_PAGOSCHE2] = @Original_CUA_PAGOSCHE2)) AND (("& _ 
                "@IsNull_CUA_PAGOSCAR = 1 AND [CUA_PAGOSCAR] IS NULL) OR ([CUA_PAGOSCAR] = @Origi"& _ 
                "nal_CUA_PAGOSCAR)) AND ((@IsNull_CUA_PAGOSCAR2 = 1 AND [CUA_PAGOSCAR2] IS NULL) "& _ 
                "OR ([CUA_PAGOSCAR2] = @Original_CUA_PAGOSCAR2)) AND ((@IsNull_CUA_CHEQUESCAR = 1"& _ 
                " AND [CUA_CHEQUESCAR] IS NULL) OR ([CUA_CHEQUESCAR] = @Original_CUA_CHEQUESCAR))"& _ 
                " AND ((@IsNull_CUA_CHEQUESCAR2 = 1 AND [CUA_CHEQUESCAR2] IS NULL) OR ([CUA_CHEQU"& _ 
                "ESCAR2] = @Original_CUA_CHEQUESCAR2)) AND ((@IsNull_CUA_TRANSFERENCIASPOS = 1 AN"& _ 
                "D [CUA_TRANSFERENCIASPOS] IS NULL) OR ([CUA_TRANSFERENCIASPOS] = @Original_CUA_T"& _ 
                "RANSFERENCIASPOS)) AND ((@IsNull_CUA_TRANSFERENCIASPOS2 = 1 AND [CUA_TRANSFERENC"& _ 
                "IASPOS2] IS NULL) OR ([CUA_TRANSFERENCIASPOS2] = @Original_CUA_TRANSFERENCIASPOS"& _ 
                "2)) AND ((@IsNull_CUA_TRANSFERENCIASNEG = 1 AND [CUA_TRANSFERENCIASNEG] IS NULL)"& _ 
                " OR ([CUA_TRANSFERENCIASNEG] = @Original_CUA_TRANSFERENCIASNEG)) AND ((@IsNull_C"& _ 
                "UA_TRANSFERENCIASNEG2 = 1 AND [CUA_TRANSFERENCIASNEG2] IS NULL) OR ([CUA_TRANSFE"& _ 
                "RENCIASNEG2] = @Original_CUA_TRANSFERENCIASNEG2)) AND ((@IsNull_CUA_PORCOLOCAR ="& _ 
                " 1 AND [CUA_PORCOLOCAR] IS NULL) OR ([CUA_PORCOLOCAR] = @Original_CUA_PORCOLOCAR"& _ 
                ")) AND ((@IsNull_CUA_PORCOLOCAR2 = 1 AND [CUA_PORCOLOCAR2] IS NULL) OR ([CUA_POR"& _ 
                "COLOCAR2] = @Original_CUA_PORCOLOCAR2)) AND ((@IsNull_CUA_COLOCACIONES = 1 AND ["& _ 
                "CUA_COLOCACIONES] IS NULL) OR ([CUA_COLOCACIONES] = @Original_CUA_COLOCACIONES))"& _ 
                " AND ((@IsNull_CUA_COLOCACIONES2 = 1 AND [CUA_COLOCACIONES2] IS NULL) OR ([CUA_C"& _ 
                "OLOCACIONES2] = @Original_CUA_COLOCACIONES2)) AND ((@IsNull_CUA_SALDO = 1 AND [C"& _ 
                "UA_SALDO] IS NULL) OR ([CUA_SALDO] = @Original_CUA_SALDO)) AND ((@IsNull_CUA_SAL"& _ 
                "DO2 = 1 AND [CUA_SALDO2] IS NULL) OR ([CUA_SALDO2] = @Original_CUA_SALDO2)) AND "& _ 
                "((@IsNull_CUA_EGRESOSCHE = 1 AND [CUA_EGRESOSCHE] IS NULL) OR ([CUA_EGRESOSCHE] "& _ 
                "= @Original_CUA_EGRESOSCHE)) AND ((@IsNull_CUA_PROXIMOSALDO = 1 AND [CUA_PROXIMO"& _ 
                "SALDO] IS NULL) OR ([CUA_PROXIMOSALDO] = @Original_CUA_PROXIMOSALDO)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT "& _ 
                "CUA_CODIGO, PLA_CODIGO, CTE_CODIGO, CUA_SALDOINI, CUA_RESCATES, CUA_RESCATES2, C"& _ 
                "UA_RECAUDACION, CUA_RECAUDACION2, CUA_CHEQUESDEV, CUA_CHEQUESDEV2, CUA_APORTES, "& _ 
                "CUA_APORTES2, CUA_OTROSINGRESOS, CUA_OTROSINGRESOS2, CUA_PAGOSCHE, CUA_PAGOSCHE2"& _ 
                ", CUA_PAGOSCAR, CUA_PAGOSCAR2, CUA_CHEQUESCAR, CUA_CHEQUESCAR2, CUA_TRANSFERENCI"& _ 
                "ASPOS, CUA_TRANSFERENCIASPOS2, CUA_TRANSFERENCIASNEG, CUA_TRANSFERENCIASNEG2, CU"& _ 
                "A_PORCOLOCAR, CUA_PORCOLOCAR2, CUA_COLOCACIONES, CUA_COLOCACIONES2, CUA_SALDO, C"& _ 
                "UA_SALDO2, CUA_EGRESOSCHE, CUA_PROXIMOSALDO FROM TESCUA WHERE (CUA_CODIGO = @CUA"& _ 
                "_CODIGO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLA_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_CODIGO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_SALDOINI", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_SALDOINI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_RESCATES", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_RESCATES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_RESCATES2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_RESCATES2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_RECAUDACION", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_RECAUDACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_RECAUDACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_RECAUDACION2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_CHEQUESDEV", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_CHEQUESDEV", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_CHEQUESDEV2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_CHEQUESDEV2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_APORTES", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_APORTES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_APORTES2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_APORTES2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_OTROSINGRESOS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_OTROSINGRESOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_OTROSINGRESOS2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_OTROSINGRESOS2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_PAGOSCHE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PAGOSCHE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_PAGOSCHE2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PAGOSCHE2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_PAGOSCAR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PAGOSCAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_PAGOSCAR2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PAGOSCAR2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_CHEQUESCAR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_CHEQUESCAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_CHEQUESCAR2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_CHEQUESCAR2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_TRANSFERENCIASPOS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_TRANSFERENCIASPOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_TRANSFERENCIASPOS2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_TRANSFERENCIASPOS2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_TRANSFERENCIASNEG", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_TRANSFERENCIASNEG", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_TRANSFERENCIASNEG2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_TRANSFERENCIASNEG2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_PORCOLOCAR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PORCOLOCAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_PORCOLOCAR2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PORCOLOCAR2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_COLOCACIONES", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_COLOCACIONES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_COLOCACIONES2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_COLOCACIONES2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_SALDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_SALDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_SALDO2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_SALDO2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_EGRESOSCHE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_EGRESOSCHE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_PROXIMOSALDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PROXIMOSALDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_CODIGO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CUA_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PLA_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PLA_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_CODIGO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_SALDOINI", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_SALDOINI", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_SALDOINI", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_SALDOINI", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_RESCATES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_RESCATES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_RESCATES", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_RESCATES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_RESCATES2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_RESCATES2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_RESCATES2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_RESCATES2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_RECAUDACION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_RECAUDACION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_RECAUDACION", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_RECAUDACION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_RECAUDACION2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_RECAUDACION2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_RECAUDACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_RECAUDACION2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_CHEQUESDEV", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_CHEQUESDEV", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_CHEQUESDEV", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_CHEQUESDEV", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_CHEQUESDEV2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_CHEQUESDEV2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_CHEQUESDEV2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_CHEQUESDEV2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_APORTES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_APORTES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_APORTES", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_APORTES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_APORTES2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_APORTES2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_APORTES2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_APORTES2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_OTROSINGRESOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_OTROSINGRESOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_OTROSINGRESOS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_OTROSINGRESOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_OTROSINGRESOS2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_OTROSINGRESOS2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_OTROSINGRESOS2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_OTROSINGRESOS2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_PAGOSCHE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_PAGOSCHE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_PAGOSCHE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PAGOSCHE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_PAGOSCHE2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_PAGOSCHE2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_PAGOSCHE2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PAGOSCHE2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_PAGOSCAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_PAGOSCAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_PAGOSCAR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PAGOSCAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_PAGOSCAR2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_PAGOSCAR2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_PAGOSCAR2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PAGOSCAR2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_CHEQUESCAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_CHEQUESCAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_CHEQUESCAR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_CHEQUESCAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_CHEQUESCAR2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_CHEQUESCAR2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_CHEQUESCAR2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_CHEQUESCAR2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_TRANSFERENCIASPOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_TRANSFERENCIASPOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_TRANSFERENCIASPOS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_TRANSFERENCIASPOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_TRANSFERENCIASPOS2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_TRANSFERENCIASPOS2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_TRANSFERENCIASPOS2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_TRANSFERENCIASPOS2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_TRANSFERENCIASNEG", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_TRANSFERENCIASNEG", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_TRANSFERENCIASNEG", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_TRANSFERENCIASNEG", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_TRANSFERENCIASNEG2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_TRANSFERENCIASNEG2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_TRANSFERENCIASNEG2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_TRANSFERENCIASNEG2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_PORCOLOCAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_PORCOLOCAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_PORCOLOCAR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PORCOLOCAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_PORCOLOCAR2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_PORCOLOCAR2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_PORCOLOCAR2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PORCOLOCAR2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_COLOCACIONES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_COLOCACIONES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_COLOCACIONES", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_COLOCACIONES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_COLOCACIONES2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_COLOCACIONES2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_COLOCACIONES2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_COLOCACIONES2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_SALDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_SALDO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_SALDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_SALDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_SALDO2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_SALDO2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_SALDO2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_SALDO2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_EGRESOSCHE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_EGRESOSCHE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_EGRESOSCHE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_EGRESOSCHE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CUA_PROXIMOSALDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CUA_PROXIMOSALDO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CUA_PROXIMOSALDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "CUA_PROXIMOSALDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CUA_CODIGO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CUA_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CUA_CODIGO, PLA_CODIGO, CTE_CODIGO, CUA_SALDOINI, CUA_RESCATES, CUA_RESCAT"& _ 
                "ES2, CUA_RECAUDACION, CUA_RECAUDACION2, CUA_CHEQUESDEV, CUA_CHEQUESDEV2, CUA_APO"& _ 
                "RTES, CUA_APORTES2, CUA_OTROSINGRESOS, CUA_OTROSINGRESOS2, CUA_PAGOSCHE, CUA_PAG"& _ 
                "OSCHE2, CUA_PAGOSCAR, CUA_PAGOSCAR2, CUA_CHEQUESCAR, CUA_CHEQUESCAR2, CUA_TRANSF"& _ 
                "ERENCIASPOS, CUA_TRANSFERENCIASPOS2, CUA_TRANSFERENCIASNEG, CUA_TRANSFERENCIASNE"& _ 
                "G2, CUA_PORCOLOCAR, CUA_PORCOLOCAR2, CUA_COLOCACIONES, CUA_COLOCACIONES2, CUA_SA"& _ 
                "LDO, CUA_SALDO2, CUA_EGRESOSCHE, CUA_PROXIMOSALDO FROM dbo.TESCUA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsWALCUA.TESCUADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsWALCUA.TESCUADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsWALCUA.TESCUADataTable = New dsWALCUA.TESCUADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsWALCUA.TESCUADataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsWALCUA) As Integer
            Return Me.Adapter.Update(dataSet, "TESCUA")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CUA_CODIGO As Decimal,  _
                    ByVal Original_PLA_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal Original_CTE_CODIGO As String,  _
                    ByVal Original_CUA_SALDOINI As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_RESCATES As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_RESCATES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_RECAUDACION As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_RECAUDACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_CHEQUESDEV As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_CHEQUESDEV2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_APORTES As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_APORTES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_OTROSINGRESOS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_OTROSINGRESOS2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PAGOSCHE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PAGOSCHE2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PAGOSCAR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PAGOSCAR2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_CHEQUESCAR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_CHEQUESCAR2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_TRANSFERENCIASPOS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_TRANSFERENCIASPOS2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_TRANSFERENCIASNEG As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_TRANSFERENCIASNEG2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PORCOLOCAR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PORCOLOCAR2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_COLOCACIONES As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_COLOCACIONES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_SALDO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_SALDO2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_EGRESOSCHE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PROXIMOSALDO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CUA_CODIGO,Decimal)
            If (Original_PLA_CODIGO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_PLA_CODIGO.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_CTE_CODIGO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CTE_CODIGO,String)
            End If
            If (Original_CUA_SALDOINI.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_CUA_SALDOINI.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_RESCATES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_CUA_RESCATES.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_RESCATES2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_CUA_RESCATES2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_RECAUDACION.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_CUA_RECAUDACION.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_RECAUDACION2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_CUA_RECAUDACION2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_CHEQUESDEV.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_CUA_CHEQUESDEV.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_CHEQUESDEV2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_CUA_CHEQUESDEV2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_APORTES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_CUA_APORTES.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_APORTES2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_CUA_APORTES2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_OTROSINGRESOS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_CUA_OTROSINGRESOS.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_OTROSINGRESOS2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_CUA_OTROSINGRESOS2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_PAGOSCHE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_CUA_PAGOSCHE.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_PAGOSCHE2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_CUA_PAGOSCHE2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_PAGOSCAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_CUA_PAGOSCAR.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_PAGOSCAR2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_CUA_PAGOSCAR2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_CHEQUESCAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_CUA_CHEQUESCAR.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_CHEQUESCAR2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_CUA_CHEQUESCAR2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_TRANSFERENCIASPOS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_CUA_TRANSFERENCIASPOS.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_TRANSFERENCIASPOS2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_CUA_TRANSFERENCIASPOS2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_TRANSFERENCIASNEG.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_CUA_TRANSFERENCIASNEG.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_TRANSFERENCIASNEG2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_CUA_TRANSFERENCIASNEG2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_PORCOLOCAR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_CUA_PORCOLOCAR.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_PORCOLOCAR2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_CUA_PORCOLOCAR2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_COLOCACIONES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_CUA_COLOCACIONES.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_COLOCACIONES2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_CUA_COLOCACIONES2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_SALDO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_CUA_SALDO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_SALDO2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_CUA_SALDO2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_EGRESOSCHE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_CUA_EGRESOSCHE.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_PROXIMOSALDO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_CUA_PROXIMOSALDO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal PLA_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal CTE_CODIGO As String,  _
                    ByVal CUA_SALDOINI As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_RESCATES As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_RESCATES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_RECAUDACION As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_RECAUDACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_CHEQUESDEV As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_CHEQUESDEV2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_APORTES As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_APORTES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_OTROSINGRESOS As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_OTROSINGRESOS2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PAGOSCHE As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PAGOSCHE2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PAGOSCAR As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PAGOSCAR2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_CHEQUESCAR As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_CHEQUESCAR2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_TRANSFERENCIASPOS As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_TRANSFERENCIASPOS2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_TRANSFERENCIASNEG As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_TRANSFERENCIASNEG2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PORCOLOCAR As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PORCOLOCAR2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_COLOCACIONES As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_COLOCACIONES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_SALDO As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_SALDO2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_EGRESOSCHE As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PROXIMOSALDO As Global.System.Nullable(Of Decimal)) As Integer
            If (PLA_CODIGO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PLA_CODIGO.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CTE_CODIGO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CTE_CODIGO,String)
            End If
            If (CUA_SALDOINI.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CUA_SALDOINI.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CUA_RESCATES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CUA_RESCATES.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CUA_RESCATES2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CUA_RESCATES2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (CUA_RECAUDACION.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CUA_RECAUDACION.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CUA_RECAUDACION2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CUA_RECAUDACION2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (CUA_CHEQUESDEV.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CUA_CHEQUESDEV.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CUA_CHEQUESDEV2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CUA_CHEQUESDEV2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CUA_APORTES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CUA_APORTES.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CUA_APORTES2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(CUA_APORTES2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (CUA_OTROSINGRESOS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(CUA_OTROSINGRESOS.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (CUA_OTROSINGRESOS2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(CUA_OTROSINGRESOS2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (CUA_PAGOSCHE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(CUA_PAGOSCHE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (CUA_PAGOSCHE2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(CUA_PAGOSCHE2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (CUA_PAGOSCAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(CUA_PAGOSCAR.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (CUA_PAGOSCAR2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(CUA_PAGOSCAR2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (CUA_CHEQUESCAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(CUA_CHEQUESCAR.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (CUA_CHEQUESCAR2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(CUA_CHEQUESCAR2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (CUA_TRANSFERENCIASPOS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(CUA_TRANSFERENCIASPOS.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (CUA_TRANSFERENCIASPOS2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(CUA_TRANSFERENCIASPOS2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CUA_TRANSFERENCIASNEG.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(CUA_TRANSFERENCIASNEG.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (CUA_TRANSFERENCIASNEG2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(CUA_TRANSFERENCIASNEG2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (CUA_PORCOLOCAR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(CUA_PORCOLOCAR.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (CUA_PORCOLOCAR2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(CUA_PORCOLOCAR2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (CUA_COLOCACIONES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(CUA_COLOCACIONES.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (CUA_COLOCACIONES2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(CUA_COLOCACIONES2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (CUA_SALDO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(CUA_SALDO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (CUA_SALDO2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(CUA_SALDO2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (CUA_EGRESOSCHE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(CUA_EGRESOSCHE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (CUA_PROXIMOSALDO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(CUA_PROXIMOSALDO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal PLA_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal CTE_CODIGO As String,  _
                    ByVal CUA_SALDOINI As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_RESCATES As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_RESCATES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_RECAUDACION As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_RECAUDACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_CHEQUESDEV As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_CHEQUESDEV2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_APORTES As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_APORTES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_OTROSINGRESOS As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_OTROSINGRESOS2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PAGOSCHE As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PAGOSCHE2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PAGOSCAR As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PAGOSCAR2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_CHEQUESCAR As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_CHEQUESCAR2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_TRANSFERENCIASPOS As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_TRANSFERENCIASPOS2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_TRANSFERENCIASNEG As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_TRANSFERENCIASNEG2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PORCOLOCAR As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PORCOLOCAR2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_COLOCACIONES As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_COLOCACIONES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_SALDO As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_SALDO2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_EGRESOSCHE As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PROXIMOSALDO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_CODIGO As Decimal,  _
                    ByVal Original_PLA_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal Original_CTE_CODIGO As String,  _
                    ByVal Original_CUA_SALDOINI As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_RESCATES As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_RESCATES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_RECAUDACION As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_RECAUDACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_CHEQUESDEV As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_CHEQUESDEV2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_APORTES As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_APORTES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_OTROSINGRESOS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_OTROSINGRESOS2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PAGOSCHE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PAGOSCHE2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PAGOSCAR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PAGOSCAR2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_CHEQUESCAR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_CHEQUESCAR2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_TRANSFERENCIASPOS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_TRANSFERENCIASPOS2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_TRANSFERENCIASNEG As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_TRANSFERENCIASNEG2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PORCOLOCAR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PORCOLOCAR2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_COLOCACIONES As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_COLOCACIONES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_SALDO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_SALDO2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_EGRESOSCHE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PROXIMOSALDO As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_CODIGO As Decimal) As Integer
            If (PLA_CODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(PLA_CODIGO.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CTE_CODIGO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CTE_CODIGO,String)
            End If
            If (CUA_SALDOINI.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CUA_SALDOINI.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CUA_RESCATES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CUA_RESCATES.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CUA_RESCATES2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CUA_RESCATES2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (CUA_RECAUDACION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CUA_RECAUDACION.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CUA_RECAUDACION2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CUA_RECAUDACION2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (CUA_CHEQUESDEV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CUA_CHEQUESDEV.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CUA_CHEQUESDEV2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CUA_CHEQUESDEV2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CUA_APORTES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CUA_APORTES.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CUA_APORTES2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(CUA_APORTES2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (CUA_OTROSINGRESOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(CUA_OTROSINGRESOS.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (CUA_OTROSINGRESOS2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(CUA_OTROSINGRESOS2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (CUA_PAGOSCHE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(CUA_PAGOSCHE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (CUA_PAGOSCHE2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(CUA_PAGOSCHE2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (CUA_PAGOSCAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(CUA_PAGOSCAR.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (CUA_PAGOSCAR2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(CUA_PAGOSCAR2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (CUA_CHEQUESCAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(CUA_CHEQUESCAR.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (CUA_CHEQUESCAR2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(CUA_CHEQUESCAR2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (CUA_TRANSFERENCIASPOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(CUA_TRANSFERENCIASPOS.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (CUA_TRANSFERENCIASPOS2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(CUA_TRANSFERENCIASPOS2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CUA_TRANSFERENCIASNEG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(CUA_TRANSFERENCIASNEG.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (CUA_TRANSFERENCIASNEG2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(CUA_TRANSFERENCIASNEG2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (CUA_PORCOLOCAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(CUA_PORCOLOCAR.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (CUA_PORCOLOCAR2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(CUA_PORCOLOCAR2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (CUA_COLOCACIONES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(CUA_COLOCACIONES.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (CUA_COLOCACIONES2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(CUA_COLOCACIONES2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (CUA_SALDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(CUA_SALDO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (CUA_SALDO2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(CUA_SALDO2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (CUA_EGRESOSCHE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(CUA_EGRESOSCHE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (CUA_PROXIMOSALDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(CUA_PROXIMOSALDO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_CUA_CODIGO,Decimal)
            If (Original_PLA_CODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_PLA_CODIGO.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_CTE_CODIGO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_CTE_CODIGO,String)
            End If
            If (Original_CUA_SALDOINI.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_CUA_SALDOINI.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_RESCATES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_CUA_RESCATES.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_RESCATES2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_CUA_RESCATES2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_RECAUDACION.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_CUA_RECAUDACION.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_RECAUDACION2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_CUA_RECAUDACION2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_CHEQUESDEV.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_CUA_CHEQUESDEV.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_CHEQUESDEV2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_CUA_CHEQUESDEV2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_APORTES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_CUA_APORTES.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_APORTES2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_CUA_APORTES2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_OTROSINGRESOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_CUA_OTROSINGRESOS.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_OTROSINGRESOS2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_CUA_OTROSINGRESOS2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_PAGOSCHE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_CUA_PAGOSCHE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_PAGOSCHE2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_CUA_PAGOSCHE2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_PAGOSCAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_CUA_PAGOSCAR.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_PAGOSCAR2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_CUA_PAGOSCAR2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_CHEQUESCAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_CUA_CHEQUESCAR.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_CHEQUESCAR2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_CUA_CHEQUESCAR2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_TRANSFERENCIASPOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_CUA_TRANSFERENCIASPOS.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_TRANSFERENCIASPOS2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_CUA_TRANSFERENCIASPOS2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_TRANSFERENCIASNEG.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_CUA_TRANSFERENCIASNEG.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_TRANSFERENCIASNEG2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_CUA_TRANSFERENCIASNEG2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_PORCOLOCAR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_CUA_PORCOLOCAR.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_PORCOLOCAR2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_CUA_PORCOLOCAR2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_COLOCACIONES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_CUA_COLOCACIONES.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_COLOCACIONES2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_CUA_COLOCACIONES2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_SALDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_CUA_SALDO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_SALDO2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_CUA_SALDO2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_EGRESOSCHE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_CUA_EGRESOSCHE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (Original_CUA_PROXIMOSALDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_CUA_PROXIMOSALDO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(94).Value = CType(CUA_CODIGO,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal PLA_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal CTE_CODIGO As String,  _
                    ByVal CUA_SALDOINI As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_RESCATES As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_RESCATES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_RECAUDACION As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_RECAUDACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_CHEQUESDEV As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_CHEQUESDEV2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_APORTES As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_APORTES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_OTROSINGRESOS As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_OTROSINGRESOS2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PAGOSCHE As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PAGOSCHE2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PAGOSCAR As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PAGOSCAR2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_CHEQUESCAR As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_CHEQUESCAR2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_TRANSFERENCIASPOS As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_TRANSFERENCIASPOS2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_TRANSFERENCIASNEG As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_TRANSFERENCIASNEG2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PORCOLOCAR As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PORCOLOCAR2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_COLOCACIONES As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_COLOCACIONES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_SALDO As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_SALDO2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_EGRESOSCHE As Global.System.Nullable(Of Decimal),  _
                    ByVal CUA_PROXIMOSALDO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_CODIGO As Decimal,  _
                    ByVal Original_PLA_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal Original_CTE_CODIGO As String,  _
                    ByVal Original_CUA_SALDOINI As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_RESCATES As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_RESCATES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_RECAUDACION As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_RECAUDACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_CHEQUESDEV As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_CHEQUESDEV2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_APORTES As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_APORTES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_OTROSINGRESOS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_OTROSINGRESOS2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PAGOSCHE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PAGOSCHE2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PAGOSCAR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PAGOSCAR2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_CHEQUESCAR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_CHEQUESCAR2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_TRANSFERENCIASPOS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_TRANSFERENCIASPOS2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_TRANSFERENCIASNEG As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_TRANSFERENCIASNEG2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PORCOLOCAR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PORCOLOCAR2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_COLOCACIONES As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_COLOCACIONES2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_SALDO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_SALDO2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_EGRESOSCHE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CUA_PROXIMOSALDO As Global.System.Nullable(Of Decimal)) As Integer
            Return Me.Update(PLA_CODIGO, CTE_CODIGO, CUA_SALDOINI, CUA_RESCATES, CUA_RESCATES2, CUA_RECAUDACION, CUA_RECAUDACION2, CUA_CHEQUESDEV, CUA_CHEQUESDEV2, CUA_APORTES, CUA_APORTES2, CUA_OTROSINGRESOS, CUA_OTROSINGRESOS2, CUA_PAGOSCHE, CUA_PAGOSCHE2, CUA_PAGOSCAR, CUA_PAGOSCAR2, CUA_CHEQUESCAR, CUA_CHEQUESCAR2, CUA_TRANSFERENCIASPOS, CUA_TRANSFERENCIASPOS2, CUA_TRANSFERENCIASNEG, CUA_TRANSFERENCIASNEG2, CUA_PORCOLOCAR, CUA_PORCOLOCAR2, CUA_COLOCACIONES, CUA_COLOCACIONES2, CUA_SALDO, CUA_SALDO2, CUA_EGRESOSCHE, CUA_PROXIMOSALDO, Original_CUA_CODIGO, Original_PLA_CODIGO, Original_CTE_CODIGO, Original_CUA_SALDOINI, Original_CUA_RESCATES, Original_CUA_RESCATES2, Original_CUA_RECAUDACION, Original_CUA_RECAUDACION2, Original_CUA_CHEQUESDEV, Original_CUA_CHEQUESDEV2, Original_CUA_APORTES, Original_CUA_APORTES2, Original_CUA_OTROSINGRESOS, Original_CUA_OTROSINGRESOS2, Original_CUA_PAGOSCHE, Original_CUA_PAGOSCHE2, Original_CUA_PAGOSCAR, Original_CUA_PAGOSCAR2, Original_CUA_CHEQUESCAR, Original_CUA_CHEQUESCAR2, Original_CUA_TRANSFERENCIASPOS, Original_CUA_TRANSFERENCIASPOS2, Original_CUA_TRANSFERENCIASNEG, Original_CUA_TRANSFERENCIASNEG2, Original_CUA_PORCOLOCAR, Original_CUA_PORCOLOCAR2, Original_CUA_COLOCACIONES, Original_CUA_COLOCACIONES2, Original_CUA_SALDO, Original_CUA_SALDO2, Original_CUA_EGRESOSCHE, Original_CUA_PROXIMOSALDO, Original_CUA_CODIGO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class Actualiza_PlanillaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Actualiza_Planilla"
            tableMapping.ColumnMappings.Add("PLA_CODIGO", "PLA_CODIGO")
            tableMapping.ColumnMappings.Add("Total1", "Total1")
            tableMapping.ColumnMappings.Add("Total2", "Total2")
            tableMapping.ColumnMappings.Add("Total3", "Total3")
            tableMapping.ColumnMappings.Add("Total4", "Total4")
            tableMapping.ColumnMappings.Add("Total5", "Total5")
            tableMapping.ColumnMappings.Add("Total6", "Total6")
            tableMapping.ColumnMappings.Add("Total7", "Total7")
            tableMapping.ColumnMappings.Add("Total8", "Total8")
            tableMapping.ColumnMappings.Add("Total9", "Total9")
            tableMapping.ColumnMappings.Add("Total10", "Total10")
            tableMapping.ColumnMappings.Add("Total11", "Total11")
            tableMapping.ColumnMappings.Add("Total12", "Total12")
            tableMapping.ColumnMappings.Add("total13", "total13")
            tableMapping.ColumnMappings.Add("total14", "total14")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PLA_CODIGO, SUM(DPL_SALDOINI) AS Total1, SUM(DPL_RESCATES) AS Total2, SUM("& _ 
                "DPL_RECAUDACION) AS Total3, SUM(DPL_CHEQUESDEV) AS Total4, SUM(DPL_APORTES) AS T"& _ 
                "otal5, SUM(DPL_OTROSINGRESOS) AS Total6, SUM(DPL_PAGOSCHE) AS Total7, SUM(DPL_PA"& _ 
                "GOSCAR) AS Total8, SUM(DPL_TRANSFERENCIASPOS) AS Total9, SUM(DPL_TRANSFERENCIASN"& _ 
                "EG) AS Total10, SUM(DPL_PORCOLOCAR) AS Total11, SUM(DPL_COLOCACIONES) AS Total12"& _ 
                ", SUM(DPL_SALDO) AS total13, SUM(DPL_chequescAR) AS total14 FROM TESDPL GROUP BY"& _ 
                " PLA_CODIGO HAVING (PLA_CODIGO = @Planilla)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Planilla", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillByPlanilla(ByVal dataTable As dsWALCUA.Actualiza_PlanillaDataTable, ByVal Planilla As Long) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Planilla,Long)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetDataByPlanilla(ByVal Planilla As Long) As dsWALCUA.Actualiza_PlanillaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Planilla,Long)
            Dim dataTable As dsWALCUA.Actualiza_PlanillaDataTable = New dsWALCUA.Actualiza_PlanillaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TESDOPTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TESDOP"
            tableMapping.ColumnMappings.Add("DOP_CODIGO", "DOP_CODIGO")
            tableMapping.ColumnMappings.Add("DPL_CODIGO", "DPL_CODIGO")
            tableMapping.ColumnMappings.Add("COL_CODIGO", "COL_CODIGO")
            tableMapping.ColumnMappings.Add("DOP_MONTO", "DOP_MONTO")
            tableMapping.ColumnMappings.Add("DOP_TIPO", "DOP_TIPO")
            tableMapping.ColumnMappings.Add("DOP_NUMERO", "DOP_NUMERO")
            tableMapping.ColumnMappings.Add("DOP_GLOSAADIC", "DOP_GLOSAADIC")
            tableMapping.ColumnMappings.Add("DOP_AUDITORIA", "DOP_AUDITORIA")
            tableMapping.ColumnMappings.Add("DOP_TIPOREC", "DOP_TIPOREC")
            tableMapping.ColumnMappings.Add("DAZ_CODIGO", "DAZ_CODIGO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TESDOP] WHERE (([DOP_CODIGO] = @Original_DOP_CODIGO) AND ((@Is"& _ 
                "Null_DPL_CODIGO = 1 AND [DPL_CODIGO] IS NULL) OR ([DPL_CODIGO] = @Original_DPL_C"& _ 
                "ODIGO)) AND ((@IsNull_COL_CODIGO = 1 AND [COL_CODIGO] IS NULL) OR ([COL_CODIGO] "& _ 
                "= @Original_COL_CODIGO)) AND ((@IsNull_DOP_MONTO = 1 AND [DOP_MONTO] IS NULL) OR"& _ 
                " ([DOP_MONTO] = @Original_DOP_MONTO)) AND ((@IsNull_DOP_TIPO = 1 AND [DOP_TIPO] "& _ 
                "IS NULL) OR ([DOP_TIPO] = @Original_DOP_TIPO)) AND ((@IsNull_DOP_NUMERO = 1 AND "& _ 
                "[DOP_NUMERO] IS NULL) OR ([DOP_NUMERO] = @Original_DOP_NUMERO)) AND ((@IsNull_DO"& _ 
                "P_GLOSAADIC = 1 AND [DOP_GLOSAADIC] IS NULL) OR ([DOP_GLOSAADIC] = @Original_DOP"& _ 
                "_GLOSAADIC)) AND ((@IsNull_DOP_AUDITORIA = 1 AND [DOP_AUDITORIA] IS NULL) OR ([D"& _ 
                "OP_AUDITORIA] = @Original_DOP_AUDITORIA)) AND ((@IsNull_DOP_TIPOREC = 1 AND [DOP"& _ 
                "_TIPOREC] IS NULL) OR ([DOP_TIPOREC] = @Original_DOP_TIPOREC)) AND ((@IsNull_DAZ"& _ 
                "_CODIGO = 1 AND [DAZ_CODIGO] IS NULL) OR ([DAZ_CODIGO] = @Original_DAZ_CODIGO)))"& _ 
                ""
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DPL_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DPL_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DPL_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DPL_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COL_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COL_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COL_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COL_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_MONTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_MONTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_MONTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "DOP_MONTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_TIPO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_TIPO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_NUMERO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_NUMERO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_NUMERO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_NUMERO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_GLOSAADIC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_GLOSAADIC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_GLOSAADIC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_GLOSAADIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_AUDITORIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_AUDITORIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_AUDITORIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_AUDITORIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_TIPOREC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPOREC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_TIPOREC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPOREC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TESDOP] ([DPL_CODIGO], [COL_CODIGO], [DOP_MONTO], [DOP_TIPO], "& _ 
                "[DOP_NUMERO], [DOP_GLOSAADIC], [DOP_AUDITORIA], [DOP_TIPOREC], [DAZ_CODIGO]) VAL"& _ 
                "UES (@DPL_CODIGO, @COL_CODIGO, @DOP_MONTO, @DOP_TIPO, @DOP_NUMERO, @DOP_GLOSAADI"& _ 
                "C, @DOP_AUDITORIA, @DOP_TIPOREC, @DAZ_CODIGO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DOP_CODIGO, DPL_CODIGO, C"& _ 
                "OL_CODIGO, DOP_MONTO, DOP_TIPO, DOP_NUMERO, DOP_GLOSAADIC, DOP_AUDITORIA, DOP_TI"& _ 
                "POREC, DAZ_CODIGO FROM TESDOP WHERE (DOP_CODIGO = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DPL_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DPL_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COL_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COL_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_MONTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "DOP_MONTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_TIPO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_NUMERO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_NUMERO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_GLOSAADIC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_GLOSAADIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_AUDITORIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_AUDITORIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_TIPOREC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPOREC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TESDOP] SET [DPL_CODIGO] = @DPL_CODIGO, [COL_CODIGO] = @COL_CODIGO,"& _ 
                " [DOP_MONTO] = @DOP_MONTO, [DOP_TIPO] = @DOP_TIPO, [DOP_NUMERO] = @DOP_NUMERO, ["& _ 
                "DOP_GLOSAADIC] = @DOP_GLOSAADIC, [DOP_AUDITORIA] = @DOP_AUDITORIA, [DOP_TIPOREC]"& _ 
                " = @DOP_TIPOREC, [DAZ_CODIGO] = @DAZ_CODIGO WHERE (([DOP_CODIGO] = @Original_DOP"& _ 
                "_CODIGO) AND ((@IsNull_DPL_CODIGO = 1 AND [DPL_CODIGO] IS NULL) OR ([DPL_CODIGO]"& _ 
                " = @Original_DPL_CODIGO)) AND ((@IsNull_COL_CODIGO = 1 AND [COL_CODIGO] IS NULL)"& _ 
                " OR ([COL_CODIGO] = @Original_COL_CODIGO)) AND ((@IsNull_DOP_MONTO = 1 AND [DOP_"& _ 
                "MONTO] IS NULL) OR ([DOP_MONTO] = @Original_DOP_MONTO)) AND ((@IsNull_DOP_TIPO ="& _ 
                " 1 AND [DOP_TIPO] IS NULL) OR ([DOP_TIPO] = @Original_DOP_TIPO)) AND ((@IsNull_D"& _ 
                "OP_NUMERO = 1 AND [DOP_NUMERO] IS NULL) OR ([DOP_NUMERO] = @Original_DOP_NUMERO)"& _ 
                ") AND ((@IsNull_DOP_GLOSAADIC = 1 AND [DOP_GLOSAADIC] IS NULL) OR ([DOP_GLOSAADI"& _ 
                "C] = @Original_DOP_GLOSAADIC)) AND ((@IsNull_DOP_AUDITORIA = 1 AND [DOP_AUDITORI"& _ 
                "A] IS NULL) OR ([DOP_AUDITORIA] = @Original_DOP_AUDITORIA)) AND ((@IsNull_DOP_TI"& _ 
                "POREC = 1 AND [DOP_TIPOREC] IS NULL) OR ([DOP_TIPOREC] = @Original_DOP_TIPOREC))"& _ 
                " AND ((@IsNull_DAZ_CODIGO = 1 AND [DAZ_CODIGO] IS NULL) OR ([DAZ_CODIGO] = @Orig"& _ 
                "inal_DAZ_CODIGO)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DOP_CODIGO, DPL_CODIGO, COL_CODIGO, DOP_MONTO, DOP_T"& _ 
                "IPO, DOP_NUMERO, DOP_GLOSAADIC, DOP_AUDITORIA, DOP_TIPOREC, DAZ_CODIGO FROM TESD"& _ 
                "OP WHERE (DOP_CODIGO = @DOP_CODIGO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DPL_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DPL_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COL_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COL_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_MONTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "DOP_MONTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_TIPO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_NUMERO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_NUMERO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_GLOSAADIC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_GLOSAADIC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_AUDITORIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_AUDITORIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_TIPOREC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPOREC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DPL_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DPL_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DPL_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DPL_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COL_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COL_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COL_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COL_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_MONTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_MONTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_MONTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 15, 2, "DOP_MONTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_TIPO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_TIPO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_NUMERO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_NUMERO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_NUMERO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_NUMERO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_GLOSAADIC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_GLOSAADIC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_GLOSAADIC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_GLOSAADIC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_AUDITORIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_AUDITORIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_AUDITORIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_AUDITORIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DOP_TIPOREC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPOREC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DOP_TIPOREC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_TIPOREC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DOP_CODIGO", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DOP_CODIGO, DPL_CODIGO, COL_CODIGO, DOP_MONTO, DOP_TIPO, DOP_NUMERO, DOP_G"& _ 
                "LOSAADIC, DOP_AUDITORIA, DOP_TIPOREC, DAZ_CODIGO FROM dbo.TESDOP"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT DOP_CODIGO, DPL_CODIGO, COL_CODIGO, DOP_MONTO, DOP_TIPO, DOP_NUMERO, DOP_G"& _ 
                "LOSAADIC, DOP_AUDITORIA, DOP_TIPOREC, DAZ_CODIGO FROM dbo.TESDOP"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE DPL_CODI"& _ 
                "GO=@DPL"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DPL", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DPL_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsWALCUA.TESDOPDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsWALCUA.TESDOPDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsWALCUA.TESDOPDataTable = New dsWALCUA.TESDOPDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByDPL(ByVal dataTable As dsWALCUA.TESDOPDataTable, ByVal DPL As Global.System.Nullable(Of Long)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (DPL.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(DPL.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByDPL(ByVal DPL As Global.System.Nullable(Of Long)) As dsWALCUA.TESDOPDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (DPL.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(DPL.Value,Long)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsWALCUA.TESDOPDataTable = New dsWALCUA.TESDOPDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsWALCUA.TESDOPDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsWALCUA) As Integer
            Return Me.Adapter.Update(dataSet, "TESDOP")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_DOP_CODIGO As Long, ByVal Original_DPL_CODIGO As Global.System.Nullable(Of Long), ByVal Original_COL_CODIGO As Global.System.Nullable(Of Integer), ByVal Original_DOP_MONTO As Global.System.Nullable(Of Decimal), ByVal Original_DOP_TIPO As String, ByVal Original_DOP_NUMERO As String, ByVal Original_DOP_GLOSAADIC As String, ByVal Original_DOP_AUDITORIA As String, ByVal Original_DOP_TIPOREC As String, ByVal Original_DAZ_CODIGO As Global.System.Nullable(Of Long)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_DOP_CODIGO,Long)
            If (Original_DPL_CODIGO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_DPL_CODIGO.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_COL_CODIGO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_COL_CODIGO.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_DOP_MONTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_DOP_MONTO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_DOP_TIPO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_DOP_TIPO,String)
            End If
            If (Original_DOP_NUMERO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_DOP_NUMERO,String)
            End If
            If (Original_DOP_GLOSAADIC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_DOP_GLOSAADIC,String)
            End If
            If (Original_DOP_AUDITORIA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_DOP_AUDITORIA,String)
            End If
            If (Original_DOP_TIPOREC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_DOP_TIPOREC,String)
            End If
            If (Original_DAZ_CODIGO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_DAZ_CODIGO.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal DPL_CODIGO As Global.System.Nullable(Of Long), ByVal COL_CODIGO As Global.System.Nullable(Of Integer), ByVal DOP_MONTO As Global.System.Nullable(Of Decimal), ByVal DOP_TIPO As String, ByVal DOP_NUMERO As String, ByVal DOP_GLOSAADIC As String, ByVal DOP_AUDITORIA As String, ByVal DOP_TIPOREC As String, ByVal DAZ_CODIGO As Global.System.Nullable(Of Long)) As Integer
            If (DPL_CODIGO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(DPL_CODIGO.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (COL_CODIGO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(COL_CODIGO.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DOP_MONTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DOP_MONTO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DOP_TIPO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(DOP_TIPO,String)
            End If
            If (DOP_NUMERO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(DOP_NUMERO,String)
            End If
            If (DOP_GLOSAADIC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DOP_GLOSAADIC,String)
            End If
            If (DOP_AUDITORIA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(DOP_AUDITORIA,String)
            End If
            If (DOP_TIPOREC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(DOP_TIPOREC,String)
            End If
            If (DAZ_CODIGO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(DAZ_CODIGO.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal DPL_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal COL_CODIGO As Global.System.Nullable(Of Integer),  _
                    ByVal DOP_MONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal DOP_TIPO As String,  _
                    ByVal DOP_NUMERO As String,  _
                    ByVal DOP_GLOSAADIC As String,  _
                    ByVal DOP_AUDITORIA As String,  _
                    ByVal DOP_TIPOREC As String,  _
                    ByVal DAZ_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal Original_DOP_CODIGO As Long,  _
                    ByVal Original_DPL_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal Original_COL_CODIGO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DOP_MONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DOP_TIPO As String,  _
                    ByVal Original_DOP_NUMERO As String,  _
                    ByVal Original_DOP_GLOSAADIC As String,  _
                    ByVal Original_DOP_AUDITORIA As String,  _
                    ByVal Original_DOP_TIPOREC As String,  _
                    ByVal Original_DAZ_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal DOP_CODIGO As Long) As Integer
            If (DPL_CODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(DPL_CODIGO.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (COL_CODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(COL_CODIGO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (DOP_MONTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DOP_MONTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DOP_TIPO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DOP_TIPO,String)
            End If
            If (DOP_NUMERO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(DOP_NUMERO,String)
            End If
            If (DOP_GLOSAADIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(DOP_GLOSAADIC,String)
            End If
            If (DOP_AUDITORIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(DOP_AUDITORIA,String)
            End If
            If (DOP_TIPOREC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(DOP_TIPOREC,String)
            End If
            If (DAZ_CODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(DAZ_CODIGO.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_DOP_CODIGO,Long)
            If (Original_DPL_CODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_DPL_CODIGO.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_COL_CODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_COL_CODIGO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_DOP_MONTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_DOP_MONTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_DOP_TIPO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_DOP_TIPO,String)
            End If
            If (Original_DOP_NUMERO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_DOP_NUMERO,String)
            End If
            If (Original_DOP_GLOSAADIC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_DOP_GLOSAADIC,String)
            End If
            If (Original_DOP_AUDITORIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_DOP_AUDITORIA,String)
            End If
            If (Original_DOP_TIPOREC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_DOP_TIPOREC,String)
            End If
            If (Original_DAZ_CODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_DAZ_CODIGO.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(DOP_CODIGO,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal DPL_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal COL_CODIGO As Global.System.Nullable(Of Integer),  _
                    ByVal DOP_MONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal DOP_TIPO As String,  _
                    ByVal DOP_NUMERO As String,  _
                    ByVal DOP_GLOSAADIC As String,  _
                    ByVal DOP_AUDITORIA As String,  _
                    ByVal DOP_TIPOREC As String,  _
                    ByVal DAZ_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal Original_DOP_CODIGO As Long,  _
                    ByVal Original_DPL_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal Original_COL_CODIGO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DOP_MONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DOP_TIPO As String,  _
                    ByVal Original_DOP_NUMERO As String,  _
                    ByVal Original_DOP_GLOSAADIC As String,  _
                    ByVal Original_DOP_AUDITORIA As String,  _
                    ByVal Original_DOP_TIPOREC As String,  _
                    ByVal Original_DAZ_CODIGO As Global.System.Nullable(Of Long)) As Integer
            Return Me.Update(DPL_CODIGO, COL_CODIGO, DOP_MONTO, DOP_TIPO, DOP_NUMERO, DOP_GLOSAADIC, DOP_AUDITORIA, DOP_TIPOREC, DAZ_CODIGO, Original_DOP_CODIGO, Original_DPL_CODIGO, Original_COL_CODIGO, Original_DOP_MONTO, Original_DOP_TIPO, Original_DOP_NUMERO, Original_DOP_GLOSAADIC, Original_DOP_AUDITORIA, Original_DOP_TIPOREC, Original_DAZ_CODIGO, Original_DOP_CODIGO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TESPARTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TESPAR"
            tableMapping.ColumnMappings.Add("PAR_ACTUALIZA", "PAR_ACTUALIZA")
            tableMapping.ColumnMappings.Add("PAR_FECHAPRO", "PAR_FECHAPRO")
            tableMapping.ColumnMappings.Add("PAR_FECHAACT", "PAR_FECHAACT")
            tableMapping.ColumnMappings.Add("PAR_AUDITORIA", "PAR_AUDITORIA")
            tableMapping.ColumnMappings.Add("PAR_UNIDADPA", "PAR_UNIDADPA")
            tableMapping.ColumnMappings.Add("PAR_PLANILLA", "PAR_PLANILLA")
            tableMapping.ColumnMappings.Add("PAR_ESTADOPLA", "PAR_ESTADOPLA")
            tableMapping.ColumnMappings.Add("PAR_LIMITECIERRE", "PAR_LIMITECIERRE")
            tableMapping.ColumnMappings.Add("PAR_PLANILLAFONDO", "PAR_PLANILLAFONDO")
            tableMapping.ColumnMappings.Add("PAR_ESTADOPLAFONDO", "PAR_ESTADOPLAFONDO")
            tableMapping.ColumnMappings.Add("PAR_FECHACIERRE", "PAR_FECHACIERRE")
            tableMapping.ColumnMappings.Add("PAR_CUOTA", "PAR_CUOTA")
            tableMapping.ColumnMappings.Add("PAR_FECHAPROFON", "PAR_FECHAPROFON")
            tableMapping.ColumnMappings.Add("PAR_MANDANTE", "PAR_MANDANTE")
            tableMapping.ColumnMappings.Add("PAR_SOCIEDAD", "PAR_SOCIEDAD")
            tableMapping.ColumnMappings.Add("PAR_CAJATES", "PAR_CAJATES")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TESPAR] WHERE (((@IsNull_PAR_ACTUALIZA = 1 AND [PAR_ACTUALIZA]"& _ 
                " IS NULL) OR ([PAR_ACTUALIZA] = @Original_PAR_ACTUALIZA)) AND ((@IsNull_PAR_FECH"& _ 
                "APRO = 1 AND [PAR_FECHAPRO] IS NULL) OR ([PAR_FECHAPRO] = @Original_PAR_FECHAPRO"& _ 
                ")) AND ((@IsNull_PAR_FECHAACT = 1 AND [PAR_FECHAACT] IS NULL) OR ([PAR_FECHAACT]"& _ 
                " = @Original_PAR_FECHAACT)) AND ((@IsNull_PAR_AUDITORIA = 1 AND [PAR_AUDITORIA] "& _ 
                "IS NULL) OR ([PAR_AUDITORIA] = @Original_PAR_AUDITORIA)) AND ((@IsNull_PAR_UNIDA"& _ 
                "DPA = 1 AND [PAR_UNIDADPA] IS NULL) OR ([PAR_UNIDADPA] = @Original_PAR_UNIDADPA)"& _ 
                ") AND ([PAR_PLANILLA] = @Original_PAR_PLANILLA) AND ((@IsNull_PAR_ESTADOPLA = 1 "& _ 
                "AND [PAR_ESTADOPLA] IS NULL) OR ([PAR_ESTADOPLA] = @Original_PAR_ESTADOPLA)) AND"& _ 
                " ((@IsNull_PAR_LIMITECIERRE = 1 AND [PAR_LIMITECIERRE] IS NULL) OR ([PAR_LIMITEC"& _ 
                "IERRE] = @Original_PAR_LIMITECIERRE)) AND ((@IsNull_PAR_PLANILLAFONDO = 1 AND [P"& _ 
                "AR_PLANILLAFONDO] IS NULL) OR ([PAR_PLANILLAFONDO] = @Original_PAR_PLANILLAFONDO"& _ 
                ")) AND ((@IsNull_PAR_ESTADOPLAFONDO = 1 AND [PAR_ESTADOPLAFONDO] IS NULL) OR ([P"& _ 
                "AR_ESTADOPLAFONDO] = @Original_PAR_ESTADOPLAFONDO)) AND ((@IsNull_PAR_FECHACIERR"& _ 
                "E = 1 AND [PAR_FECHACIERRE] IS NULL) OR ([PAR_FECHACIERRE] = @Original_PAR_FECHA"& _ 
                "CIERRE)) AND ((@IsNull_PAR_CUOTA = 1 AND [PAR_CUOTA] IS NULL) OR ([PAR_CUOTA] = "& _ 
                "@Original_PAR_CUOTA)) AND ((@IsNull_PAR_FECHAPROFON = 1 AND [PAR_FECHAPROFON] IS"& _ 
                " NULL) OR ([PAR_FECHAPROFON] = @Original_PAR_FECHAPROFON)) AND ((@IsNull_PAR_MAN"& _ 
                "DANTE = 1 AND [PAR_MANDANTE] IS NULL) OR ([PAR_MANDANTE] = @Original_PAR_MANDANT"& _ 
                "E)) AND ((@IsNull_PAR_SOCIEDAD = 1 AND [PAR_SOCIEDAD] IS NULL) OR ([PAR_SOCIEDAD"& _ 
                "] = @Original_PAR_SOCIEDAD)) AND ((@IsNull_PAR_CAJATES = 1 AND [PAR_CAJATES] IS "& _ 
                "NULL) OR ([PAR_CAJATES] = @Original_PAR_CAJATES)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_ACTUALIZA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ACTUALIZA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_ACTUALIZA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ACTUALIZA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_FECHAPRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHAPRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_FECHAPRO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHAPRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_FECHAACT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHAACT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_FECHAACT", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHAACT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_AUDITORIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_AUDITORIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_AUDITORIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_AUDITORIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_UNIDADPA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_UNIDADPA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_UNIDADPA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_UNIDADPA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_PLANILLA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_PLANILLA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_ESTADOPLA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ESTADOPLA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_ESTADOPLA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ESTADOPLA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_LIMITECIERRE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_LIMITECIERRE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_LIMITECIERRE", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_LIMITECIERRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_PLANILLAFONDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_PLANILLAFONDO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_PLANILLAFONDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_PLANILLAFONDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_ESTADOPLAFONDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ESTADOPLAFONDO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_ESTADOPLAFONDO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ESTADOPLAFONDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_FECHACIERRE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHACIERRE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_FECHACIERRE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHACIERRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_CUOTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_CUOTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_CUOTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 6, "PAR_CUOTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_FECHAPROFON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHAPROFON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_FECHAPROFON", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHAPROFON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_MANDANTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_MANDANTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_MANDANTE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_MANDANTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_SOCIEDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_SOCIEDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_SOCIEDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_SOCIEDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_CAJATES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_CAJATES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_CAJATES", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_CAJATES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TESPAR] ([PAR_ACTUALIZA], [PAR_FECHAPRO], [PAR_FECHAACT], [PAR"& _ 
                "_AUDITORIA], [PAR_UNIDADPA], [PAR_PLANILLA], [PAR_ESTADOPLA], [PAR_LIMITECIERRE]"& _ 
                ", [PAR_PLANILLAFONDO], [PAR_ESTADOPLAFONDO], [PAR_FECHACIERRE], [PAR_CUOTA], [PA"& _ 
                "R_FECHAPROFON], [PAR_MANDANTE], [PAR_SOCIEDAD], [PAR_CAJATES]) VALUES (@PAR_ACTU"& _ 
                "ALIZA, @PAR_FECHAPRO, @PAR_FECHAACT, @PAR_AUDITORIA, @PAR_UNIDADPA, @PAR_PLANILL"& _ 
                "A, @PAR_ESTADOPLA, @PAR_LIMITECIERRE, @PAR_PLANILLAFONDO, @PAR_ESTADOPLAFONDO, @"& _ 
                "PAR_FECHACIERRE, @PAR_CUOTA, @PAR_FECHAPROFON, @PAR_MANDANTE, @PAR_SOCIEDAD, @PA"& _ 
                "R_CAJATES);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PAR_ACTUALIZA, PAR_FECHAPRO, PAR_FECHAACT, PAR_AUDITORIA, PA"& _ 
                "R_UNIDADPA, PAR_PLANILLA, PAR_ESTADOPLA, PAR_LIMITECIERRE, PAR_PLANILLAFONDO, PA"& _ 
                "R_ESTADOPLAFONDO, PAR_FECHACIERRE, PAR_CUOTA, PAR_FECHAPROFON, PAR_MANDANTE, PAR"& _ 
                "_SOCIEDAD, PAR_CAJATES FROM TESPAR WHERE (PAR_PLANILLA = @PAR_PLANILLA)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_ACTUALIZA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ACTUALIZA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_FECHAPRO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHAPRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_FECHAACT", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHAACT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_AUDITORIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_AUDITORIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_UNIDADPA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_UNIDADPA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_PLANILLA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_PLANILLA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_ESTADOPLA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ESTADOPLA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_LIMITECIERRE", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_LIMITECIERRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_PLANILLAFONDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_PLANILLAFONDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_ESTADOPLAFONDO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ESTADOPLAFONDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_FECHACIERRE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHACIERRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_CUOTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 6, "PAR_CUOTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_FECHAPROFON", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHAPROFON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_MANDANTE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_MANDANTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_SOCIEDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_SOCIEDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_CAJATES", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_CAJATES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TESPAR] SET [PAR_ACTUALIZA] = @PAR_ACTUALIZA, [PAR_FECHAPRO] = @PAR"& _ 
                "_FECHAPRO, [PAR_FECHAACT] = @PAR_FECHAACT, [PAR_AUDITORIA] = @PAR_AUDITORIA, [PA"& _ 
                "R_UNIDADPA] = @PAR_UNIDADPA, [PAR_PLANILLA] = @PAR_PLANILLA, [PAR_ESTADOPLA] = @"& _ 
                "PAR_ESTADOPLA, [PAR_LIMITECIERRE] = @PAR_LIMITECIERRE, [PAR_PLANILLAFONDO] = @PA"& _ 
                "R_PLANILLAFONDO, [PAR_ESTADOPLAFONDO] = @PAR_ESTADOPLAFONDO, [PAR_FECHACIERRE] ="& _ 
                " @PAR_FECHACIERRE, [PAR_CUOTA] = @PAR_CUOTA, [PAR_FECHAPROFON] = @PAR_FECHAPROFO"& _ 
                "N, [PAR_MANDANTE] = @PAR_MANDANTE, [PAR_SOCIEDAD] = @PAR_SOCIEDAD, [PAR_CAJATES]"& _ 
                " = @PAR_CAJATES WHERE (((@IsNull_PAR_ACTUALIZA = 1 AND [PAR_ACTUALIZA] IS NULL) "& _ 
                "OR ([PAR_ACTUALIZA] = @Original_PAR_ACTUALIZA)) AND ((@IsNull_PAR_FECHAPRO = 1 A"& _ 
                "ND [PAR_FECHAPRO] IS NULL) OR ([PAR_FECHAPRO] = @Original_PAR_FECHAPRO)) AND ((@"& _ 
                "IsNull_PAR_FECHAACT = 1 AND [PAR_FECHAACT] IS NULL) OR ([PAR_FECHAACT] = @Origin"& _ 
                "al_PAR_FECHAACT)) AND ((@IsNull_PAR_AUDITORIA = 1 AND [PAR_AUDITORIA] IS NULL) O"& _ 
                "R ([PAR_AUDITORIA] = @Original_PAR_AUDITORIA)) AND ((@IsNull_PAR_UNIDADPA = 1 AN"& _ 
                "D [PAR_UNIDADPA] IS NULL) OR ([PAR_UNIDADPA] = @Original_PAR_UNIDADPA)) AND ([PA"& _ 
                "R_PLANILLA] = @Original_PAR_PLANILLA) AND ((@IsNull_PAR_ESTADOPLA = 1 AND [PAR_E"& _ 
                "STADOPLA] IS NULL) OR ([PAR_ESTADOPLA] = @Original_PAR_ESTADOPLA)) AND ((@IsNull"& _ 
                "_PAR_LIMITECIERRE = 1 AND [PAR_LIMITECIERRE] IS NULL) OR ([PAR_LIMITECIERRE] = @"& _ 
                "Original_PAR_LIMITECIERRE)) AND ((@IsNull_PAR_PLANILLAFONDO = 1 AND [PAR_PLANILL"& _ 
                "AFONDO] IS NULL) OR ([PAR_PLANILLAFONDO] = @Original_PAR_PLANILLAFONDO)) AND ((@"& _ 
                "IsNull_PAR_ESTADOPLAFONDO = 1 AND [PAR_ESTADOPLAFONDO] IS NULL) OR ([PAR_ESTADOP"& _ 
                "LAFONDO] = @Original_PAR_ESTADOPLAFONDO)) AND ((@IsNull_PAR_FECHACIERRE = 1 AND "& _ 
                "[PAR_FECHACIERRE] IS NULL) OR ([PAR_FECHACIERRE] = @Original_PAR_FECHACIERRE)) A"& _ 
                "ND ((@IsNull_PAR_CUOTA = 1 AND [PAR_CUOTA] IS NULL) OR ([PAR_CUOTA] = @Original_"& _ 
                "PAR_CUOTA)) AND ((@IsNull_PAR_FECHAPROFON = 1 AND [PAR_FECHAPROFON] IS NULL) OR "& _ 
                "([PAR_FECHAPROFON] = @Original_PAR_FECHAPROFON)) AND ((@IsNull_PAR_MANDANTE = 1 "& _ 
                "AND [PAR_MANDANTE] IS NULL) OR ([PAR_MANDANTE] = @Original_PAR_MANDANTE)) AND (("& _ 
                "@IsNull_PAR_SOCIEDAD = 1 AND [PAR_SOCIEDAD] IS NULL) OR ([PAR_SOCIEDAD] = @Origi"& _ 
                "nal_PAR_SOCIEDAD)) AND ((@IsNull_PAR_CAJATES = 1 AND [PAR_CAJATES] IS NULL) OR ("& _ 
                "[PAR_CAJATES] = @Original_PAR_CAJATES)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT PAR_ACTUALIZA, PAR_FECHAPRO, P"& _ 
                "AR_FECHAACT, PAR_AUDITORIA, PAR_UNIDADPA, PAR_PLANILLA, PAR_ESTADOPLA, PAR_LIMIT"& _ 
                "ECIERRE, PAR_PLANILLAFONDO, PAR_ESTADOPLAFONDO, PAR_FECHACIERRE, PAR_CUOTA, PAR_"& _ 
                "FECHAPROFON, PAR_MANDANTE, PAR_SOCIEDAD, PAR_CAJATES FROM TESPAR WHERE (PAR_PLAN"& _ 
                "ILLA = @PAR_PLANILLA)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_ACTUALIZA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ACTUALIZA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_FECHAPRO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHAPRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_FECHAACT", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHAACT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_AUDITORIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_AUDITORIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_UNIDADPA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_UNIDADPA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_PLANILLA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_PLANILLA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_ESTADOPLA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ESTADOPLA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_LIMITECIERRE", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_LIMITECIERRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_PLANILLAFONDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_PLANILLAFONDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_ESTADOPLAFONDO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ESTADOPLAFONDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_FECHACIERRE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHACIERRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_CUOTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 6, "PAR_CUOTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_FECHAPROFON", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHAPROFON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_MANDANTE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_MANDANTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_SOCIEDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_SOCIEDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAR_CAJATES", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_CAJATES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_ACTUALIZA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ACTUALIZA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_ACTUALIZA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ACTUALIZA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_FECHAPRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHAPRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_FECHAPRO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHAPRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_FECHAACT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHAACT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_FECHAACT", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHAACT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_AUDITORIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_AUDITORIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_AUDITORIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_AUDITORIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_UNIDADPA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_UNIDADPA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_UNIDADPA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_UNIDADPA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_PLANILLA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_PLANILLA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_ESTADOPLA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ESTADOPLA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_ESTADOPLA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ESTADOPLA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_LIMITECIERRE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_LIMITECIERRE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_LIMITECIERRE", Global.System.Data.SqlDbType.Real, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_LIMITECIERRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_PLANILLAFONDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_PLANILLAFONDO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_PLANILLAFONDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_PLANILLAFONDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_ESTADOPLAFONDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ESTADOPLAFONDO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_ESTADOPLAFONDO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_ESTADOPLAFONDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_FECHACIERRE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHACIERRE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_FECHACIERRE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHACIERRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_CUOTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_CUOTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_CUOTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 6, "PAR_CUOTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_FECHAPROFON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHAPROFON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_FECHAPROFON", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_FECHAPROFON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_MANDANTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_MANDANTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_MANDANTE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_MANDANTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_SOCIEDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_SOCIEDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_SOCIEDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_SOCIEDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAR_CAJATES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_CAJATES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAR_CAJATES", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAR_CAJATES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT PAR_ACTUALIZA, PAR_FECHAPRO, PAR_FECHAACT, PAR_AUDITORIA, PAR_UNIDADPA, PA"& _ 
                "R_PLANILLA, PAR_ESTADOPLA, PAR_LIMITECIERRE, PAR_PLANILLAFONDO, PAR_ESTADOPLAFON"& _ 
                "DO, PAR_FECHACIERRE, PAR_CUOTA, PAR_FECHAPROFON, PAR_MANDANTE, PAR_SOCIEDAD, PAR"& _ 
                "_CAJATES FROM dbo.TESPAR"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsWALCUA.TESPARDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsWALCUA.TESPARDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsWALCUA.TESPARDataTable = New dsWALCUA.TESPARDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsWALCUA.TESPARDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsWALCUA) As Integer
            Return Me.Adapter.Update(dataSet, "TESPAR")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_PAR_ACTUALIZA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PAR_FECHAPRO As Global.System.Nullable(Of Date),  _
                    ByVal Original_PAR_FECHAACT As Global.System.Nullable(Of Date),  _
                    ByVal Original_PAR_AUDITORIA As String,  _
                    ByVal Original_PAR_UNIDADPA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PAR_PLANILLA As Integer,  _
                    ByVal Original_PAR_ESTADOPLA As String,  _
                    ByVal Original_PAR_LIMITECIERRE As Global.System.Nullable(Of Single),  _
                    ByVal Original_PAR_PLANILLAFONDO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PAR_ESTADOPLAFONDO As String,  _
                    ByVal Original_PAR_FECHACIERRE As Global.System.Nullable(Of Date),  _
                    ByVal Original_PAR_CUOTA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PAR_FECHAPROFON As Global.System.Nullable(Of Date),  _
                    ByVal Original_PAR_MANDANTE As String,  _
                    ByVal Original_PAR_SOCIEDAD As String,  _
                    ByVal Original_PAR_CAJATES As String) As Integer
            If (Original_PAR_ACTUALIZA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_PAR_ACTUALIZA.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Original_PAR_FECHAPRO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_PAR_FECHAPRO.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_PAR_FECHAACT.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_PAR_FECHAACT.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_PAR_AUDITORIA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_PAR_AUDITORIA,String)
            End If
            If (Original_PAR_UNIDADPA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_PAR_UNIDADPA.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_PAR_PLANILLA,Integer)
            If (Original_PAR_ESTADOPLA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_PAR_ESTADOPLA,String)
            End If
            If (Original_PAR_LIMITECIERRE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_PAR_LIMITECIERRE.Value,Single)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_PAR_PLANILLAFONDO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_PAR_PLANILLAFONDO.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_PAR_ESTADOPLAFONDO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_PAR_ESTADOPLAFONDO,String)
            End If
            If (Original_PAR_FECHACIERRE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_PAR_FECHACIERRE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_PAR_CUOTA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_PAR_CUOTA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_PAR_FECHAPROFON.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_PAR_FECHAPROFON.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_PAR_MANDANTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_PAR_MANDANTE,String)
            End If
            If (Original_PAR_SOCIEDAD Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_PAR_SOCIEDAD,String)
            End If
            If (Original_PAR_CAJATES Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_PAR_CAJATES,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal PAR_ACTUALIZA As Global.System.Nullable(Of Boolean),  _
                    ByVal PAR_FECHAPRO As Global.System.Nullable(Of Date),  _
                    ByVal PAR_FECHAACT As Global.System.Nullable(Of Date),  _
                    ByVal PAR_AUDITORIA As String,  _
                    ByVal PAR_UNIDADPA As Global.System.Nullable(Of Integer),  _
                    ByVal PAR_PLANILLA As Integer,  _
                    ByVal PAR_ESTADOPLA As String,  _
                    ByVal PAR_LIMITECIERRE As Global.System.Nullable(Of Single),  _
                    ByVal PAR_PLANILLAFONDO As Global.System.Nullable(Of Integer),  _
                    ByVal PAR_ESTADOPLAFONDO As String,  _
                    ByVal PAR_FECHACIERRE As Global.System.Nullable(Of Date),  _
                    ByVal PAR_CUOTA As Global.System.Nullable(Of Decimal),  _
                    ByVal PAR_FECHAPROFON As Global.System.Nullable(Of Date),  _
                    ByVal PAR_MANDANTE As String,  _
                    ByVal PAR_SOCIEDAD As String,  _
                    ByVal PAR_CAJATES As String) As Integer
            If (PAR_ACTUALIZA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(PAR_ACTUALIZA.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (PAR_FECHAPRO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(PAR_FECHAPRO.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PAR_FECHAACT.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(PAR_FECHAACT.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PAR_AUDITORIA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PAR_AUDITORIA,String)
            End If
            If (PAR_UNIDADPA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PAR_UNIDADPA.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(5).Value = CType(PAR_PLANILLA,Integer)
            If (PAR_ESTADOPLA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(PAR_ESTADOPLA,String)
            End If
            If (PAR_LIMITECIERRE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(PAR_LIMITECIERRE.Value,Single)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (PAR_PLANILLAFONDO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(PAR_PLANILLAFONDO.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (PAR_ESTADOPLAFONDO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(PAR_ESTADOPLAFONDO,String)
            End If
            If (PAR_FECHACIERRE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(PAR_FECHACIERRE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (PAR_CUOTA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(PAR_CUOTA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (PAR_FECHAPROFON.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(PAR_FECHAPROFON.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (PAR_MANDANTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(PAR_MANDANTE,String)
            End If
            If (PAR_SOCIEDAD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(PAR_SOCIEDAD,String)
            End If
            If (PAR_CAJATES Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(PAR_CAJATES,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal PAR_ACTUALIZA As Global.System.Nullable(Of Boolean),  _
                    ByVal PAR_FECHAPRO As Global.System.Nullable(Of Date),  _
                    ByVal PAR_FECHAACT As Global.System.Nullable(Of Date),  _
                    ByVal PAR_AUDITORIA As String,  _
                    ByVal PAR_UNIDADPA As Global.System.Nullable(Of Integer),  _
                    ByVal PAR_PLANILLA As Integer,  _
                    ByVal PAR_ESTADOPLA As String,  _
                    ByVal PAR_LIMITECIERRE As Global.System.Nullable(Of Single),  _
                    ByVal PAR_PLANILLAFONDO As Global.System.Nullable(Of Integer),  _
                    ByVal PAR_ESTADOPLAFONDO As String,  _
                    ByVal PAR_FECHACIERRE As Global.System.Nullable(Of Date),  _
                    ByVal PAR_CUOTA As Global.System.Nullable(Of Decimal),  _
                    ByVal PAR_FECHAPROFON As Global.System.Nullable(Of Date),  _
                    ByVal PAR_MANDANTE As String,  _
                    ByVal PAR_SOCIEDAD As String,  _
                    ByVal PAR_CAJATES As String,  _
                    ByVal Original_PAR_ACTUALIZA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PAR_FECHAPRO As Global.System.Nullable(Of Date),  _
                    ByVal Original_PAR_FECHAACT As Global.System.Nullable(Of Date),  _
                    ByVal Original_PAR_AUDITORIA As String,  _
                    ByVal Original_PAR_UNIDADPA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PAR_PLANILLA As Integer,  _
                    ByVal Original_PAR_ESTADOPLA As String,  _
                    ByVal Original_PAR_LIMITECIERRE As Global.System.Nullable(Of Single),  _
                    ByVal Original_PAR_PLANILLAFONDO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PAR_ESTADOPLAFONDO As String,  _
                    ByVal Original_PAR_FECHACIERRE As Global.System.Nullable(Of Date),  _
                    ByVal Original_PAR_CUOTA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PAR_FECHAPROFON As Global.System.Nullable(Of Date),  _
                    ByVal Original_PAR_MANDANTE As String,  _
                    ByVal Original_PAR_SOCIEDAD As String,  _
                    ByVal Original_PAR_CAJATES As String) As Integer
            If (PAR_ACTUALIZA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(PAR_ACTUALIZA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (PAR_FECHAPRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(PAR_FECHAPRO.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (PAR_FECHAACT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(PAR_FECHAACT.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (PAR_AUDITORIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PAR_AUDITORIA,String)
            End If
            If (PAR_UNIDADPA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PAR_UNIDADPA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PAR_PLANILLA,Integer)
            If (PAR_ESTADOPLA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(PAR_ESTADOPLA,String)
            End If
            If (PAR_LIMITECIERRE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(PAR_LIMITECIERRE.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (PAR_PLANILLAFONDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(PAR_PLANILLAFONDO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (PAR_ESTADOPLAFONDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(PAR_ESTADOPLAFONDO,String)
            End If
            If (PAR_FECHACIERRE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(PAR_FECHACIERRE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (PAR_CUOTA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(PAR_CUOTA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (PAR_FECHAPROFON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(PAR_FECHAPROFON.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (PAR_MANDANTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(PAR_MANDANTE,String)
            End If
            If (PAR_SOCIEDAD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(PAR_SOCIEDAD,String)
            End If
            If (PAR_CAJATES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(PAR_CAJATES,String)
            End If
            If (Original_PAR_ACTUALIZA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_PAR_ACTUALIZA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_PAR_FECHAPRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_PAR_FECHAPRO.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_PAR_FECHAACT.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_PAR_FECHAACT.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_PAR_AUDITORIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_PAR_AUDITORIA,String)
            End If
            If (Original_PAR_UNIDADPA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_PAR_UNIDADPA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_PAR_PLANILLA,Integer)
            If (Original_PAR_ESTADOPLA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_PAR_ESTADOPLA,String)
            End If
            If (Original_PAR_LIMITECIERRE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_PAR_LIMITECIERRE.Value,Single)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_PAR_PLANILLAFONDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_PAR_PLANILLAFONDO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_PAR_ESTADOPLAFONDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_PAR_ESTADOPLAFONDO,String)
            End If
            If (Original_PAR_FECHACIERRE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_PAR_FECHACIERRE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_PAR_CUOTA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_PAR_CUOTA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_PAR_FECHAPROFON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_PAR_FECHAPROFON.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_PAR_MANDANTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_PAR_MANDANTE,String)
            End If
            If (Original_PAR_SOCIEDAD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_PAR_SOCIEDAD,String)
            End If
            If (Original_PAR_CAJATES Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_PAR_CAJATES,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal PAR_ACTUALIZA As Global.System.Nullable(Of Boolean),  _
                    ByVal PAR_FECHAPRO As Global.System.Nullable(Of Date),  _
                    ByVal PAR_FECHAACT As Global.System.Nullable(Of Date),  _
                    ByVal PAR_AUDITORIA As String,  _
                    ByVal PAR_UNIDADPA As Global.System.Nullable(Of Integer),  _
                    ByVal PAR_ESTADOPLA As String,  _
                    ByVal PAR_LIMITECIERRE As Global.System.Nullable(Of Single),  _
                    ByVal PAR_PLANILLAFONDO As Global.System.Nullable(Of Integer),  _
                    ByVal PAR_ESTADOPLAFONDO As String,  _
                    ByVal PAR_FECHACIERRE As Global.System.Nullable(Of Date),  _
                    ByVal PAR_CUOTA As Global.System.Nullable(Of Decimal),  _
                    ByVal PAR_FECHAPROFON As Global.System.Nullable(Of Date),  _
                    ByVal PAR_MANDANTE As String,  _
                    ByVal PAR_SOCIEDAD As String,  _
                    ByVal PAR_CAJATES As String,  _
                    ByVal Original_PAR_ACTUALIZA As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_PAR_FECHAPRO As Global.System.Nullable(Of Date),  _
                    ByVal Original_PAR_FECHAACT As Global.System.Nullable(Of Date),  _
                    ByVal Original_PAR_AUDITORIA As String,  _
                    ByVal Original_PAR_UNIDADPA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PAR_PLANILLA As Integer,  _
                    ByVal Original_PAR_ESTADOPLA As String,  _
                    ByVal Original_PAR_LIMITECIERRE As Global.System.Nullable(Of Single),  _
                    ByVal Original_PAR_PLANILLAFONDO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_PAR_ESTADOPLAFONDO As String,  _
                    ByVal Original_PAR_FECHACIERRE As Global.System.Nullable(Of Date),  _
                    ByVal Original_PAR_CUOTA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PAR_FECHAPROFON As Global.System.Nullable(Of Date),  _
                    ByVal Original_PAR_MANDANTE As String,  _
                    ByVal Original_PAR_SOCIEDAD As String,  _
                    ByVal Original_PAR_CAJATES As String) As Integer
            Return Me.Update(PAR_ACTUALIZA, PAR_FECHAPRO, PAR_FECHAACT, PAR_AUDITORIA, PAR_UNIDADPA, Original_PAR_PLANILLA, PAR_ESTADOPLA, PAR_LIMITECIERRE, PAR_PLANILLAFONDO, PAR_ESTADOPLAFONDO, PAR_FECHACIERRE, PAR_CUOTA, PAR_FECHAPROFON, PAR_MANDANTE, PAR_SOCIEDAD, PAR_CAJATES, Original_PAR_ACTUALIZA, Original_PAR_FECHAPRO, Original_PAR_FECHAACT, Original_PAR_AUDITORIA, Original_PAR_UNIDADPA, Original_PAR_PLANILLA, Original_PAR_ESTADOPLA, Original_PAR_LIMITECIERRE, Original_PAR_PLANILLAFONDO, Original_PAR_ESTADOPLAFONDO, Original_PAR_FECHACIERRE, Original_PAR_CUOTA, Original_PAR_FECHAPROFON, Original_PAR_MANDANTE, Original_PAR_SOCIEDAD, Original_PAR_CAJATES)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TESDAZTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TESDAZ"
            tableMapping.ColumnMappings.Add("DAZ_CODIGO", "DAZ_CODIGO")
            tableMapping.ColumnMappings.Add("DAZ_MANDANTE", "DAZ_MANDANTE")
            tableMapping.ColumnMappings.Add("DAZ_SOCIEDAD", "DAZ_SOCIEDAD")
            tableMapping.ColumnMappings.Add("DAZ_DOCCONT", "DAZ_DOCCONT")
            tableMapping.ColumnMappings.Add("DAZ_EJERCICIO", "DAZ_EJERCICIO")
            tableMapping.ColumnMappings.Add("DAZ_CLASEDOC", "DAZ_CLASEDOC")
            tableMapping.ColumnMappings.Add("DAZ_CUENTABANCO", "DAZ_CUENTABANCO")
            tableMapping.ColumnMappings.Add("DAZ_MONTO", "DAZ_MONTO")
            tableMapping.ColumnMappings.Add("DAZ_MONTOMON", "DAZ_MONTOMON")
            tableMapping.ColumnMappings.Add("DAZ_MONEDA", "DAZ_MONEDA")
            tableMapping.ColumnMappings.Add("DAZ_CONCEPTO", "DAZ_CONCEPTO")
            tableMapping.ColumnMappings.Add("DAZ_POSICION", "DAZ_POSICION")
            tableMapping.ColumnMappings.Add("DAZ_CAJA", "DAZ_CAJA")
            tableMapping.ColumnMappings.Add("DAZ_FECHADOC", "DAZ_FECHADOC")
            tableMapping.ColumnMappings.Add("DAZ_TEXTOPOS", "DAZ_TEXTOPOS")
            tableMapping.ColumnMappings.Add("DAZ_FECHAz", "DAZ_FECHAz")
            tableMapping.ColumnMappings.Add("DAZ_MEDIOPAGO", "DAZ_MEDIOPAGO")
            tableMapping.ColumnMappings.Add("DAZ_RETENCION", "DAZ_RETENCION")
            tableMapping.ColumnMappings.Add("DAZ_FECHADEP", "DAZ_FECHADEP")
            tableMapping.ColumnMappings.Add("DAZ_DIAS", "DAZ_DIAS")
            tableMapping.ColumnMappings.Add("DAZ_UNIDAD", "DAZ_UNIDAD")
            tableMapping.ColumnMappings.Add("DAZ_VIA", "DAZ_VIA")
            tableMapping.ColumnMappings.Add("DAZ_CLAVEBANCO", "DAZ_CLAVEBANCO")
            tableMapping.ColumnMappings.Add("DAZ_ESTATUS", "DAZ_ESTATUS")
            tableMapping.ColumnMappings.Add("DAZ_ENVIADOBANCO", "DAZ_ENVIADOBANCO")
            tableMapping.ColumnMappings.Add("DAZ_ANULADO", "DAZ_ANULADO")
            tableMapping.ColumnMappings.Add("DAZ_FECHAANU", "DAZ_FECHAANU")
            tableMapping.ColumnMappings.Add("DAZ_ESTADO", "DAZ_ESTADO")
            tableMapping.ColumnMappings.Add("PLA_CODIGO", "PLA_CODIGO")
            tableMapping.ColumnMappings.Add("DAZ_FECHADIS", "DAZ_FECHADIS")
            tableMapping.ColumnMappings.Add("DAZ_GLOSA", "DAZ_GLOSA")
            tableMapping.ColumnMappings.Add("DAZ_COLUMNA", "DAZ_COLUMNA")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[TESDAZ] WHERE (([DAZ_CODIGO] = @Original_DAZ_CODIGO) AND ((@Is"& _ 
                "Null_DAZ_MANDANTE = 1 AND [DAZ_MANDANTE] IS NULL) OR ([DAZ_MANDANTE] = @Original"& _ 
                "_DAZ_MANDANTE)) AND ((@IsNull_DAZ_SOCIEDAD = 1 AND [DAZ_SOCIEDAD] IS NULL) OR (["& _ 
                "DAZ_SOCIEDAD] = @Original_DAZ_SOCIEDAD)) AND ((@IsNull_DAZ_DOCCONT = 1 AND [DAZ_"& _ 
                "DOCCONT] IS NULL) OR ([DAZ_DOCCONT] = @Original_DAZ_DOCCONT)) AND ((@IsNull_DAZ_"& _ 
                "EJERCICIO = 1 AND [DAZ_EJERCICIO] IS NULL) OR ([DAZ_EJERCICIO] = @Original_DAZ_E"& _ 
                "JERCICIO)) AND ((@IsNull_DAZ_CLASEDOC = 1 AND [DAZ_CLASEDOC] IS NULL) OR ([DAZ_C"& _ 
                "LASEDOC] = @Original_DAZ_CLASEDOC)) AND ((@IsNull_DAZ_CUENTABANCO = 1 AND [DAZ_C"& _ 
                "UENTABANCO] IS NULL) OR ([DAZ_CUENTABANCO] = @Original_DAZ_CUENTABANCO)) AND ((@"& _ 
                "IsNull_DAZ_MONTO = 1 AND [DAZ_MONTO] IS NULL) OR ([DAZ_MONTO] = @Original_DAZ_MO"& _ 
                "NTO)) AND ((@IsNull_DAZ_MONTOMON = 1 AND [DAZ_MONTOMON] IS NULL) OR ([DAZ_MONTOM"& _ 
                "ON] = @Original_DAZ_MONTOMON)) AND ((@IsNull_DAZ_MONEDA = 1 AND [DAZ_MONEDA] IS "& _ 
                "NULL) OR ([DAZ_MONEDA] = @Original_DAZ_MONEDA)) AND ((@IsNull_DAZ_CONCEPTO = 1 A"& _ 
                "ND [DAZ_CONCEPTO] IS NULL) OR ([DAZ_CONCEPTO] = @Original_DAZ_CONCEPTO)) AND ((@"& _ 
                "IsNull_DAZ_POSICION = 1 AND [DAZ_POSICION] IS NULL) OR ([DAZ_POSICION] = @Origin"& _ 
                "al_DAZ_POSICION)) AND ((@IsNull_DAZ_CAJA = 1 AND [DAZ_CAJA] IS NULL) OR ([DAZ_CA"& _ 
                "JA] = @Original_DAZ_CAJA)) AND ((@IsNull_DAZ_FECHADOC = 1 AND [DAZ_FECHADOC] IS "& _ 
                "NULL) OR ([DAZ_FECHADOC] = @Original_DAZ_FECHADOC)) AND ((@IsNull_DAZ_TEXTOPOS ="& _ 
                " 1 AND [DAZ_TEXTOPOS] IS NULL) OR ([DAZ_TEXTOPOS] = @Original_DAZ_TEXTOPOS)) AND"& _ 
                " ((@IsNull_DAZ_FECHAz = 1 AND [DAZ_FECHAz] IS NULL) OR ([DAZ_FECHAz] = @Original"& _ 
                "_DAZ_FECHAz)) AND ((@IsNull_DAZ_MEDIOPAGO = 1 AND [DAZ_MEDIOPAGO] IS NULL) OR (["& _ 
                "DAZ_MEDIOPAGO] = @Original_DAZ_MEDIOPAGO)) AND ((@IsNull_DAZ_RETENCION = 1 AND ["& _ 
                "DAZ_RETENCION] IS NULL) OR ([DAZ_RETENCION] = @Original_DAZ_RETENCION)) AND ((@I"& _ 
                "sNull_DAZ_FECHADEP = 1 AND [DAZ_FECHADEP] IS NULL) OR ([DAZ_FECHADEP] = @Origina"& _ 
                "l_DAZ_FECHADEP)) AND ((@IsNull_DAZ_DIAS = 1 AND [DAZ_DIAS] IS NULL) OR ([DAZ_DIA"& _ 
                "S] = @Original_DAZ_DIAS)) AND ((@IsNull_DAZ_UNIDAD = 1 AND [DAZ_UNIDAD] IS NULL)"& _ 
                " OR ([DAZ_UNIDAD] = @Original_DAZ_UNIDAD)) AND ((@IsNull_DAZ_VIA = 1 AND [DAZ_VI"& _ 
                "A] IS NULL) OR ([DAZ_VIA] = @Original_DAZ_VIA)) AND ((@IsNull_DAZ_CLAVEBANCO = 1"& _ 
                " AND [DAZ_CLAVEBANCO] IS NULL) OR ([DAZ_CLAVEBANCO] = @Original_DAZ_CLAVEBANCO))"& _ 
                " AND ((@IsNull_DAZ_ESTATUS = 1 AND [DAZ_ESTATUS] IS NULL) OR ([DAZ_ESTATUS] = @O"& _ 
                "riginal_DAZ_ESTATUS)) AND ((@IsNull_DAZ_ENVIADOBANCO = 1 AND [DAZ_ENVIADOBANCO] "& _ 
                "IS NULL) OR ([DAZ_ENVIADOBANCO] = @Original_DAZ_ENVIADOBANCO)) AND ((@IsNull_DAZ"& _ 
                "_ANULADO = 1 AND [DAZ_ANULADO] IS NULL) OR ([DAZ_ANULADO] = @Original_DAZ_ANULAD"& _ 
                "O)) AND ((@IsNull_DAZ_FECHAANU = 1 AND [DAZ_FECHAANU] IS NULL) OR ([DAZ_FECHAANU"& _ 
                "] = @Original_DAZ_FECHAANU)) AND ((@IsNull_DAZ_ESTADO = 1 AND [DAZ_ESTADO] IS NU"& _ 
                "LL) OR ([DAZ_ESTADO] = @Original_DAZ_ESTADO)) AND ((@IsNull_PLA_CODIGO = 1 AND ["& _ 
                "PLA_CODIGO] IS NULL) OR ([PLA_CODIGO] = @Original_PLA_CODIGO)) AND ((@IsNull_DAZ"& _ 
                "_FECHADIS = 1 AND [DAZ_FECHADIS] IS NULL) OR ([DAZ_FECHADIS] = @Original_DAZ_FEC"& _ 
                "HADIS)) AND ((@IsNull_DAZ_GLOSA = 1 AND [DAZ_GLOSA] IS NULL) OR ([DAZ_GLOSA] = @"& _ 
                "Original_DAZ_GLOSA)) AND ((@IsNull_DAZ_COLUMNA = 1 AND [DAZ_COLUMNA] IS NULL) OR"& _ 
                " ([DAZ_COLUMNA] = @Original_DAZ_COLUMNA)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_MANDANTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MANDANTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_MANDANTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DAZ_MANDANTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_SOCIEDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_SOCIEDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_SOCIEDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_SOCIEDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_DOCCONT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DOCCONT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_DOCCONT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DOCCONT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_EJERCICIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_EJERCICIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_EJERCICIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DAZ_EJERCICIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CLASEDOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLASEDOC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CLASEDOC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLASEDOC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CUENTABANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CUENTABANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_MONTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MONTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_MONTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DAZ_MONTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_MONTOMON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MONTOMON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_MONTOMON", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DAZ_MONTOMON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_MONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_MONEDA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CONCEPTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CONCEPTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CONCEPTO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CONCEPTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_POSICION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_POSICION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_POSICION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_POSICION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CAJA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CAJA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_FECHADOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADOC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_FECHADOC", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADOC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_TEXTOPOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_TEXTOPOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_TEXTOPOS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_TEXTOPOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_FECHAz", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAz", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_FECHAz", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAz", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_MEDIOPAGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MEDIOPAGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_MEDIOPAGO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MEDIOPAGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_RETENCION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_RETENCION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_RETENCION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_RETENCION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_FECHADEP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADEP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_FECHADEP", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADEP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_DIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DIAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_DIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_UNIDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_UNIDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_UNIDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_UNIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_VIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_VIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_VIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_VIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CLAVEBANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLAVEBANCO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CLAVEBANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLAVEBANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_ESTATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_ESTATUS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_ENVIADOBANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ENVIADOBANCO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_ENVIADOBANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ENVIADOBANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_ANULADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ANULADO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_ANULADO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ANULADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_FECHAANU", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAANU", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_FECHAANU", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAANU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTADO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_ESTADO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PLA_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PLA_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_FECHADIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_FECHADIS", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_GLOSA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_GLOSA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_GLOSA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_GLOSA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_COLUMNA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_COLUMNA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_COLUMNA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_COLUMNA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[TESDAZ] ([DAZ_MANDANTE], [DAZ_SOCIEDAD], [DAZ_DOCCONT], [DAZ_E"& _ 
                "JERCICIO], [DAZ_CLASEDOC], [DAZ_CUENTABANCO], [DAZ_MONTO], [DAZ_MONTOMON], [DAZ_"& _ 
                "MONEDA], [DAZ_CONCEPTO], [DAZ_POSICION], [DAZ_CAJA], [DAZ_FECHADOC], [DAZ_TEXTOP"& _ 
                "OS], [DAZ_FECHAz], [DAZ_MEDIOPAGO], [DAZ_RETENCION], [DAZ_FECHADEP], [DAZ_DIAS],"& _ 
                " [DAZ_UNIDAD], [DAZ_VIA], [DAZ_CLAVEBANCO], [DAZ_ESTATUS], [DAZ_ENVIADOBANCO], ["& _ 
                "DAZ_ANULADO], [DAZ_FECHAANU], [DAZ_ESTADO], [PLA_CODIGO], [DAZ_FECHADIS], [DAZ_G"& _ 
                "LOSA], [DAZ_COLUMNA]) VALUES (@DAZ_MANDANTE, @DAZ_SOCIEDAD, @DAZ_DOCCONT, @DAZ_E"& _ 
                "JERCICIO, @DAZ_CLASEDOC, @DAZ_CUENTABANCO, @DAZ_MONTO, @DAZ_MONTOMON, @DAZ_MONED"& _ 
                "A, @DAZ_CONCEPTO, @DAZ_POSICION, @DAZ_CAJA, @DAZ_FECHADOC, @DAZ_TEXTOPOS, @DAZ_F"& _ 
                "ECHAz, @DAZ_MEDIOPAGO, @DAZ_RETENCION, @DAZ_FECHADEP, @DAZ_DIAS, @DAZ_UNIDAD, @D"& _ 
                "AZ_VIA, @DAZ_CLAVEBANCO, @DAZ_ESTATUS, @DAZ_ENVIADOBANCO, @DAZ_ANULADO, @DAZ_FEC"& _ 
                "HAANU, @DAZ_ESTADO, @PLA_CODIGO, @DAZ_FECHADIS, @DAZ_GLOSA, @DAZ_COLUMNA);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELE"& _ 
                "CT DAZ_CODIGO, DAZ_MANDANTE, DAZ_SOCIEDAD, DAZ_DOCCONT, DAZ_EJERCICIO, DAZ_CLASE"& _ 
                "DOC, DAZ_CUENTABANCO, DAZ_MONTO, DAZ_MONTOMON, DAZ_MONEDA, DAZ_CONCEPTO, DAZ_POS"& _ 
                "ICION, DAZ_CAJA, DAZ_FECHADOC, DAZ_TEXTOPOS, DAZ_FECHAz, DAZ_MEDIOPAGO, DAZ_RETE"& _ 
                "NCION, DAZ_FECHADEP, DAZ_DIAS, DAZ_UNIDAD, DAZ_VIA, DAZ_CLAVEBANCO, DAZ_ESTATUS,"& _ 
                " DAZ_ENVIADOBANCO, DAZ_ANULADO, DAZ_FECHAANU, DAZ_ESTADO, PLA_CODIGO, DAZ_FECHAD"& _ 
                "IS, DAZ_GLOSA, DAZ_COLUMNA FROM TESDAZ WHERE (DAZ_CODIGO = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_MANDANTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DAZ_MANDANTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_SOCIEDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_SOCIEDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_DOCCONT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DOCCONT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_EJERCICIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DAZ_EJERCICIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CLASEDOC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLASEDOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CUENTABANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_MONTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DAZ_MONTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_MONTOMON", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DAZ_MONTOMON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_MONEDA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CONCEPTO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CONCEPTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_POSICION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_POSICION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CAJA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_FECHADOC", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_TEXTOPOS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_TEXTOPOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_FECHAz", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAz", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_MEDIOPAGO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MEDIOPAGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_RETENCION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_RETENCION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_FECHADEP", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADEP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_DIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_UNIDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_UNIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_VIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_VIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CLAVEBANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLAVEBANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_ESTATUS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_ENVIADOBANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ENVIADOBANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_ANULADO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ANULADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_FECHAANU", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAANU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_ESTADO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLA_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_FECHADIS", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_GLOSA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_GLOSA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_COLUMNA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_COLUMNA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[TESDAZ] SET [DAZ_MANDANTE] = @DAZ_MANDANTE, [DAZ_SOCIEDAD] = @DAZ_S"& _ 
                "OCIEDAD, [DAZ_DOCCONT] = @DAZ_DOCCONT, [DAZ_EJERCICIO] = @DAZ_EJERCICIO, [DAZ_CL"& _ 
                "ASEDOC] = @DAZ_CLASEDOC, [DAZ_CUENTABANCO] = @DAZ_CUENTABANCO, [DAZ_MONTO] = @DA"& _ 
                "Z_MONTO, [DAZ_MONTOMON] = @DAZ_MONTOMON, [DAZ_MONEDA] = @DAZ_MONEDA, [DAZ_CONCEP"& _ 
                "TO] = @DAZ_CONCEPTO, [DAZ_POSICION] = @DAZ_POSICION, [DAZ_CAJA] = @DAZ_CAJA, [DA"& _ 
                "Z_FECHADOC] = @DAZ_FECHADOC, [DAZ_TEXTOPOS] = @DAZ_TEXTOPOS, [DAZ_FECHAz] = @DAZ"& _ 
                "_FECHAz, [DAZ_MEDIOPAGO] = @DAZ_MEDIOPAGO, [DAZ_RETENCION] = @DAZ_RETENCION, [DA"& _ 
                "Z_FECHADEP] = @DAZ_FECHADEP, [DAZ_DIAS] = @DAZ_DIAS, [DAZ_UNIDAD] = @DAZ_UNIDAD,"& _ 
                " [DAZ_VIA] = @DAZ_VIA, [DAZ_CLAVEBANCO] = @DAZ_CLAVEBANCO, [DAZ_ESTATUS] = @DAZ_"& _ 
                "ESTATUS, [DAZ_ENVIADOBANCO] = @DAZ_ENVIADOBANCO, [DAZ_ANULADO] = @DAZ_ANULADO, ["& _ 
                "DAZ_FECHAANU] = @DAZ_FECHAANU, [DAZ_ESTADO] = @DAZ_ESTADO, [PLA_CODIGO] = @PLA_C"& _ 
                "ODIGO, [DAZ_FECHADIS] = @DAZ_FECHADIS, [DAZ_GLOSA] = @DAZ_GLOSA, [DAZ_COLUMNA] ="& _ 
                " @DAZ_COLUMNA WHERE (([DAZ_CODIGO] = @Original_DAZ_CODIGO) AND ((@IsNull_DAZ_MAN"& _ 
                "DANTE = 1 AND [DAZ_MANDANTE] IS NULL) OR ([DAZ_MANDANTE] = @Original_DAZ_MANDANT"& _ 
                "E)) AND ((@IsNull_DAZ_SOCIEDAD = 1 AND [DAZ_SOCIEDAD] IS NULL) OR ([DAZ_SOCIEDAD"& _ 
                "] = @Original_DAZ_SOCIEDAD)) AND ((@IsNull_DAZ_DOCCONT = 1 AND [DAZ_DOCCONT] IS "& _ 
                "NULL) OR ([DAZ_DOCCONT] = @Original_DAZ_DOCCONT)) AND ((@IsNull_DAZ_EJERCICIO = "& _ 
                "1 AND [DAZ_EJERCICIO] IS NULL) OR ([DAZ_EJERCICIO] = @Original_DAZ_EJERCICIO)) A"& _ 
                "ND ((@IsNull_DAZ_CLASEDOC = 1 AND [DAZ_CLASEDOC] IS NULL) OR ([DAZ_CLASEDOC] = @"& _ 
                "Original_DAZ_CLASEDOC)) AND ((@IsNull_DAZ_CUENTABANCO = 1 AND [DAZ_CUENTABANCO] "& _ 
                "IS NULL) OR ([DAZ_CUENTABANCO] = @Original_DAZ_CUENTABANCO)) AND ((@IsNull_DAZ_M"& _ 
                "ONTO = 1 AND [DAZ_MONTO] IS NULL) OR ([DAZ_MONTO] = @Original_DAZ_MONTO)) AND (("& _ 
                "@IsNull_DAZ_MONTOMON = 1 AND [DAZ_MONTOMON] IS NULL) OR ([DAZ_MONTOMON] = @Origi"& _ 
                "nal_DAZ_MONTOMON)) AND ((@IsNull_DAZ_MONEDA = 1 AND [DAZ_MONEDA] IS NULL) OR ([D"& _ 
                "AZ_MONEDA] = @Original_DAZ_MONEDA)) AND ((@IsNull_DAZ_CONCEPTO = 1 AND [DAZ_CONC"& _ 
                "EPTO] IS NULL) OR ([DAZ_CONCEPTO] = @Original_DAZ_CONCEPTO)) AND ((@IsNull_DAZ_P"& _ 
                "OSICION = 1 AND [DAZ_POSICION] IS NULL) OR ([DAZ_POSICION] = @Original_DAZ_POSIC"& _ 
                "ION)) AND ((@IsNull_DAZ_CAJA = 1 AND [DAZ_CAJA] IS NULL) OR ([DAZ_CAJA] = @Origi"& _ 
                "nal_DAZ_CAJA)) AND ((@IsNull_DAZ_FECHADOC = 1 AND [DAZ_FECHADOC] IS NULL) OR ([D"& _ 
                "AZ_FECHADOC] = @Original_DAZ_FECHADOC)) AND ((@IsNull_DAZ_TEXTOPOS = 1 AND [DAZ_"& _ 
                "TEXTOPOS] IS NULL) OR ([DAZ_TEXTOPOS] = @Original_DAZ_TEXTOPOS)) AND ((@IsNull_D"& _ 
                "AZ_FECHAz = 1 AND [DAZ_FECHAz] IS NULL) OR ([DAZ_FECHAz] = @Original_DAZ_FECHAz)"& _ 
                ") AND ((@IsNull_DAZ_MEDIOPAGO = 1 AND [DAZ_MEDIOPAGO] IS NULL) OR ([DAZ_MEDIOPAG"& _ 
                "O] = @Original_DAZ_MEDIOPAGO)) AND ((@IsNull_DAZ_RETENCION = 1 AND [DAZ_RETENCIO"& _ 
                "N] IS NULL) OR ([DAZ_RETENCION] = @Original_DAZ_RETENCION)) AND ((@IsNull_DAZ_FE"& _ 
                "CHADEP = 1 AND [DAZ_FECHADEP] IS NULL) OR ([DAZ_FECHADEP] = @Original_DAZ_FECHAD"& _ 
                "EP)) AND ((@IsNull_DAZ_DIAS = 1 AND [DAZ_DIAS] IS NULL) OR ([DAZ_DIAS] = @Origin"& _ 
                "al_DAZ_DIAS)) AND ((@IsNull_DAZ_UNIDAD = 1 AND [DAZ_UNIDAD] IS NULL) OR ([DAZ_UN"& _ 
                "IDAD] = @Original_DAZ_UNIDAD)) AND ((@IsNull_DAZ_VIA = 1 AND [DAZ_VIA] IS NULL) "& _ 
                "OR ([DAZ_VIA] = @Original_DAZ_VIA)) AND ((@IsNull_DAZ_CLAVEBANCO = 1 AND [DAZ_CL"& _ 
                "AVEBANCO] IS NULL) OR ([DAZ_CLAVEBANCO] = @Original_DAZ_CLAVEBANCO)) AND ((@IsNu"& _ 
                "ll_DAZ_ESTATUS = 1 AND [DAZ_ESTATUS] IS NULL) OR ([DAZ_ESTATUS] = @Original_DAZ_"& _ 
                "ESTATUS)) AND ((@IsNull_DAZ_ENVIADOBANCO = 1 AND [DAZ_ENVIADOBANCO] IS NULL) OR "& _ 
                "([DAZ_ENVIADOBANCO] = @Original_DAZ_ENVIADOBANCO)) AND ((@IsNull_DAZ_ANULADO = 1"& _ 
                " AND [DAZ_ANULADO] IS NULL) OR ([DAZ_ANULADO] = @Original_DAZ_ANULADO)) AND ((@I"& _ 
                "sNull_DAZ_FECHAANU = 1 AND [DAZ_FECHAANU] IS NULL) OR ([DAZ_FECHAANU] = @Origina"& _ 
                "l_DAZ_FECHAANU)) AND ((@IsNull_DAZ_ESTADO = 1 AND [DAZ_ESTADO] IS NULL) OR ([DAZ"& _ 
                "_ESTADO] = @Original_DAZ_ESTADO)) AND ((@IsNull_PLA_CODIGO = 1 AND [PLA_CODIGO] "& _ 
                "IS NULL) OR ([PLA_CODIGO] = @Original_PLA_CODIGO)) AND ((@IsNull_DAZ_FECHADIS = "& _ 
                "1 AND [DAZ_FECHADIS] IS NULL) OR ([DAZ_FECHADIS] = @Original_DAZ_FECHADIS)) AND "& _ 
                "((@IsNull_DAZ_GLOSA = 1 AND [DAZ_GLOSA] IS NULL) OR ([DAZ_GLOSA] = @Original_DAZ"& _ 
                "_GLOSA)) AND ((@IsNull_DAZ_COLUMNA = 1 AND [DAZ_COLUMNA] IS NULL) OR ([DAZ_COLUM"& _ 
                "NA] = @Original_DAZ_COLUMNA)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DAZ_CODIGO, DAZ_MANDANTE, DAZ_SOCIEDAD, "& _ 
                "DAZ_DOCCONT, DAZ_EJERCICIO, DAZ_CLASEDOC, DAZ_CUENTABANCO, DAZ_MONTO, DAZ_MONTOM"& _ 
                "ON, DAZ_MONEDA, DAZ_CONCEPTO, DAZ_POSICION, DAZ_CAJA, DAZ_FECHADOC, DAZ_TEXTOPOS"& _ 
                ", DAZ_FECHAz, DAZ_MEDIOPAGO, DAZ_RETENCION, DAZ_FECHADEP, DAZ_DIAS, DAZ_UNIDAD, "& _ 
                "DAZ_VIA, DAZ_CLAVEBANCO, DAZ_ESTATUS, DAZ_ENVIADOBANCO, DAZ_ANULADO, DAZ_FECHAAN"& _ 
                "U, DAZ_ESTADO, PLA_CODIGO, DAZ_FECHADIS, DAZ_GLOSA, DAZ_COLUMNA FROM TESDAZ WHER"& _ 
                "E (DAZ_CODIGO = @DAZ_CODIGO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_MANDANTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DAZ_MANDANTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_SOCIEDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_SOCIEDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_DOCCONT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DOCCONT", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_EJERCICIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DAZ_EJERCICIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CLASEDOC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLASEDOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CUENTABANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_MONTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DAZ_MONTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_MONTOMON", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DAZ_MONTOMON", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_MONEDA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CONCEPTO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CONCEPTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_POSICION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_POSICION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CAJA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_FECHADOC", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_TEXTOPOS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_TEXTOPOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_FECHAz", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAz", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_MEDIOPAGO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MEDIOPAGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_RETENCION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_RETENCION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_FECHADEP", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADEP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_DIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DIAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_UNIDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_UNIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_VIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_VIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CLAVEBANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLAVEBANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_ESTATUS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTATUS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_ENVIADOBANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ENVIADOBANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_ANULADO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ANULADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_FECHAANU", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAANU", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_ESTADO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PLA_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_FECHADIS", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADIS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_GLOSA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_GLOSA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_COLUMNA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_COLUMNA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_MANDANTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MANDANTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_MANDANTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DAZ_MANDANTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_SOCIEDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_SOCIEDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_SOCIEDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_SOCIEDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_DOCCONT", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DOCCONT", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_DOCCONT", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DOCCONT", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_EJERCICIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_EJERCICIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_EJERCICIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "DAZ_EJERCICIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CLASEDOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLASEDOC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CLASEDOC", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLASEDOC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CUENTABANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CUENTABANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_MONTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MONTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_MONTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DAZ_MONTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_MONTOMON", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MONTOMON", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_MONTOMON", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "DAZ_MONTOMON", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_MONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_MONEDA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CONCEPTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CONCEPTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CONCEPTO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CONCEPTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_POSICION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_POSICION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_POSICION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_POSICION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CAJA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CAJA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_FECHADOC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADOC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_FECHADOC", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADOC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_TEXTOPOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_TEXTOPOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_TEXTOPOS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_TEXTOPOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_FECHAz", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAz", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_FECHAz", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAz", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_MEDIOPAGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MEDIOPAGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_MEDIOPAGO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_MEDIOPAGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_RETENCION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_RETENCION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_RETENCION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_RETENCION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_FECHADEP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADEP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_FECHADEP", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADEP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_DIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DIAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_DIAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_DIAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_UNIDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_UNIDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_UNIDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_UNIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_VIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_VIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_VIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_VIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_CLAVEBANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLAVEBANCO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_CLAVEBANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CLAVEBANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_ESTATUS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTATUS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_ESTATUS", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTATUS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_ENVIADOBANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ENVIADOBANCO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_ENVIADOBANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ENVIADOBANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_ANULADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ANULADO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_ANULADO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ANULADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_FECHAANU", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAANU", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_FECHAANU", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHAANU", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTADO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_ESTADO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_ESTADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PLA_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PLA_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_FECHADIS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADIS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_FECHADIS", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADIS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_GLOSA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_GLOSA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_GLOSA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_GLOSA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DAZ_COLUMNA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_COLUMNA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DAZ_COLUMNA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_COLUMNA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DAZ_CODIGO", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(9) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DAZ_CODIGO, DAZ_MANDANTE, DAZ_SOCIEDAD, DAZ_DOCCONT, DAZ_EJERCICIO, DAZ_CL"& _ 
                "ASEDOC, DAZ_CUENTABANCO, DAZ_MONTO, DAZ_MONTOMON, DAZ_MONEDA, DAZ_CONCEPTO, DAZ_"& _ 
                "POSICION, DAZ_CAJA, DAZ_FECHADOC, DAZ_TEXTOPOS, DAZ_FECHAz, DAZ_MEDIOPAGO, DAZ_R"& _ 
                "ETENCION, DAZ_FECHADEP, DAZ_DIAS, DAZ_UNIDAD, DAZ_VIA, DAZ_CLAVEBANCO, DAZ_ESTAT"& _ 
                "US, DAZ_ENVIADOBANCO, DAZ_ANULADO, DAZ_FECHAANU, DAZ_ESTADO, PLA_CODIGO, DAZ_FEC"& _ 
                "HADIS, DAZ_GLOSA, DAZ_COLUMNA FROM dbo.TESDAZ"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT DAZ_CODIGO, DAZ_MANDANTE, DAZ_SOCIEDAD, DAZ_DOCCONT, DAZ_EJERCICIO, DAZ_CL"& _ 
                "ASEDOC, DAZ_CUENTABANCO, DAZ_MONTO, DAZ_MONTOMON, DAZ_MONEDA, DAZ_CONCEPTO, DAZ_"& _ 
                "POSICION, DAZ_CAJA, DAZ_FECHADOC, DAZ_TEXTOPOS, DAZ_FECHAz, DAZ_MEDIOPAGO, DAZ_R"& _ 
                "ETENCION, DAZ_FECHADEP, DAZ_DIAS, DAZ_UNIDAD, DAZ_VIA, DAZ_CLAVEBANCO, DAZ_ESTAT"& _ 
                "US, DAZ_ENVIADOBANCO, DAZ_ANULADO, DAZ_FECHAANU, DAZ_ESTADO, PLA_CODIGO, DAZ_FEC"& _ 
                "HADIS, DAZ_GLOSA, DAZ_COLUMNA FROM dbo.TESDAZ"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where  (DAZ_CUENTABANCO = @Cuenta"& _ 
                "SAP2) AND (daz_clasedoc='ZR') and substring(daz_textopos,1,4)='ZCHD' and substri"& _ 
                "ng(daz_cuentabanco,7,1)='1'  and (pla_codigo in (select pla_codigo from tespar) "& _ 
                "or pla_codigo is null) and daz_fechadoc in ( select par_fechapro from tespar) an"& _ 
                "d daz_anulado<>'S'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CuentaSAP2", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT DAZ_CODIGO, DAZ_MANDANTE, DAZ_SOCIEDAD, DAZ_DOCCONT, DAZ_EJERCICIO, DAZ_CL"& _ 
                "ASEDOC, DAZ_CUENTABANCO, DAZ_MONTO, DAZ_MONTOMON, DAZ_MONEDA, DAZ_CONCEPTO, DAZ_"& _ 
                "POSICION, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  DAZ_CAJA, DAZ_FECHADOC, DAZ_TEXTOPOS, DAZ_FECHAz, "& _ 
                "DAZ_MEDIOPAGO, DAZ_RETENCION, DAZ_FECHADEP, DAZ_DIAS, DAZ_UNIDAD, DAZ_VIA, DAZ_C"& _ 
                "LAVEBANCO, DAZ_ESTATUS, DAZ_ENVIADOBANCO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  DAZ_ANULADO, DAZ_F"& _ 
                "ECHAANU, DAZ_ESTADO, PLA_CODIGO, DAZ_FECHADIS, DAZ_GLOSA, DAZ_COLUMNA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     "& _ 
                "TESDAZ"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  (DAZ_CUENTABANCO = @CuentaSAP2) AND (DAZ_CLASEDOC = 'OC') AND (DA"& _ 
                "Z_CONCEPTO = 'EG') AND (DAZ_FECHADOC = CONVERT(datetime, @Fecha, 103)) OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "             (DAZ_CUENTABANCO = @CuentaSAP2) AND (DAZ_CLASEDOC = 'KZ') AND (DAZ_"& _ 
                "CONCEPTO = 'EG') AND (DAZ_FECHADOC = CONVERT(datetime, @Fecha, 103)) AND (SUBSTR"& _ 
                "ING(DAZ_TEXTOPOS, 1, 4) = 'T330')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY DAZ_CAJA"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CuentaSAP2", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fecha", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        DAZ_CODIGO, DAZ_MANDANTE, DAZ_SOCIEDAD, DAZ_DOCCONT, DAZ_EJERCICIO,"& _ 
                " DAZ_CLASEDOC, DAZ_CUENTABANCO, DAZ_MONTO, DAZ_MONTOMON, DAZ_MONEDA, DAZ_CONCEPT"& _ 
                "O, DAZ_POSICION, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DAZ_CAJA, DAZ_FECHADOC, DAZ_TEXTOPOS"& _ 
                ", DAZ_FECHAz, DAZ_MEDIOPAGO, DAZ_RETENCION, DAZ_FECHADEP, DAZ_DIAS, DAZ_UNIDAD, "& _ 
                "DAZ_VIA, DAZ_CLAVEBANCO, DAZ_ESTATUS, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DAZ_ENVIADOBANC"& _ 
                "O, DAZ_ANULADO, DAZ_FECHAANU, DAZ_ESTADO, PLA_CODIGO, DAZ_FECHADIS, DAZ_GLOSA, D"& _ 
                "AZ_COLUMNA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            TESDAZ"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (DAZ_CUENTABANCO = @CuentaSAP2)"& _ 
                " AND (DAZ_CLASEDOC = 'OP') AND (DAZ_CONCEPTO = 'EG' ) AND (PLA_CODIGO IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                       (SELECT        PAR_PLANILLA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            "& _ 
                "   FROM            TESPAR) OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PLA_CODIGO IS NULL) AND "& _ 
                "(DAZ_FECHADOC = CONVERT(datetime, @Fecha, 103)) AND (DAZ_ANULADO <> 'S')"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CuentaSAP2", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fecha", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT DAZ_CODIGO, DAZ_MANDANTE, DAZ_SOCIEDAD, DAZ_DOCCONT, DAZ_EJERCICIO, DAZ_CL"& _ 
                "ASEDOC, DAZ_CUENTABANCO, DAZ_MONTO, DAZ_MONTOMON, DAZ_MONEDA, DAZ_CONCEPTO, DAZ_"& _ 
                "POSICION, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  DAZ_CAJA, DAZ_FECHADOC, DAZ_TEXTOPOS, DAZ_FECHAz, "& _ 
                "DAZ_MEDIOPAGO, DAZ_RETENCION, DAZ_FECHADEP, DAZ_DIAS, DAZ_UNIDAD, DAZ_VIA, DAZ_C"& _ 
                "LAVEBANCO, DAZ_ESTATUS, DAZ_ENVIADOBANCO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  DAZ_ANULADO, DAZ_F"& _ 
                "ECHAANU, DAZ_ESTADO, PLA_CODIGO, DAZ_FECHADIS, DAZ_GLOSA, DAZ_COLUMNA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     "& _ 
                "TESDAZ"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  (DAZ_CUENTABANCO = @CuentaSAP2) AND (DAZ_CLASEDOC = 'KZ') AND (SU"& _ 
                "BSTRING(DAZ_TEXTOPOS, 1, 4) <> 'T710') AND (SUBSTRING(DAZ_TEXTOPOS, 1, 4) <> 'T3"& _ 
                "30') AND (DAZ_FECHADOC = CONVERT(datetime, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  @Fecha, 103))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"OR"& _ 
                "DER BY DAZ_CAJA"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CuentaSAP2", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fecha", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT DAZ_CODIGO, DAZ_MANDANTE, DAZ_SOCIEDAD, DAZ_DOCCONT, DAZ_EJERCICIO, DAZ_CL"& _ 
                "ASEDOC, DAZ_CUENTABANCO, DAZ_MONTO, DAZ_MONTOMON, DAZ_MONEDA, DAZ_CONCEPTO, DAZ_"& _ 
                "POSICION, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  DAZ_CAJA, DAZ_FECHADOC, DAZ_TEXTOPOS, DAZ_FECHAz, "& _ 
                "DAZ_MEDIOPAGO, DAZ_RETENCION, DAZ_FECHADEP, DAZ_DIAS, DAZ_UNIDAD, DAZ_VIA, DAZ_C"& _ 
                "LAVEBANCO, DAZ_ESTATUS, DAZ_ENVIADOBANCO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  DAZ_ANULADO, DAZ_F"& _ 
                "ECHAANU, DAZ_ESTADO, PLA_CODIGO, DAZ_FECHADIS, DAZ_GLOSA, DAZ_COLUMNA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     "& _ 
                "TESDAZ"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  (DAZ_CUENTABANCO = @CuentaSAP2) AND (DAZ_CLASEDOC = 'KZ') AND (SU"& _ 
                "BSTRING(DAZ_TEXTOPOS, 1, 4) <> 'T710') AND (SUBSTRING(DAZ_TEXTOPOS, 1, 4) <> 'T3"& _ 
                "30') AND (DAZ_FECHADOC = CONVERT(datetime, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  @Fecha, 103)) OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  (DAZ_CUENTABANCO = @CuentaSAP2) AND (DAZ_CLASEDOC = 'PO') AND"& _ 
                " (DAZ_FECHADOC = CONVERT(datetime, @Fecha, 103)) AND (DAZ_COLUMNA = 15)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER B"& _ 
                "Y DAZ_CAJA"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CuentaSAP2", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fecha", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT DAZ_CODIGO, DAZ_MANDANTE, DAZ_SOCIEDAD, DAZ_DOCCONT, DAZ_EJERCICIO, DAZ_CL"& _ 
                "ASEDOC, DAZ_CUENTABANCO, DAZ_MONTO, DAZ_MONTOMON, DAZ_MONEDA, DAZ_CONCEPTO, DAZ_"& _ 
                "POSICION, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  DAZ_CAJA, DAZ_FECHADOC, DAZ_TEXTOPOS, DAZ_FECHAz, "& _ 
                "DAZ_MEDIOPAGO, DAZ_RETENCION, DAZ_FECHADEP, DAZ_DIAS, DAZ_UNIDAD, DAZ_VIA, DAZ_C"& _ 
                "LAVEBANCO, DAZ_ESTATUS, DAZ_ENVIADOBANCO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  DAZ_ANULADO, DAZ_F"& _ 
                "ECHAANU, DAZ_ESTADO, PLA_CODIGO, DAZ_FECHADIS, DAZ_GLOSA, DAZ_COLUMNA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     "& _ 
                "TESDAZ"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  (DAZ_CUENTABANCO = @CuentaSAP2) AND (DAZ_CLASEDOC = 'KZ') AND (SU"& _ 
                "BSTRING(DAZ_TEXTOPOS, 1, 4) <> 'T710') AND (SUBSTRING(DAZ_TEXTOPOS, 1, 4) <> 'T3"& _ 
                "30') AND (DAZ_FECHADOC = CONVERT(datetime, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  @Fecha, 103)) OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  (DAZ_CUENTABANCO = @CuentaSAP2) AND (DAZ_CLASEDOC = 'PO') AND"& _ 
                " (DAZ_FECHADOC = CONVERT(datetime, @Fecha, 103)) AND (DAZ_COLUMNA = 15)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER B"& _ 
                "Y DAZ_CAJA"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CuentaSAP2", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fecha", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT DAZ_CODIGO, DAZ_MANDANTE, DAZ_SOCIEDAD, DAZ_DOCCONT, DAZ_EJERCICIO, DAZ_CL"& _ 
                "ASEDOC, DAZ_CUENTABANCO, DAZ_MONTO, DAZ_MONTOMON, DAZ_MONEDA, DAZ_CONCEPTO, DAZ_"& _ 
                "POSICION, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  DAZ_CAJA, DAZ_FECHADOC, DAZ_TEXTOPOS, DAZ_FECHAz, "& _ 
                "DAZ_MEDIOPAGO, DAZ_RETENCION, DAZ_FECHADEP, DAZ_DIAS, DAZ_UNIDAD, DAZ_VIA, DAZ_C"& _ 
                "LAVEBANCO, DAZ_ESTATUS, DAZ_ENVIADOBANCO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  DAZ_ANULADO, DAZ_F"& _ 
                "ECHAANU, DAZ_ESTADO, PLA_CODIGO, DAZ_FECHADIS, DAZ_GLOSA, DAZ_COLUMNA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     "& _ 
                "TESDAZ"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  (DAZ_CUENTABANCO = @CuentaSAP) AND (DAZ_ANULADO <> 'S') AND (DAZ_"& _ 
                "CONCEPTO = 'DE') AND (PLA_CODIGO IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      (SELECT PAR_PLANILLA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       FROM      TESPAR)) OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  (DAZ_CUENTABANC"& _ 
                "O = @CuentaSAP) AND (DAZ_ANULADO <> 'S') AND (DAZ_CONCEPTO = 'DE') AND (PLA_CODI"& _ 
                "GO IS NULL) AND (DAZ_FECHADEP > CONVERT(datetime, @Fecha, 103)) OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "      (DAZ_CUENTABANCO = @CuentaSAP) AND (DAZ_ANULADO <> 'S') AND (DAZ_CONCEPTO "& _ 
                "= 'CA') AND (DAZ_CLASEDOC = 'PO') AND (DAZ_FECHADOC = CONVERT(datetime, @Fecha, "& _ 
                "103)) OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  (DAZ_CUENTABANCO = @CuentaSAP) AND (DAZ_ANULADO <> '"& _ 
                "S') AND (DAZ_CLASEDOC = 'SB') AND (DAZ_FECHADOC = CONVERT(datetime, @Fecha, 103)"& _ 
                ") OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  (DAZ_CUENTABANCO = @CuentaSAP) AND (DAZ_ANULADO <> 'S') "& _ 
                "AND (DAZ_FECHADOC = CONVERT(datetime, @Fecha, 103)) AND (DAZ_CAJA = '709') AND ("& _ 
                "SUBSTRING(DAZ_GLOSA, 1, 4) = '0873')"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY DAZ_CAJA"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CuentaSAP", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fecha", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADEP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT DAZ_CODIGO, DAZ_MANDANTE, DAZ_SOCIEDAD, DAZ_DOCCONT, DAZ_EJERCICIO, DAZ_CL"& _ 
                "ASEDOC, DAZ_CUENTABANCO, DAZ_MONTO, DAZ_MONTOMON, DAZ_MONEDA, DAZ_CONCEPTO, DAZ_"& _ 
                "POSICION, DAZ_CAJA, DAZ_FECHADOC, DAZ_TEXTOPOS, DAZ_FECHAz, DAZ_MEDIOPAGO, DAZ_R"& _ 
                "ETENCION, DAZ_FECHADEP, DAZ_DIAS, DAZ_UNIDAD, DAZ_VIA, DAZ_CLAVEBANCO, DAZ_ESTAT"& _ 
                "US, DAZ_ENVIADOBANCO, DAZ_ANULADO, DAZ_FECHAANU, DAZ_ESTADO, PLA_CODIGO, DAZ_FEC"& _ 
                "HADIS, DAZ_GLOSA, DAZ_COLUMNA FROM dbo.TESDAZ"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where   (DAZ_CUENTABANCO = @Cuent"& _ 
                "aSAP) and (daz_clasedoc='FO' or daz_clasedoc='FY') and substring(daz_glosa,1,4)="& _ 
                "'0543' and (pla_codigo in (select pla_codigo from tespar) or pla_codigo is null)"& _ 
                " and daz_fechadoc in ( select par_fechapro from tespar) and daz_caja='709' and d"& _ 
                "az_anulado<>'S' "
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CuentaSAP", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(9).Connection = Me.Connection
            Me._commandCollection(9).CommandText = "SELECT DAZ_CODIGO, DAZ_MANDANTE, DAZ_SOCIEDAD, DAZ_DOCCONT, DAZ_EJERCICIO, DAZ_CL"& _ 
                "ASEDOC, DAZ_CUENTABANCO, DAZ_MONTO, DAZ_MONTOMON, DAZ_MONEDA, DAZ_CONCEPTO, DAZ_"& _ 
                "POSICION, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  DAZ_CAJA, DAZ_FECHADOC, DAZ_TEXTOPOS, DAZ_FECHAz, "& _ 
                "DAZ_MEDIOPAGO, DAZ_RETENCION, DAZ_FECHADEP, DAZ_DIAS, DAZ_UNIDAD, DAZ_VIA, DAZ_C"& _ 
                "LAVEBANCO, DAZ_ESTATUS, DAZ_ENVIADOBANCO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  DAZ_ANULADO, DAZ_F"& _ 
                "ECHAANU, DAZ_ESTADO, PLA_CODIGO, DAZ_FECHADIS, DAZ_GLOSA, DAZ_COLUMNA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     "& _ 
                "TESDAZ"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  (DAZ_CUENTABANCO = @CuentaSAP2) AND (DAZ_CLASEDOC = 'KZ') AND (SU"& _ 
                "BSTRING(DAZ_TEXTOPOS, 1, 4) = 'T710') AND (DAZ_FECHADOC = CONVERT(datetime, @Fec"& _ 
                "ha, 103))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY DAZ_CAJA"
            Me._commandCollection(9).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CuentaSAP2", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CUENTABANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fecha", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_FECHADOC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsWALCUA.TESDAZDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsWALCUA.TESDAZDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsWALCUA.TESDAZDataTable = New dsWALCUA.TESDAZDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByChequesDev(ByVal dataTable As dsWALCUA.TESDAZDataTable, ByVal CuentaSAP2 As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (CuentaSAP2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CuentaSAP2,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByChequesDev(ByVal CuentaSAP2 As String) As dsWALCUA.TESDAZDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (CuentaSAP2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CuentaSAP2,String)
            End If
            Dim dataTable As dsWALCUA.TESDAZDataTable = New dsWALCUA.TESDAZDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByColocaciones(ByVal dataTable As dsWALCUA.TESDAZDataTable, ByVal CuentaSAP2 As String, ByVal Fecha As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (CuentaSAP2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CuentaSAP2,String)
            End If
            If (Fecha.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByColocaciones(ByVal CuentaSAP2 As String, ByVal Fecha As Global.System.Nullable(Of Date)) As dsWALCUA.TESDAZDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (CuentaSAP2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CuentaSAP2,String)
            End If
            If (Fecha.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsWALCUA.TESDAZDataTable = New dsWALCUA.TESDAZDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByOtrosCargos(ByVal dataTable As dsWALCUA.TESDAZDataTable, ByVal CuentaSAP2 As String, ByVal Fecha As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (CuentaSAP2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CuentaSAP2,String)
            End If
            If (Fecha.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByOtrosCargos(ByVal CuentaSAP2 As String, ByVal Fecha As Global.System.Nullable(Of Date)) As dsWALCUA.TESDAZDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (CuentaSAP2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CuentaSAP2,String)
            End If
            If (Fecha.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsWALCUA.TESDAZDataTable = New dsWALCUA.TESDAZDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByOtrosIngresos(ByVal dataTable As dsWALCUA.TESDAZDataTable, ByVal CuentaSAP2 As String, ByVal Fecha As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (CuentaSAP2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CuentaSAP2,String)
            End If
            If (Fecha.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByOtrosIngresos(ByVal CuentaSAP2 As String, ByVal Fecha As Global.System.Nullable(Of Date)) As dsWALCUA.TESDAZDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (CuentaSAP2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CuentaSAP2,String)
            End If
            If (Fecha.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsWALCUA.TESDAZDataTable = New dsWALCUA.TESDAZDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByPagoCheques2(ByVal dataTable As dsWALCUA.TESDAZDataTable, ByVal CuentaSAP2 As String, ByVal Fecha As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (CuentaSAP2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CuentaSAP2,String)
            End If
            If (Fecha.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByPagoCheques2(ByVal CuentaSAP2 As String, ByVal Fecha As Global.System.Nullable(Of Date)) As dsWALCUA.TESDAZDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (CuentaSAP2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CuentaSAP2,String)
            End If
            If (Fecha.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsWALCUA.TESDAZDataTable = New dsWALCUA.TESDAZDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByPagosCheques(ByVal dataTable As dsWALCUA.TESDAZDataTable, ByVal CuentaSAP2 As String, ByVal Fecha As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            If (CuentaSAP2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CuentaSAP2,String)
            End If
            If (Fecha.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByPagosCheques(ByVal CuentaSAP2 As String, ByVal Fecha As Global.System.Nullable(Of Date)) As dsWALCUA.TESDAZDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            If (CuentaSAP2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CuentaSAP2,String)
            End If
            If (Fecha.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsWALCUA.TESDAZDataTable = New dsWALCUA.TESDAZDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByRecaudacion(ByVal dataTable As dsWALCUA.TESDAZDataTable, ByVal CuentaSAP As String, ByVal Fecha As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            If (CuentaSAP Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CuentaSAP,String)
            End If
            If (Fecha.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByRecaudacion(ByVal CuentaSAP As String, ByVal Fecha As Global.System.Nullable(Of Date)) As dsWALCUA.TESDAZDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            If (CuentaSAP Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CuentaSAP,String)
            End If
            If (Fecha.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsWALCUA.TESDAZDataTable = New dsWALCUA.TESDAZDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByRescates(ByVal dataTable As dsWALCUA.TESDAZDataTable, ByVal CuentaSAP As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(8)
            If (CuentaSAP Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CuentaSAP,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByRescates(ByVal CuentaSAP As String) As dsWALCUA.TESDAZDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(8)
            If (CuentaSAP Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CuentaSAP,String)
            End If
            Dim dataTable As dsWALCUA.TESDAZDataTable = New dsWALCUA.TESDAZDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByTransferenciasNeg(ByVal dataTable As dsWALCUA.TESDAZDataTable, ByVal CuentaSAP2 As String, ByVal Fecha As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(9)
            If (CuentaSAP2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CuentaSAP2,String)
            End If
            If (Fecha.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByTransferenciasNeg(ByVal CuentaSAP2 As String, ByVal Fecha As Global.System.Nullable(Of Date)) As dsWALCUA.TESDAZDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(9)
            If (CuentaSAP2 Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(CuentaSAP2,String)
            End If
            If (Fecha.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsWALCUA.TESDAZDataTable = New dsWALCUA.TESDAZDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsWALCUA.TESDAZDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsWALCUA) As Integer
            Return Me.Adapter.Update(dataSet, "TESDAZ")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_DAZ_CODIGO As Long,  _
                    ByVal Original_DAZ_MANDANTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_SOCIEDAD As String,  _
                    ByVal Original_DAZ_DOCCONT As String,  _
                    ByVal Original_DAZ_EJERCICIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_CLASEDOC As String,  _
                    ByVal Original_DAZ_CUENTABANCO As String,  _
                    ByVal Original_DAZ_MONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_MONTOMON As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_MONEDA As String,  _
                    ByVal Original_DAZ_CONCEPTO As String,  _
                    ByVal Original_DAZ_POSICION As String,  _
                    ByVal Original_DAZ_CAJA As String,  _
                    ByVal Original_DAZ_FECHADOC As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_TEXTOPOS As String,  _
                    ByVal Original_DAZ_FECHAz As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_MEDIOPAGO As String,  _
                    ByVal Original_DAZ_RETENCION As String,  _
                    ByVal Original_DAZ_FECHADEP As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_DIAS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DAZ_UNIDAD As String,  _
                    ByVal Original_DAZ_VIA As String,  _
                    ByVal Original_DAZ_CLAVEBANCO As String,  _
                    ByVal Original_DAZ_ESTATUS As String,  _
                    ByVal Original_DAZ_ENVIADOBANCO As String,  _
                    ByVal Original_DAZ_ANULADO As String,  _
                    ByVal Original_DAZ_FECHAANU As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_ESTADO As String,  _
                    ByVal Original_PLA_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal Original_DAZ_FECHADIS As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_GLOSA As String,  _
                    ByVal Original_DAZ_COLUMNA As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_DAZ_CODIGO,Long)
            If (Original_DAZ_MANDANTE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_DAZ_MANDANTE.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_SOCIEDAD Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_DAZ_SOCIEDAD,String)
            End If
            If (Original_DAZ_DOCCONT Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_DAZ_DOCCONT,String)
            End If
            If (Original_DAZ_EJERCICIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_DAZ_EJERCICIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_CLASEDOC Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_DAZ_CLASEDOC,String)
            End If
            If (Original_DAZ_CUENTABANCO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_DAZ_CUENTABANCO,String)
            End If
            If (Original_DAZ_MONTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_DAZ_MONTO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_MONTOMON.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_DAZ_MONTOMON.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_MONEDA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_DAZ_MONEDA,String)
            End If
            If (Original_DAZ_CONCEPTO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_DAZ_CONCEPTO,String)
            End If
            If (Original_DAZ_POSICION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_DAZ_POSICION,String)
            End If
            If (Original_DAZ_CAJA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_DAZ_CAJA,String)
            End If
            If (Original_DAZ_FECHADOC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_DAZ_FECHADOC.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_TEXTOPOS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_DAZ_TEXTOPOS,String)
            End If
            If (Original_DAZ_FECHAz.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_DAZ_FECHAz.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_MEDIOPAGO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_DAZ_MEDIOPAGO,String)
            End If
            If (Original_DAZ_RETENCION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_DAZ_RETENCION,String)
            End If
            If (Original_DAZ_FECHADEP.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_DAZ_FECHADEP.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_DIAS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_DAZ_DIAS.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_UNIDAD Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_DAZ_UNIDAD,String)
            End If
            If (Original_DAZ_VIA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_DAZ_VIA,String)
            End If
            If (Original_DAZ_CLAVEBANCO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_DAZ_CLAVEBANCO,String)
            End If
            If (Original_DAZ_ESTATUS Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_DAZ_ESTATUS,String)
            End If
            If (Original_DAZ_ENVIADOBANCO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_DAZ_ENVIADOBANCO,String)
            End If
            If (Original_DAZ_ANULADO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_DAZ_ANULADO,String)
            End If
            If (Original_DAZ_FECHAANU.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_DAZ_FECHAANU.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_ESTADO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_DAZ_ESTADO,String)
            End If
            If (Original_PLA_CODIGO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_PLA_CODIGO.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_FECHADIS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_DAZ_FECHADIS.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_GLOSA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_DAZ_GLOSA,String)
            End If
            If (Original_DAZ_COLUMNA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_DAZ_COLUMNA.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal DAZ_MANDANTE As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_SOCIEDAD As String,  _
                    ByVal DAZ_DOCCONT As String,  _
                    ByVal DAZ_EJERCICIO As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_CLASEDOC As String,  _
                    ByVal DAZ_CUENTABANCO As String,  _
                    ByVal DAZ_MONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_MONTOMON As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_MONEDA As String,  _
                    ByVal DAZ_CONCEPTO As String,  _
                    ByVal DAZ_POSICION As String,  _
                    ByVal DAZ_CAJA As String,  _
                    ByVal DAZ_FECHADOC As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_TEXTOPOS As String,  _
                    ByVal DAZ_FECHAz As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_MEDIOPAGO As String,  _
                    ByVal DAZ_RETENCION As String,  _
                    ByVal DAZ_FECHADEP As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_DIAS As Global.System.Nullable(Of Integer),  _
                    ByVal DAZ_UNIDAD As String,  _
                    ByVal DAZ_VIA As String,  _
                    ByVal DAZ_CLAVEBANCO As String,  _
                    ByVal DAZ_ESTATUS As String,  _
                    ByVal DAZ_ENVIADOBANCO As String,  _
                    ByVal DAZ_ANULADO As String,  _
                    ByVal DAZ_FECHAANU As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_ESTADO As String,  _
                    ByVal PLA_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal DAZ_FECHADIS As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_GLOSA As String,  _
                    ByVal DAZ_COLUMNA As Global.System.Nullable(Of Integer)) As Integer
            If (DAZ_MANDANTE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(DAZ_MANDANTE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (DAZ_SOCIEDAD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DAZ_SOCIEDAD,String)
            End If
            If (DAZ_DOCCONT Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DAZ_DOCCONT,String)
            End If
            If (DAZ_EJERCICIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(DAZ_EJERCICIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (DAZ_CLASEDOC Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(DAZ_CLASEDOC,String)
            End If
            If (DAZ_CUENTABANCO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(DAZ_CUENTABANCO,String)
            End If
            If (DAZ_MONTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(DAZ_MONTO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (DAZ_MONTOMON.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(DAZ_MONTOMON.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (DAZ_MONEDA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(DAZ_MONEDA,String)
            End If
            If (DAZ_CONCEPTO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(DAZ_CONCEPTO,String)
            End If
            If (DAZ_POSICION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(DAZ_POSICION,String)
            End If
            If (DAZ_CAJA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(DAZ_CAJA,String)
            End If
            If (DAZ_FECHADOC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(DAZ_FECHADOC.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (DAZ_TEXTOPOS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(DAZ_TEXTOPOS,String)
            End If
            If (DAZ_FECHAz.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(DAZ_FECHAz.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (DAZ_MEDIOPAGO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(DAZ_MEDIOPAGO,String)
            End If
            If (DAZ_RETENCION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(DAZ_RETENCION,String)
            End If
            If (DAZ_FECHADEP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(DAZ_FECHADEP.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (DAZ_DIAS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(DAZ_DIAS.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (DAZ_UNIDAD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(DAZ_UNIDAD,String)
            End If
            If (DAZ_VIA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(DAZ_VIA,String)
            End If
            If (DAZ_CLAVEBANCO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(DAZ_CLAVEBANCO,String)
            End If
            If (DAZ_ESTATUS Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(DAZ_ESTATUS,String)
            End If
            If (DAZ_ENVIADOBANCO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(DAZ_ENVIADOBANCO,String)
            End If
            If (DAZ_ANULADO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(DAZ_ANULADO,String)
            End If
            If (DAZ_FECHAANU.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(DAZ_FECHAANU.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (DAZ_ESTADO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(DAZ_ESTADO,String)
            End If
            If (PLA_CODIGO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(PLA_CODIGO.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (DAZ_FECHADIS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(DAZ_FECHADIS.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (DAZ_GLOSA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(DAZ_GLOSA,String)
            End If
            If (DAZ_COLUMNA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(DAZ_COLUMNA.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal DAZ_MANDANTE As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_SOCIEDAD As String,  _
                    ByVal DAZ_DOCCONT As String,  _
                    ByVal DAZ_EJERCICIO As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_CLASEDOC As String,  _
                    ByVal DAZ_CUENTABANCO As String,  _
                    ByVal DAZ_MONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_MONTOMON As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_MONEDA As String,  _
                    ByVal DAZ_CONCEPTO As String,  _
                    ByVal DAZ_POSICION As String,  _
                    ByVal DAZ_CAJA As String,  _
                    ByVal DAZ_FECHADOC As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_TEXTOPOS As String,  _
                    ByVal DAZ_FECHAz As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_MEDIOPAGO As String,  _
                    ByVal DAZ_RETENCION As String,  _
                    ByVal DAZ_FECHADEP As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_DIAS As Global.System.Nullable(Of Integer),  _
                    ByVal DAZ_UNIDAD As String,  _
                    ByVal DAZ_VIA As String,  _
                    ByVal DAZ_CLAVEBANCO As String,  _
                    ByVal DAZ_ESTATUS As String,  _
                    ByVal DAZ_ENVIADOBANCO As String,  _
                    ByVal DAZ_ANULADO As String,  _
                    ByVal DAZ_FECHAANU As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_ESTADO As String,  _
                    ByVal PLA_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal DAZ_FECHADIS As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_GLOSA As String,  _
                    ByVal DAZ_COLUMNA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DAZ_CODIGO As Long,  _
                    ByVal Original_DAZ_MANDANTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_SOCIEDAD As String,  _
                    ByVal Original_DAZ_DOCCONT As String,  _
                    ByVal Original_DAZ_EJERCICIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_CLASEDOC As String,  _
                    ByVal Original_DAZ_CUENTABANCO As String,  _
                    ByVal Original_DAZ_MONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_MONTOMON As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_MONEDA As String,  _
                    ByVal Original_DAZ_CONCEPTO As String,  _
                    ByVal Original_DAZ_POSICION As String,  _
                    ByVal Original_DAZ_CAJA As String,  _
                    ByVal Original_DAZ_FECHADOC As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_TEXTOPOS As String,  _
                    ByVal Original_DAZ_FECHAz As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_MEDIOPAGO As String,  _
                    ByVal Original_DAZ_RETENCION As String,  _
                    ByVal Original_DAZ_FECHADEP As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_DIAS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DAZ_UNIDAD As String,  _
                    ByVal Original_DAZ_VIA As String,  _
                    ByVal Original_DAZ_CLAVEBANCO As String,  _
                    ByVal Original_DAZ_ESTATUS As String,  _
                    ByVal Original_DAZ_ENVIADOBANCO As String,  _
                    ByVal Original_DAZ_ANULADO As String,  _
                    ByVal Original_DAZ_FECHAANU As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_ESTADO As String,  _
                    ByVal Original_PLA_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal Original_DAZ_FECHADIS As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_GLOSA As String,  _
                    ByVal Original_DAZ_COLUMNA As Global.System.Nullable(Of Integer),  _
                    ByVal DAZ_CODIGO As Long) As Integer
            If (DAZ_MANDANTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(DAZ_MANDANTE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (DAZ_SOCIEDAD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(DAZ_SOCIEDAD,String)
            End If
            If (DAZ_DOCCONT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DAZ_DOCCONT,String)
            End If
            If (DAZ_EJERCICIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(DAZ_EJERCICIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (DAZ_CLASEDOC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(DAZ_CLASEDOC,String)
            End If
            If (DAZ_CUENTABANCO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(DAZ_CUENTABANCO,String)
            End If
            If (DAZ_MONTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(DAZ_MONTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (DAZ_MONTOMON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(DAZ_MONTOMON.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (DAZ_MONEDA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(DAZ_MONEDA,String)
            End If
            If (DAZ_CONCEPTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(DAZ_CONCEPTO,String)
            End If
            If (DAZ_POSICION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(DAZ_POSICION,String)
            End If
            If (DAZ_CAJA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(DAZ_CAJA,String)
            End If
            If (DAZ_FECHADOC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(DAZ_FECHADOC.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (DAZ_TEXTOPOS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(DAZ_TEXTOPOS,String)
            End If
            If (DAZ_FECHAz.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(DAZ_FECHAz.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (DAZ_MEDIOPAGO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(DAZ_MEDIOPAGO,String)
            End If
            If (DAZ_RETENCION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(DAZ_RETENCION,String)
            End If
            If (DAZ_FECHADEP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(DAZ_FECHADEP.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (DAZ_DIAS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(DAZ_DIAS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (DAZ_UNIDAD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(DAZ_UNIDAD,String)
            End If
            If (DAZ_VIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(DAZ_VIA,String)
            End If
            If (DAZ_CLAVEBANCO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(DAZ_CLAVEBANCO,String)
            End If
            If (DAZ_ESTATUS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(DAZ_ESTATUS,String)
            End If
            If (DAZ_ENVIADOBANCO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(DAZ_ENVIADOBANCO,String)
            End If
            If (DAZ_ANULADO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(DAZ_ANULADO,String)
            End If
            If (DAZ_FECHAANU.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(DAZ_FECHAANU.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (DAZ_ESTADO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(DAZ_ESTADO,String)
            End If
            If (PLA_CODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(PLA_CODIGO.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (DAZ_FECHADIS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(DAZ_FECHADIS.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (DAZ_GLOSA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(DAZ_GLOSA,String)
            End If
            If (DAZ_COLUMNA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(DAZ_COLUMNA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_DAZ_CODIGO,Long)
            If (Original_DAZ_MANDANTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_DAZ_MANDANTE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_SOCIEDAD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_DAZ_SOCIEDAD,String)
            End If
            If (Original_DAZ_DOCCONT Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_DAZ_DOCCONT,String)
            End If
            If (Original_DAZ_EJERCICIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_DAZ_EJERCICIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_CLASEDOC Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_DAZ_CLASEDOC,String)
            End If
            If (Original_DAZ_CUENTABANCO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_DAZ_CUENTABANCO,String)
            End If
            If (Original_DAZ_MONTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_DAZ_MONTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_MONTOMON.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_DAZ_MONTOMON.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_MONEDA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_DAZ_MONEDA,String)
            End If
            If (Original_DAZ_CONCEPTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_DAZ_CONCEPTO,String)
            End If
            If (Original_DAZ_POSICION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_DAZ_POSICION,String)
            End If
            If (Original_DAZ_CAJA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_DAZ_CAJA,String)
            End If
            If (Original_DAZ_FECHADOC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_DAZ_FECHADOC.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_TEXTOPOS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_DAZ_TEXTOPOS,String)
            End If
            If (Original_DAZ_FECHAz.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_DAZ_FECHAz.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_MEDIOPAGO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_DAZ_MEDIOPAGO,String)
            End If
            If (Original_DAZ_RETENCION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_DAZ_RETENCION,String)
            End If
            If (Original_DAZ_FECHADEP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_DAZ_FECHADEP.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_DIAS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_DAZ_DIAS.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_UNIDAD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_DAZ_UNIDAD,String)
            End If
            If (Original_DAZ_VIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_DAZ_VIA,String)
            End If
            If (Original_DAZ_CLAVEBANCO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_DAZ_CLAVEBANCO,String)
            End If
            If (Original_DAZ_ESTATUS Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_DAZ_ESTATUS,String)
            End If
            If (Original_DAZ_ENVIADOBANCO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_DAZ_ENVIADOBANCO,String)
            End If
            If (Original_DAZ_ANULADO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_DAZ_ANULADO,String)
            End If
            If (Original_DAZ_FECHAANU.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_DAZ_FECHAANU.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_ESTADO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_DAZ_ESTADO,String)
            End If
            If (Original_PLA_CODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_PLA_CODIGO.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_FECHADIS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_DAZ_FECHADIS.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (Original_DAZ_GLOSA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_DAZ_GLOSA,String)
            End If
            If (Original_DAZ_COLUMNA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_DAZ_COLUMNA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(94).Value = CType(DAZ_CODIGO,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal DAZ_MANDANTE As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_SOCIEDAD As String,  _
                    ByVal DAZ_DOCCONT As String,  _
                    ByVal DAZ_EJERCICIO As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_CLASEDOC As String,  _
                    ByVal DAZ_CUENTABANCO As String,  _
                    ByVal DAZ_MONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_MONTOMON As Global.System.Nullable(Of Decimal),  _
                    ByVal DAZ_MONEDA As String,  _
                    ByVal DAZ_CONCEPTO As String,  _
                    ByVal DAZ_POSICION As String,  _
                    ByVal DAZ_CAJA As String,  _
                    ByVal DAZ_FECHADOC As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_TEXTOPOS As String,  _
                    ByVal DAZ_FECHAz As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_MEDIOPAGO As String,  _
                    ByVal DAZ_RETENCION As String,  _
                    ByVal DAZ_FECHADEP As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_DIAS As Global.System.Nullable(Of Integer),  _
                    ByVal DAZ_UNIDAD As String,  _
                    ByVal DAZ_VIA As String,  _
                    ByVal DAZ_CLAVEBANCO As String,  _
                    ByVal DAZ_ESTATUS As String,  _
                    ByVal DAZ_ENVIADOBANCO As String,  _
                    ByVal DAZ_ANULADO As String,  _
                    ByVal DAZ_FECHAANU As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_ESTADO As String,  _
                    ByVal PLA_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal DAZ_FECHADIS As Global.System.Nullable(Of Date),  _
                    ByVal DAZ_GLOSA As String,  _
                    ByVal DAZ_COLUMNA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DAZ_CODIGO As Long,  _
                    ByVal Original_DAZ_MANDANTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_SOCIEDAD As String,  _
                    ByVal Original_DAZ_DOCCONT As String,  _
                    ByVal Original_DAZ_EJERCICIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_CLASEDOC As String,  _
                    ByVal Original_DAZ_CUENTABANCO As String,  _
                    ByVal Original_DAZ_MONTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_MONTOMON As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DAZ_MONEDA As String,  _
                    ByVal Original_DAZ_CONCEPTO As String,  _
                    ByVal Original_DAZ_POSICION As String,  _
                    ByVal Original_DAZ_CAJA As String,  _
                    ByVal Original_DAZ_FECHADOC As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_TEXTOPOS As String,  _
                    ByVal Original_DAZ_FECHAz As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_MEDIOPAGO As String,  _
                    ByVal Original_DAZ_RETENCION As String,  _
                    ByVal Original_DAZ_FECHADEP As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_DIAS As Global.System.Nullable(Of Integer),  _
                    ByVal Original_DAZ_UNIDAD As String,  _
                    ByVal Original_DAZ_VIA As String,  _
                    ByVal Original_DAZ_CLAVEBANCO As String,  _
                    ByVal Original_DAZ_ESTATUS As String,  _
                    ByVal Original_DAZ_ENVIADOBANCO As String,  _
                    ByVal Original_DAZ_ANULADO As String,  _
                    ByVal Original_DAZ_FECHAANU As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_ESTADO As String,  _
                    ByVal Original_PLA_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal Original_DAZ_FECHADIS As Global.System.Nullable(Of Date),  _
                    ByVal Original_DAZ_GLOSA As String,  _
                    ByVal Original_DAZ_COLUMNA As Global.System.Nullable(Of Integer)) As Integer
            Return Me.Update(DAZ_MANDANTE, DAZ_SOCIEDAD, DAZ_DOCCONT, DAZ_EJERCICIO, DAZ_CLASEDOC, DAZ_CUENTABANCO, DAZ_MONTO, DAZ_MONTOMON, DAZ_MONEDA, DAZ_CONCEPTO, DAZ_POSICION, DAZ_CAJA, DAZ_FECHADOC, DAZ_TEXTOPOS, DAZ_FECHAz, DAZ_MEDIOPAGO, DAZ_RETENCION, DAZ_FECHADEP, DAZ_DIAS, DAZ_UNIDAD, DAZ_VIA, DAZ_CLAVEBANCO, DAZ_ESTATUS, DAZ_ENVIADOBANCO, DAZ_ANULADO, DAZ_FECHAANU, DAZ_ESTADO, PLA_CODIGO, DAZ_FECHADIS, DAZ_GLOSA, DAZ_COLUMNA, Original_DAZ_CODIGO, Original_DAZ_MANDANTE, Original_DAZ_SOCIEDAD, Original_DAZ_DOCCONT, Original_DAZ_EJERCICIO, Original_DAZ_CLASEDOC, Original_DAZ_CUENTABANCO, Original_DAZ_MONTO, Original_DAZ_MONTOMON, Original_DAZ_MONEDA, Original_DAZ_CONCEPTO, Original_DAZ_POSICION, Original_DAZ_CAJA, Original_DAZ_FECHADOC, Original_DAZ_TEXTOPOS, Original_DAZ_FECHAz, Original_DAZ_MEDIOPAGO, Original_DAZ_RETENCION, Original_DAZ_FECHADEP, Original_DAZ_DIAS, Original_DAZ_UNIDAD, Original_DAZ_VIA, Original_DAZ_CLAVEBANCO, Original_DAZ_ESTATUS, Original_DAZ_ENVIADOBANCO, Original_DAZ_ANULADO, Original_DAZ_FECHAANU, Original_DAZ_ESTADO, Original_PLA_CODIGO, Original_DAZ_FECHADIS, Original_DAZ_GLOSA, Original_DAZ_COLUMNA, Original_DAZ_CODIGO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class AjustesManualesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "AjustesManuales"
            tableMapping.ColumnMappings.Add("DOP_CODIGO", "DOP_CODIGO")
            tableMapping.ColumnMappings.Add("DPL_CODIGO", "DPL_CODIGO")
            tableMapping.ColumnMappings.Add("COL_CODIGO", "COL_CODIGO")
            tableMapping.ColumnMappings.Add("DOP_MONTO", "DOP_MONTO")
            tableMapping.ColumnMappings.Add("DOP_TIPO", "DOP_TIPO")
            tableMapping.ColumnMappings.Add("DOP_NUMERO", "DOP_NUMERO")
            tableMapping.ColumnMappings.Add("DOP_GLOSAADIC", "DOP_GLOSAADIC")
            tableMapping.ColumnMappings.Add("DOP_AUDITORIA", "DOP_AUDITORIA")
            tableMapping.ColumnMappings.Add("DOP_TIPOREC", "DOP_TIPOREC")
            tableMapping.ColumnMappings.Add("DAZ_CODIGO", "DAZ_CODIGO")
            tableMapping.ColumnMappings.Add("CTE_CODIGO", "CTE_CODIGO")
            tableMapping.ColumnMappings.Add("Expr1", "Expr1")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT TESDOP.DOP_CODIGO, TESDOP.DPL_CODIGO, TESDOP.COL_CODIGO, TESDOP.DOP_MONTO,"& _ 
                " TESDOP.DOP_TIPO, TESDOP.DOP_NUMERO, TESDOP.DOP_GLOSAADIC, TESDOP.DOP_AUDITORIA,"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  TESDOP.DOP_TIPOREC, TESDOP.DAZ_CODIGO, TESDPL.CTE_CODIGO, T"& _ 
                "ESDOP.DOP_TIPO AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     TESDPL INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  TESDOP ON"& _ 
                " TESDPL.DPL_CODIGO = TESDOP.DPL_CODIGO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  (TESDPL.PLA_CODIGO = @Planilla) A"& _ 
                "ND (TESDPL.CTE_CODIGO = @Cuenta) AND (TESDOP.DOP_TIPO = 'M')"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Planilla", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "PLA_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cuenta", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillTraeAjustesManuales(ByVal dataTable As dsWALCUA.AjustesManualesDataTable, ByVal Planilla As Long, ByVal Cuenta As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Planilla,Long)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Cuenta,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetDataAjustesManuales(ByVal Planilla As Long, ByVal Cuenta As Integer) As dsWALCUA.AjustesManualesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(Planilla,Long)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Cuenta,Integer)
            Dim dataTable As dsWALCUA.AjustesManualesDataTable = New dsWALCUA.AjustesManualesDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TESCTETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TESCTE"
            tableMapping.ColumnMappings.Add("CTE_CODIGO", "CTE_CODIGO")
            tableMapping.ColumnMappings.Add("ENT_CODIGO", "ENT_CODIGO")
            tableMapping.ColumnMappings.Add("CON_CODIGO", "CON_CODIGO")
            tableMapping.ColumnMappings.Add("MON_CODIGO", "MON_CODIGO")
            tableMapping.ColumnMappings.Add("EMP_CODIGO", "EMP_CODIGO")
            tableMapping.ColumnMappings.Add("CTE_NUMERO", "CTE_NUMERO")
            tableMapping.ColumnMappings.Add("CTE_CUENTA", "CTE_CUENTA")
            tableMapping.ColumnMappings.Add("CTE_SIGLA", "CTE_SIGLA")
            tableMapping.ColumnMappings.Add("CTE_GRUPO", "CTE_GRUPO")
            tableMapping.ColumnMappings.Add("CTE_TIPO", "CTE_TIPO")
            tableMapping.ColumnMappings.Add("CTE_SECUENCIA", "CTE_SECUENCIA")
            tableMapping.ColumnMappings.Add("CTE_COLCHON1", "CTE_COLCHON1")
            tableMapping.ColumnMappings.Add("CTE_COLCHON2", "CTE_COLCHON2")
            tableMapping.ColumnMappings.Add("CTE_PLAZA", "CTE_PLAZA")
            tableMapping.ColumnMappings.Add("CTE_MADRE", "CTE_MADRE")
            tableMapping.ColumnMappings.Add("CTE_AUDITORIA", "CTE_AUDITORIA")
            tableMapping.ColumnMappings.Add("CTE_SOCIEDAD", "CTE_SOCIEDAD")
            tableMapping.ColumnMappings.Add("CTE_CODBANCO", "CTE_CODBANCO")
            tableMapping.ColumnMappings.Add("CTE_CUENTAID", "CTE_CUENTAID")
            tableMapping.ColumnMappings.Add("CTE_GLOSA", "CTE_GLOSA")
            tableMapping.ColumnMappings.Add("CTE_CONTABLE", "CTE_CONTABLE")
            tableMapping.ColumnMappings.Add("CTE_MONEDASAP", "CTE_MONEDASAP")
            tableMapping.ColumnMappings.Add("CTE_VIA", "CTE_VIA")
            tableMapping.ColumnMappings.Add("CTE_CODCTE", "CTE_CODCTE")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [TESCTE] WHERE (([CTE_CODIGO] = @Original_CTE_CODIGO) AND ([ENT_CODIG"& _ 
                "O] = @Original_ENT_CODIGO) AND ((@IsNull_CON_CODIGO = 1 AND [CON_CODIGO] IS NULL"& _ 
                ") OR ([CON_CODIGO] = @Original_CON_CODIGO)) AND ([MON_CODIGO] = @Original_MON_CO"& _ 
                "DIGO) AND ([EMP_CODIGO] = @Original_EMP_CODIGO) AND ((@IsNull_CTE_NUMERO = 1 AND"& _ 
                " [CTE_NUMERO] IS NULL) OR ([CTE_NUMERO] = @Original_CTE_NUMERO)) AND ((@IsNull_C"& _ 
                "TE_CUENTA = 1 AND [CTE_CUENTA] IS NULL) OR ([CTE_CUENTA] = @Original_CTE_CUENTA)"& _ 
                ") AND ((@IsNull_CTE_SIGLA = 1 AND [CTE_SIGLA] IS NULL) OR ([CTE_SIGLA] = @Origin"& _ 
                "al_CTE_SIGLA)) AND ((@IsNull_CTE_GRUPO = 1 AND [CTE_GRUPO] IS NULL) OR ([CTE_GRU"& _ 
                "PO] = @Original_CTE_GRUPO)) AND ((@IsNull_CTE_TIPO = 1 AND [CTE_TIPO] IS NULL) O"& _ 
                "R ([CTE_TIPO] = @Original_CTE_TIPO)) AND ((@IsNull_CTE_SECUENCIA = 1 AND [CTE_SE"& _ 
                "CUENCIA] IS NULL) OR ([CTE_SECUENCIA] = @Original_CTE_SECUENCIA)) AND ((@IsNull_"& _ 
                "CTE_COLCHON1 = 1 AND [CTE_COLCHON1] IS NULL) OR ([CTE_COLCHON1] = @Original_CTE_"& _ 
                "COLCHON1)) AND ((@IsNull_CTE_COLCHON2 = 1 AND [CTE_COLCHON2] IS NULL) OR ([CTE_C"& _ 
                "OLCHON2] = @Original_CTE_COLCHON2)) AND ((@IsNull_CTE_PLAZA = 1 AND [CTE_PLAZA] "& _ 
                "IS NULL) OR ([CTE_PLAZA] = @Original_CTE_PLAZA)) AND ((@IsNull_CTE_MADRE = 1 AND"& _ 
                " [CTE_MADRE] IS NULL) OR ([CTE_MADRE] = @Original_CTE_MADRE)) AND ((@IsNull_CTE_"& _ 
                "AUDITORIA = 1 AND [CTE_AUDITORIA] IS NULL) OR ([CTE_AUDITORIA] = @Original_CTE_A"& _ 
                "UDITORIA)) AND ((@IsNull_CTE_SOCIEDAD = 1 AND [CTE_SOCIEDAD] IS NULL) OR ([CTE_S"& _ 
                "OCIEDAD] = @Original_CTE_SOCIEDAD)) AND ((@IsNull_CTE_CODBANCO = 1 AND [CTE_CODB"& _ 
                "ANCO] IS NULL) OR ([CTE_CODBANCO] = @Original_CTE_CODBANCO)) AND ((@IsNull_CTE_C"& _ 
                "UENTAID = 1 AND [CTE_CUENTAID] IS NULL) OR ([CTE_CUENTAID] = @Original_CTE_CUENT"& _ 
                "AID)) AND ((@IsNull_CTE_GLOSA = 1 AND [CTE_GLOSA] IS NULL) OR ([CTE_GLOSA] = @Or"& _ 
                "iginal_CTE_GLOSA)) AND ((@IsNull_CTE_CONTABLE = 1 AND [CTE_CONTABLE] IS NULL) OR"& _ 
                " ([CTE_CONTABLE] = @Original_CTE_CONTABLE)) AND ((@IsNull_CTE_MONEDASAP = 1 AND "& _ 
                "[CTE_MONEDASAP] IS NULL) OR ([CTE_MONEDASAP] = @Original_CTE_MONEDASAP)) AND ((@"& _ 
                "IsNull_CTE_VIA = 1 AND [CTE_VIA] IS NULL) OR ([CTE_VIA] = @Original_CTE_VIA)) AN"& _ 
                "D ((@IsNull_CTE_CODCTE = 1 AND [CTE_CODCTE] IS NULL) OR ([CTE_CODCTE] = @Origina"& _ 
                "l_CTE_CODCTE)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENT_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENT_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CON_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CON_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CON_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CON_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MON_CODIGO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MON_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMP_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_NUMERO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_NUMERO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_NUMERO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_NUMERO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_CUENTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CUENTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_CUENTA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CUENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_SIGLA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_SIGLA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_SIGLA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_SIGLA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_GRUPO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_GRUPO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_GRUPO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_GRUPO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_TIPO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_TIPO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_TIPO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_TIPO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_SECUENCIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_SECUENCIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_SECUENCIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_SECUENCIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_COLCHON1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_COLCHON1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_COLCHON1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_COLCHON1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_COLCHON2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_COLCHON2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_COLCHON2", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_COLCHON2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_PLAZA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_PLAZA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_PLAZA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_PLAZA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_MADRE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_MADRE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_MADRE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_MADRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_AUDITORIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_AUDITORIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_AUDITORIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_AUDITORIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_SOCIEDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_SOCIEDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_SOCIEDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_SOCIEDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_CODBANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODBANCO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_CODBANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODBANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_CUENTAID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CUENTAID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_CUENTAID", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CUENTAID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_GLOSA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_GLOSA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_GLOSA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_GLOSA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_CONTABLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CONTABLE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_CONTABLE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CONTABLE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_MONEDASAP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_MONEDASAP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_MONEDASAP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_MONEDASAP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_VIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_VIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_VIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_VIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_CODCTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODCTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_CODCTE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODCTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [TESCTE] ([CTE_CODIGO], [ENT_CODIGO], [CON_CODIGO], [MON_CODIGO], [EM"& _ 
                "P_CODIGO], [CTE_NUMERO], [CTE_CUENTA], [CTE_SIGLA], [CTE_GRUPO], [CTE_TIPO], [CT"& _ 
                "E_SECUENCIA], [CTE_COLCHON1], [CTE_COLCHON2], [CTE_PLAZA], [CTE_MADRE], [CTE_AUD"& _ 
                "ITORIA], [CTE_SOCIEDAD], [CTE_CODBANCO], [CTE_CUENTAID], [CTE_GLOSA], [CTE_CONTA"& _ 
                "BLE], [CTE_MONEDASAP], [CTE_VIA], [CTE_CODCTE]) VALUES (@CTE_CODIGO, @ENT_CODIGO"& _ 
                ", @CON_CODIGO, @MON_CODIGO, @EMP_CODIGO, @CTE_NUMERO, @CTE_CUENTA, @CTE_SIGLA, @"& _ 
                "CTE_GRUPO, @CTE_TIPO, @CTE_SECUENCIA, @CTE_COLCHON1, @CTE_COLCHON2, @CTE_PLAZA, "& _ 
                "@CTE_MADRE, @CTE_AUDITORIA, @CTE_SOCIEDAD, @CTE_CODBANCO, @CTE_CUENTAID, @CTE_GL"& _ 
                "OSA, @CTE_CONTABLE, @CTE_MONEDASAP, @CTE_VIA, @CTE_CODCTE);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CTE_CODIGO, "& _ 
                "ENT_CODIGO, CON_CODIGO, MON_CODIGO, EMP_CODIGO, CTE_NUMERO, CTE_CUENTA, CTE_SIGL"& _ 
                "A, CTE_GRUPO, CTE_TIPO, CTE_SECUENCIA, CTE_COLCHON1, CTE_COLCHON2, CTE_PLAZA, CT"& _ 
                "E_MADRE, CTE_AUDITORIA, CTE_SOCIEDAD, CTE_CODBANCO, CTE_CUENTAID, CTE_GLOSA, CTE"& _ 
                "_CONTABLE, CTE_MONEDASAP, CTE_VIA, CTE_CODCTE FROM TESCTE WHERE (CTE_CODIGO = @C"& _ 
                "TE_CODIGO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENT_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENT_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CON_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CON_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MON_CODIGO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MON_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMP_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_NUMERO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_NUMERO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_CUENTA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CUENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_SIGLA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_SIGLA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_GRUPO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_GRUPO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_TIPO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_TIPO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_SECUENCIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_SECUENCIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_COLCHON1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_COLCHON1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_COLCHON2", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_COLCHON2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_PLAZA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_PLAZA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_MADRE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_MADRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_AUDITORIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_AUDITORIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_SOCIEDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_SOCIEDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_CODBANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODBANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_CUENTAID", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CUENTAID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_GLOSA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_GLOSA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_CONTABLE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CONTABLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_MONEDASAP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_MONEDASAP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_VIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_VIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_CODCTE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODCTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [TESCTE] SET [CTE_CODIGO] = @CTE_CODIGO, [ENT_CODIGO] = @ENT_CODIGO, [CON_"& _ 
                "CODIGO] = @CON_CODIGO, [MON_CODIGO] = @MON_CODIGO, [EMP_CODIGO] = @EMP_CODIGO, ["& _ 
                "CTE_NUMERO] = @CTE_NUMERO, [CTE_CUENTA] = @CTE_CUENTA, [CTE_SIGLA] = @CTE_SIGLA,"& _ 
                " [CTE_GRUPO] = @CTE_GRUPO, [CTE_TIPO] = @CTE_TIPO, [CTE_SECUENCIA] = @CTE_SECUEN"& _ 
                "CIA, [CTE_COLCHON1] = @CTE_COLCHON1, [CTE_COLCHON2] = @CTE_COLCHON2, [CTE_PLAZA]"& _ 
                " = @CTE_PLAZA, [CTE_MADRE] = @CTE_MADRE, [CTE_AUDITORIA] = @CTE_AUDITORIA, [CTE_"& _ 
                "SOCIEDAD] = @CTE_SOCIEDAD, [CTE_CODBANCO] = @CTE_CODBANCO, [CTE_CUENTAID] = @CTE"& _ 
                "_CUENTAID, [CTE_GLOSA] = @CTE_GLOSA, [CTE_CONTABLE] = @CTE_CONTABLE, [CTE_MONEDA"& _ 
                "SAP] = @CTE_MONEDASAP, [CTE_VIA] = @CTE_VIA, [CTE_CODCTE] = @CTE_CODCTE WHERE (("& _ 
                "[CTE_CODIGO] = @Original_CTE_CODIGO) AND ([ENT_CODIGO] = @Original_ENT_CODIGO) A"& _ 
                "ND ((@IsNull_CON_CODIGO = 1 AND [CON_CODIGO] IS NULL) OR ([CON_CODIGO] = @Origin"& _ 
                "al_CON_CODIGO)) AND ([MON_CODIGO] = @Original_MON_CODIGO) AND ([EMP_CODIGO] = @O"& _ 
                "riginal_EMP_CODIGO) AND ((@IsNull_CTE_NUMERO = 1 AND [CTE_NUMERO] IS NULL) OR (["& _ 
                "CTE_NUMERO] = @Original_CTE_NUMERO)) AND ((@IsNull_CTE_CUENTA = 1 AND [CTE_CUENT"& _ 
                "A] IS NULL) OR ([CTE_CUENTA] = @Original_CTE_CUENTA)) AND ((@IsNull_CTE_SIGLA = "& _ 
                "1 AND [CTE_SIGLA] IS NULL) OR ([CTE_SIGLA] = @Original_CTE_SIGLA)) AND ((@IsNull"& _ 
                "_CTE_GRUPO = 1 AND [CTE_GRUPO] IS NULL) OR ([CTE_GRUPO] = @Original_CTE_GRUPO)) "& _ 
                "AND ((@IsNull_CTE_TIPO = 1 AND [CTE_TIPO] IS NULL) OR ([CTE_TIPO] = @Original_CT"& _ 
                "E_TIPO)) AND ((@IsNull_CTE_SECUENCIA = 1 AND [CTE_SECUENCIA] IS NULL) OR ([CTE_S"& _ 
                "ECUENCIA] = @Original_CTE_SECUENCIA)) AND ((@IsNull_CTE_COLCHON1 = 1 AND [CTE_CO"& _ 
                "LCHON1] IS NULL) OR ([CTE_COLCHON1] = @Original_CTE_COLCHON1)) AND ((@IsNull_CTE"& _ 
                "_COLCHON2 = 1 AND [CTE_COLCHON2] IS NULL) OR ([CTE_COLCHON2] = @Original_CTE_COL"& _ 
                "CHON2)) AND ((@IsNull_CTE_PLAZA = 1 AND [CTE_PLAZA] IS NULL) OR ([CTE_PLAZA] = @"& _ 
                "Original_CTE_PLAZA)) AND ((@IsNull_CTE_MADRE = 1 AND [CTE_MADRE] IS NULL) OR ([C"& _ 
                "TE_MADRE] = @Original_CTE_MADRE)) AND ((@IsNull_CTE_AUDITORIA = 1 AND [CTE_AUDIT"& _ 
                "ORIA] IS NULL) OR ([CTE_AUDITORIA] = @Original_CTE_AUDITORIA)) AND ((@IsNull_CTE"& _ 
                "_SOCIEDAD = 1 AND [CTE_SOCIEDAD] IS NULL) OR ([CTE_SOCIEDAD] = @Original_CTE_SOC"& _ 
                "IEDAD)) AND ((@IsNull_CTE_CODBANCO = 1 AND [CTE_CODBANCO] IS NULL) OR ([CTE_CODB"& _ 
                "ANCO] = @Original_CTE_CODBANCO)) AND ((@IsNull_CTE_CUENTAID = 1 AND [CTE_CUENTAI"& _ 
                "D] IS NULL) OR ([CTE_CUENTAID] = @Original_CTE_CUENTAID)) AND ((@IsNull_CTE_GLOS"& _ 
                "A = 1 AND [CTE_GLOSA] IS NULL) OR ([CTE_GLOSA] = @Original_CTE_GLOSA)) AND ((@Is"& _ 
                "Null_CTE_CONTABLE = 1 AND [CTE_CONTABLE] IS NULL) OR ([CTE_CONTABLE] = @Original"& _ 
                "_CTE_CONTABLE)) AND ((@IsNull_CTE_MONEDASAP = 1 AND [CTE_MONEDASAP] IS NULL) OR "& _ 
                "([CTE_MONEDASAP] = @Original_CTE_MONEDASAP)) AND ((@IsNull_CTE_VIA = 1 AND [CTE_"& _ 
                "VIA] IS NULL) OR ([CTE_VIA] = @Original_CTE_VIA)) AND ((@IsNull_CTE_CODCTE = 1 A"& _ 
                "ND [CTE_CODCTE] IS NULL) OR ([CTE_CODCTE] = @Original_CTE_CODCTE)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CTE"& _ 
                "_CODIGO, ENT_CODIGO, CON_CODIGO, MON_CODIGO, EMP_CODIGO, CTE_NUMERO, CTE_CUENTA,"& _ 
                " CTE_SIGLA, CTE_GRUPO, CTE_TIPO, CTE_SECUENCIA, CTE_COLCHON1, CTE_COLCHON2, CTE_"& _ 
                "PLAZA, CTE_MADRE, CTE_AUDITORIA, CTE_SOCIEDAD, CTE_CODBANCO, CTE_CUENTAID, CTE_G"& _ 
                "LOSA, CTE_CONTABLE, CTE_MONEDASAP, CTE_VIA, CTE_CODCTE FROM TESCTE WHERE (CTE_CO"& _ 
                "DIGO = @CTE_CODIGO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ENT_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENT_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CON_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CON_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MON_CODIGO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MON_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMP_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_NUMERO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_NUMERO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_CUENTA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CUENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_SIGLA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_SIGLA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_GRUPO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_GRUPO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_TIPO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_TIPO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_SECUENCIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_SECUENCIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_COLCHON1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_COLCHON1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_COLCHON2", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_COLCHON2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_PLAZA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_PLAZA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_MADRE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_MADRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_AUDITORIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_AUDITORIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_SOCIEDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_SOCIEDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_CODBANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODBANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_CUENTAID", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CUENTAID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_GLOSA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_GLOSA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_CONTABLE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CONTABLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_MONEDASAP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_MONEDASAP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_VIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_VIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CTE_CODCTE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODCTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ENT_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ENT_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CON_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CON_CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CON_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CON_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MON_CODIGO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MON_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMP_CODIGO", Global.System.Data.SqlDbType.BigInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMP_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_NUMERO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_NUMERO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_NUMERO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_NUMERO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_CUENTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CUENTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_CUENTA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CUENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_SIGLA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_SIGLA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_SIGLA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_SIGLA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_GRUPO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_GRUPO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_GRUPO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_GRUPO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_TIPO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_TIPO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_TIPO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_TIPO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_SECUENCIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_SECUENCIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_SECUENCIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_SECUENCIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_COLCHON1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_COLCHON1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_COLCHON1", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_COLCHON1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_COLCHON2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_COLCHON2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_COLCHON2", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_COLCHON2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_PLAZA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_PLAZA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_PLAZA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_PLAZA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_MADRE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_MADRE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_MADRE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_MADRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_AUDITORIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_AUDITORIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_AUDITORIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_AUDITORIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_SOCIEDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_SOCIEDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_SOCIEDAD", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_SOCIEDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_CODBANCO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODBANCO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_CODBANCO", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODBANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_CUENTAID", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CUENTAID", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_CUENTAID", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CUENTAID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_GLOSA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_GLOSA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_GLOSA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_GLOSA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_CONTABLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CONTABLE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_CONTABLE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CONTABLE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_MONEDASAP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_MONEDASAP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_MONEDASAP", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_MONEDASAP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_VIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_VIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_VIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_VIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CTE_CODCTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODCTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CTE_CODCTE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CODCTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT TESCTE.* FROM TESCTE WHERE (CTE_CONTABLE = @Cuenta)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cuenta", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, "CTE_CONTABLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillByCuenta(ByVal dataTable As dsWALCUA.TESCTEDataTable, ByVal Cuenta As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Cuenta Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Cuenta,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetDataByCuenta(ByVal Cuenta As String) As dsWALCUA.TESCTEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Cuenta Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(Cuenta,String)
            End If
            Dim dataTable As dsWALCUA.TESCTEDataTable = New dsWALCUA.TESCTEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As dsWALCUA.TESCTEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As dsWALCUA) As Integer
            Return Me.Adapter.Update(dataSet, "TESCTE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CTE_CODIGO As Integer,  _
                    ByVal Original_ENT_CODIGO As Long,  _
                    ByVal Original_CON_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal Original_MON_CODIGO As String,  _
                    ByVal Original_EMP_CODIGO As Long,  _
                    ByVal Original_CTE_NUMERO As String,  _
                    ByVal Original_CTE_CUENTA As String,  _
                    ByVal Original_CTE_SIGLA As String,  _
                    ByVal Original_CTE_GRUPO As String,  _
                    ByVal Original_CTE_TIPO As String,  _
                    ByVal Original_CTE_SECUENCIA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CTE_COLCHON1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CTE_COLCHON2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CTE_PLAZA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CTE_MADRE As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CTE_AUDITORIA As String,  _
                    ByVal Original_CTE_SOCIEDAD As String,  _
                    ByVal Original_CTE_CODBANCO As String,  _
                    ByVal Original_CTE_CUENTAID As String,  _
                    ByVal Original_CTE_GLOSA As String,  _
                    ByVal Original_CTE_CONTABLE As String,  _
                    ByVal Original_CTE_MONEDASAP As String,  _
                    ByVal Original_CTE_VIA As String,  _
                    ByVal Original_CTE_CODCTE As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CTE_CODIGO,Integer)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_ENT_CODIGO,Long)
            If (Original_CON_CODIGO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_CON_CODIGO.Value,Long)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_MON_CODIGO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_MON_CODIGO")
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_MON_CODIGO,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_EMP_CODIGO,Long)
            If (Original_CTE_NUMERO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_CTE_NUMERO,String)
            End If
            If (Original_CTE_CUENTA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_CTE_CUENTA,String)
            End If
            If (Original_CTE_SIGLA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_CTE_SIGLA,String)
            End If
            If (Original_CTE_GRUPO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_CTE_GRUPO,String)
            End If
            If (Original_CTE_TIPO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_CTE_TIPO,String)
            End If
            If (Original_CTE_SECUENCIA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_CTE_SECUENCIA.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_CTE_COLCHON1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_CTE_COLCHON1.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_CTE_COLCHON2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_CTE_COLCHON2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_CTE_PLAZA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_CTE_PLAZA.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_CTE_MADRE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_CTE_MADRE.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_CTE_AUDITORIA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_CTE_AUDITORIA,String)
            End If
            If (Original_CTE_SOCIEDAD Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_CTE_SOCIEDAD,String)
            End If
            If (Original_CTE_CODBANCO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_CTE_CODBANCO,String)
            End If
            If (Original_CTE_CUENTAID Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_CTE_CUENTAID,String)
            End If
            If (Original_CTE_GLOSA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_CTE_GLOSA,String)
            End If
            If (Original_CTE_CONTABLE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_CTE_CONTABLE,String)
            End If
            If (Original_CTE_MONEDASAP Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_CTE_MONEDASAP,String)
            End If
            If (Original_CTE_VIA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_CTE_VIA,String)
            End If
            If (Original_CTE_CODCTE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_CTE_CODCTE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CTE_CODIGO As Integer,  _
                    ByVal ENT_CODIGO As Long,  _
                    ByVal CON_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal MON_CODIGO As String,  _
                    ByVal EMP_CODIGO As Long,  _
                    ByVal CTE_NUMERO As String,  _
                    ByVal CTE_CUENTA As String,  _
                    ByVal CTE_SIGLA As String,  _
                    ByVal CTE_GRUPO As String,  _
                    ByVal CTE_TIPO As String,  _
                    ByVal CTE_SECUENCIA As Global.System.Nullable(Of Integer),  _
                    ByVal CTE_COLCHON1 As Global.System.Nullable(Of Decimal),  _
                    ByVal CTE_COLCHON2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CTE_PLAZA As Global.System.Nullable(Of Integer),  _
                    ByVal CTE_MADRE As Global.System.Nullable(Of Integer),  _
                    ByVal CTE_AUDITORIA As String,  _
                    ByVal CTE_SOCIEDAD As String,  _
                    ByVal CTE_CODBANCO As String,  _
                    ByVal CTE_CUENTAID As String,  _
                    ByVal CTE_GLOSA As String,  _
                    ByVal CTE_CONTABLE As String,  _
                    ByVal CTE_MONEDASAP As String,  _
                    ByVal CTE_VIA As String,  _
                    ByVal CTE_CODCTE As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CTE_CODIGO,Integer)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(ENT_CODIGO,Long)
            If (CON_CODIGO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CON_CODIGO.Value,Long)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (MON_CODIGO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MON_CODIGO")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(MON_CODIGO,String)
            End If
            Me.Adapter.InsertCommand.Parameters(4).Value = CType(EMP_CODIGO,Long)
            If (CTE_NUMERO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CTE_NUMERO,String)
            End If
            If (CTE_CUENTA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CTE_CUENTA,String)
            End If
            If (CTE_SIGLA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CTE_SIGLA,String)
            End If
            If (CTE_GRUPO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CTE_GRUPO,String)
            End If
            If (CTE_TIPO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CTE_TIPO,String)
            End If
            If (CTE_SECUENCIA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(CTE_SECUENCIA.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (CTE_COLCHON1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(CTE_COLCHON1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (CTE_COLCHON2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(CTE_COLCHON2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (CTE_PLAZA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(CTE_PLAZA.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (CTE_MADRE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(CTE_MADRE.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (CTE_AUDITORIA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(CTE_AUDITORIA,String)
            End If
            If (CTE_SOCIEDAD Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(CTE_SOCIEDAD,String)
            End If
            If (CTE_CODBANCO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(CTE_CODBANCO,String)
            End If
            If (CTE_CUENTAID Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(CTE_CUENTAID,String)
            End If
            If (CTE_GLOSA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(CTE_GLOSA,String)
            End If
            If (CTE_CONTABLE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(CTE_CONTABLE,String)
            End If
            If (CTE_MONEDASAP Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(CTE_MONEDASAP,String)
            End If
            If (CTE_VIA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(CTE_VIA,String)
            End If
            If (CTE_CODCTE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(CTE_CODCTE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CTE_CODIGO As Integer,  _
                    ByVal ENT_CODIGO As Long,  _
                    ByVal CON_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal MON_CODIGO As String,  _
                    ByVal EMP_CODIGO As Long,  _
                    ByVal CTE_NUMERO As String,  _
                    ByVal CTE_CUENTA As String,  _
                    ByVal CTE_SIGLA As String,  _
                    ByVal CTE_GRUPO As String,  _
                    ByVal CTE_TIPO As String,  _
                    ByVal CTE_SECUENCIA As Global.System.Nullable(Of Integer),  _
                    ByVal CTE_COLCHON1 As Global.System.Nullable(Of Decimal),  _
                    ByVal CTE_COLCHON2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CTE_PLAZA As Global.System.Nullable(Of Integer),  _
                    ByVal CTE_MADRE As Global.System.Nullable(Of Integer),  _
                    ByVal CTE_AUDITORIA As String,  _
                    ByVal CTE_SOCIEDAD As String,  _
                    ByVal CTE_CODBANCO As String,  _
                    ByVal CTE_CUENTAID As String,  _
                    ByVal CTE_GLOSA As String,  _
                    ByVal CTE_CONTABLE As String,  _
                    ByVal CTE_MONEDASAP As String,  _
                    ByVal CTE_VIA As String,  _
                    ByVal CTE_CODCTE As String,  _
                    ByVal Original_CTE_CODIGO As Integer,  _
                    ByVal Original_ENT_CODIGO As Long,  _
                    ByVal Original_CON_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal Original_MON_CODIGO As String,  _
                    ByVal Original_EMP_CODIGO As Long,  _
                    ByVal Original_CTE_NUMERO As String,  _
                    ByVal Original_CTE_CUENTA As String,  _
                    ByVal Original_CTE_SIGLA As String,  _
                    ByVal Original_CTE_GRUPO As String,  _
                    ByVal Original_CTE_TIPO As String,  _
                    ByVal Original_CTE_SECUENCIA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CTE_COLCHON1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CTE_COLCHON2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CTE_PLAZA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CTE_MADRE As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CTE_AUDITORIA As String,  _
                    ByVal Original_CTE_SOCIEDAD As String,  _
                    ByVal Original_CTE_CODBANCO As String,  _
                    ByVal Original_CTE_CUENTAID As String,  _
                    ByVal Original_CTE_GLOSA As String,  _
                    ByVal Original_CTE_CONTABLE As String,  _
                    ByVal Original_CTE_MONEDASAP As String,  _
                    ByVal Original_CTE_VIA As String,  _
                    ByVal Original_CTE_CODCTE As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CTE_CODIGO,Integer)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(ENT_CODIGO,Long)
            If (CON_CODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CON_CODIGO.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (MON_CODIGO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("MON_CODIGO")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(MON_CODIGO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(4).Value = CType(EMP_CODIGO,Long)
            If (CTE_NUMERO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CTE_NUMERO,String)
            End If
            If (CTE_CUENTA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CTE_CUENTA,String)
            End If
            If (CTE_SIGLA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CTE_SIGLA,String)
            End If
            If (CTE_GRUPO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CTE_GRUPO,String)
            End If
            If (CTE_TIPO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CTE_TIPO,String)
            End If
            If (CTE_SECUENCIA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(CTE_SECUENCIA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (CTE_COLCHON1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(CTE_COLCHON1.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (CTE_COLCHON2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(CTE_COLCHON2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (CTE_PLAZA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(CTE_PLAZA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (CTE_MADRE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(CTE_MADRE.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (CTE_AUDITORIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(CTE_AUDITORIA,String)
            End If
            If (CTE_SOCIEDAD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(CTE_SOCIEDAD,String)
            End If
            If (CTE_CODBANCO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(CTE_CODBANCO,String)
            End If
            If (CTE_CUENTAID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(CTE_CUENTAID,String)
            End If
            If (CTE_GLOSA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(CTE_GLOSA,String)
            End If
            If (CTE_CONTABLE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(CTE_CONTABLE,String)
            End If
            If (CTE_MONEDASAP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(CTE_MONEDASAP,String)
            End If
            If (CTE_VIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(CTE_VIA,String)
            End If
            If (CTE_CODCTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(CTE_CODCTE,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_CTE_CODIGO,Integer)
            Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_ENT_CODIGO,Long)
            If (Original_CON_CODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_CON_CODIGO.Value,Long)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_MON_CODIGO Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_MON_CODIGO")
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_MON_CODIGO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_EMP_CODIGO,Long)
            If (Original_CTE_NUMERO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_CTE_NUMERO,String)
            End If
            If (Original_CTE_CUENTA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_CTE_CUENTA,String)
            End If
            If (Original_CTE_SIGLA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_CTE_SIGLA,String)
            End If
            If (Original_CTE_GRUPO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_CTE_GRUPO,String)
            End If
            If (Original_CTE_TIPO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_CTE_TIPO,String)
            End If
            If (Original_CTE_SECUENCIA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_CTE_SECUENCIA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_CTE_COLCHON1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_CTE_COLCHON1.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_CTE_COLCHON2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_CTE_COLCHON2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_CTE_PLAZA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_CTE_PLAZA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_CTE_MADRE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_CTE_MADRE.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_CTE_AUDITORIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_CTE_AUDITORIA,String)
            End If
            If (Original_CTE_SOCIEDAD Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_CTE_SOCIEDAD,String)
            End If
            If (Original_CTE_CODBANCO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_CTE_CODBANCO,String)
            End If
            If (Original_CTE_CUENTAID Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_CTE_CUENTAID,String)
            End If
            If (Original_CTE_GLOSA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_CTE_GLOSA,String)
            End If
            If (Original_CTE_CONTABLE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_CTE_CONTABLE,String)
            End If
            If (Original_CTE_MONEDASAP Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_CTE_MONEDASAP,String)
            End If
            If (Original_CTE_VIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_CTE_VIA,String)
            End If
            If (Original_CTE_CODCTE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_CTE_CODCTE,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal ENT_CODIGO As Long,  _
                    ByVal CON_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal MON_CODIGO As String,  _
                    ByVal EMP_CODIGO As Long,  _
                    ByVal CTE_NUMERO As String,  _
                    ByVal CTE_CUENTA As String,  _
                    ByVal CTE_SIGLA As String,  _
                    ByVal CTE_GRUPO As String,  _
                    ByVal CTE_TIPO As String,  _
                    ByVal CTE_SECUENCIA As Global.System.Nullable(Of Integer),  _
                    ByVal CTE_COLCHON1 As Global.System.Nullable(Of Decimal),  _
                    ByVal CTE_COLCHON2 As Global.System.Nullable(Of Decimal),  _
                    ByVal CTE_PLAZA As Global.System.Nullable(Of Integer),  _
                    ByVal CTE_MADRE As Global.System.Nullable(Of Integer),  _
                    ByVal CTE_AUDITORIA As String,  _
                    ByVal CTE_SOCIEDAD As String,  _
                    ByVal CTE_CODBANCO As String,  _
                    ByVal CTE_CUENTAID As String,  _
                    ByVal CTE_GLOSA As String,  _
                    ByVal CTE_CONTABLE As String,  _
                    ByVal CTE_MONEDASAP As String,  _
                    ByVal CTE_VIA As String,  _
                    ByVal CTE_CODCTE As String,  _
                    ByVal Original_CTE_CODIGO As Integer,  _
                    ByVal Original_ENT_CODIGO As Long,  _
                    ByVal Original_CON_CODIGO As Global.System.Nullable(Of Long),  _
                    ByVal Original_MON_CODIGO As String,  _
                    ByVal Original_EMP_CODIGO As Long,  _
                    ByVal Original_CTE_NUMERO As String,  _
                    ByVal Original_CTE_CUENTA As String,  _
                    ByVal Original_CTE_SIGLA As String,  _
                    ByVal Original_CTE_GRUPO As String,  _
                    ByVal Original_CTE_TIPO As String,  _
                    ByVal Original_CTE_SECUENCIA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CTE_COLCHON1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CTE_COLCHON2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CTE_PLAZA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CTE_MADRE As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CTE_AUDITORIA As String,  _
                    ByVal Original_CTE_SOCIEDAD As String,  _
                    ByVal Original_CTE_CODBANCO As String,  _
                    ByVal Original_CTE_CUENTAID As String,  _
                    ByVal Original_CTE_GLOSA As String,  _
                    ByVal Original_CTE_CONTABLE As String,  _
                    ByVal Original_CTE_MONEDASAP As String,  _
                    ByVal Original_CTE_VIA As String,  _
                    ByVal Original_CTE_CODCTE As String) As Integer
            Return Me.Update(Original_CTE_CODIGO, ENT_CODIGO, CON_CODIGO, MON_CODIGO, EMP_CODIGO, CTE_NUMERO, CTE_CUENTA, CTE_SIGLA, CTE_GRUPO, CTE_TIPO, CTE_SECUENCIA, CTE_COLCHON1, CTE_COLCHON2, CTE_PLAZA, CTE_MADRE, CTE_AUDITORIA, CTE_SOCIEDAD, CTE_CODBANCO, CTE_CUENTAID, CTE_GLOSA, CTE_CONTABLE, CTE_MONEDASAP, CTE_VIA, CTE_CODCTE, Original_CTE_CODIGO, Original_ENT_CODIGO, Original_CON_CODIGO, Original_MON_CODIGO, Original_EMP_CODIGO, Original_CTE_NUMERO, Original_CTE_CUENTA, Original_CTE_SIGLA, Original_CTE_GRUPO, Original_CTE_TIPO, Original_CTE_SECUENCIA, Original_CTE_COLCHON1, Original_CTE_COLCHON2, Original_CTE_PLAZA, Original_CTE_MADRE, Original_CTE_AUDITORIA, Original_CTE_SOCIEDAD, Original_CTE_CODBANCO, Original_CTE_CUENTAID, Original_CTE_GLOSA, Original_CTE_CONTABLE, Original_CTE_MONEDASAP, Original_CTE_VIA, Original_CTE_CODCTE)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TraeCuadraturaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TraeCuadratura"
            tableMapping.ColumnMappings.Add("CUA_CODIGO", "CUA_CODIGO")
            tableMapping.ColumnMappings.Add("PLA_CODIGO", "PLA_CODIGO")
            tableMapping.ColumnMappings.Add("CTE_CODIGO", "CTE_CODIGO")
            tableMapping.ColumnMappings.Add("CUA_SALDOINI", "CUA_SALDOINI")
            tableMapping.ColumnMappings.Add("CUA_RESCATES", "CUA_RESCATES")
            tableMapping.ColumnMappings.Add("CUA_RESCATES2", "CUA_RESCATES2")
            tableMapping.ColumnMappings.Add("CUA_RECAUDACION", "CUA_RECAUDACION")
            tableMapping.ColumnMappings.Add("CUA_RECAUDACION2", "CUA_RECAUDACION2")
            tableMapping.ColumnMappings.Add("CUA_CHEQUESDEV", "CUA_CHEQUESDEV")
            tableMapping.ColumnMappings.Add("CUA_CHEQUESDEV2", "CUA_CHEQUESDEV2")
            tableMapping.ColumnMappings.Add("CUA_APORTES", "CUA_APORTES")
            tableMapping.ColumnMappings.Add("CUA_APORTES2", "CUA_APORTES2")
            tableMapping.ColumnMappings.Add("CUA_OTROSINGRESOS", "CUA_OTROSINGRESOS")
            tableMapping.ColumnMappings.Add("CUA_OTROSINGRESOS2", "CUA_OTROSINGRESOS2")
            tableMapping.ColumnMappings.Add("CUA_PAGOSCHE", "CUA_PAGOSCHE")
            tableMapping.ColumnMappings.Add("CUA_PAGOSCHE2", "CUA_PAGOSCHE2")
            tableMapping.ColumnMappings.Add("CUA_PAGOSCAR", "CUA_PAGOSCAR")
            tableMapping.ColumnMappings.Add("CUA_PAGOSCAR2", "CUA_PAGOSCAR2")
            tableMapping.ColumnMappings.Add("CUA_CHEQUESCAR", "CUA_CHEQUESCAR")
            tableMapping.ColumnMappings.Add("CUA_CHEQUESCAR2", "CUA_CHEQUESCAR2")
            tableMapping.ColumnMappings.Add("CUA_TRANSFERENCIASPOS", "CUA_TRANSFERENCIASPOS")
            tableMapping.ColumnMappings.Add("CUA_TRANSFERENCIASPOS2", "CUA_TRANSFERENCIASPOS2")
            tableMapping.ColumnMappings.Add("CUA_TRANSFERENCIASNEG", "CUA_TRANSFERENCIASNEG")
            tableMapping.ColumnMappings.Add("CUA_TRANSFERENCIASNEG2", "CUA_TRANSFERENCIASNEG2")
            tableMapping.ColumnMappings.Add("CUA_PORCOLOCAR", "CUA_PORCOLOCAR")
            tableMapping.ColumnMappings.Add("CUA_PORCOLOCAR2", "CUA_PORCOLOCAR2")
            tableMapping.ColumnMappings.Add("CUA_COLOCACIONES", "CUA_COLOCACIONES")
            tableMapping.ColumnMappings.Add("CUA_COLOCACIONES2", "CUA_COLOCACIONES2")
            tableMapping.ColumnMappings.Add("CUA_SALDO", "CUA_SALDO")
            tableMapping.ColumnMappings.Add("CUA_SALDO2", "CUA_SALDO2")
            tableMapping.ColumnMappings.Add("CUA_EGRESOSCHE", "CUA_EGRESOSCHE")
            tableMapping.ColumnMappings.Add("CUA_PROXIMOSALDO", "CUA_PROXIMOSALDO")
            tableMapping.ColumnMappings.Add("CTE_CUENTA", "CTE_CUENTA")
            tableMapping.ColumnMappings.Add("CTE_SECUENCIA", "CTE_SECUENCIA")
            tableMapping.ColumnMappings.Add("ENT_ABREVIATURA", "ENT_ABREVIATURA")
            tableMapping.ColumnMappings.Add("Codigo", "Codigo")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TESCUA.CUA_CODIGO, TESCUA.PLA_CODIGO, TESCUA.CTE_CODIGO, TESCUA.CUA"& _ 
                "_SALDOINI, TESCUA.CUA_RESCATES, TESCUA.CUA_RESCATES2, TESCUA.CUA_RECAUDACION, TE"& _ 
                "SCUA.CUA_RECAUDACION2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESCUA.CUA_CHEQUESDEV, TESCUA."& _ 
                "CUA_CHEQUESDEV2, TESCUA.CUA_APORTES, TESCUA.CUA_APORTES2, TESCUA.CUA_OTROSINGRES"& _ 
                "OS, TESCUA.CUA_OTROSINGRESOS2, TESCUA.CUA_PAGOSCHE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         T"& _ 
                "ESCUA.CUA_PAGOSCHE2, TESCUA.CUA_PAGOSCAR, TESCUA.CUA_PAGOSCAR2, TESCUA.CUA_CHEQU"& _ 
                "ESCAR, TESCUA.CUA_CHEQUESCAR2, TESCUA.CUA_TRANSFERENCIASPOS, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        TESCUA.CUA_TRANSFERENCIASPOS2, TESCUA.CUA_TRANSFERENCIASNEG, TESCUA.CUA_"& _ 
                "TRANSFERENCIASNEG2, TESCUA.CUA_PORCOLOCAR, TESCUA.CUA_PORCOLOCAR2, TESCUA.CUA_CO"& _ 
                "LOCACIONES, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESCUA.CUA_COLOCACIONES2, TESCUA.CUA_SALD"& _ 
                "O, TESCUA.CUA_SALDO2, TESCUA.CUA_EGRESOSCHE, TESCUA.CUA_PROXIMOSALDO, TESCTE.CTE"& _ 
                "_CUENTA, TESCTE.CTE_SECUENCIA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TESENT.ENT_ABREVIATURA"& _ 
                ", TESCTE.CTE_CODIGO AS Codigo"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            TESENT INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           TESCTE ON TESENT.ENT_CODIGO = TESCTE.ENT_CODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                TESCUA ON TESCTE.CTE_CODCTE = TESCUA.CTE_CODIGO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY TESCTE"& _ 
                ".CTE_SECUENCIA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsWALCUA.TraeCuadraturaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsWALCUA.TraeCuadraturaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsWALCUA.TraeCuadraturaDataTable = New dsWALCUA.TraeCuadraturaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OP_TraeOtrosCargosTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OP_TraeOtrosCargos"
            tableMapping.ColumnMappings.Add("DAZ_CUENTABANCO", "DAZ_CUENTABANCO")
            tableMapping.ColumnMappings.Add("totales", "totales")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.Wallet.My.MySettings.Default.WalletConnectionString1
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "dbo.OP_TraeOtrosCargos"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.StoredProcedure
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RETURN_VALUE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.ReturnValue, 10, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fecha", Global.System.Data.SqlDbType.[Char], 10, Global.System.Data.ParameterDirection.Input, 0, 0, Nothing, Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsWALCUA.OP_TraeOtrosCargosDataTable, ByVal Fecha As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Fecha Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal Fecha As String) As dsWALCUA.OP_TraeOtrosCargosDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Fecha Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha,String)
            End If
            Dim dataTable As dsWALCUA.OP_TraeOtrosCargosDataTable = New dsWALCUA.OP_TraeOtrosCargosDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class QueriesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private _commandCollection() As Global.System.Data.IDbCommand
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.IDbCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.IDbCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Wallet.My.MySettings.Default.WalletConnectionString1)
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).CommandText = "DELETE FROM TESCUA"
            CType(Me._commandCollection(0),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Wallet.My.MySettings.Default.WalletConnectionString1)
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).CommandText = "SELECT MAX(dpl_codigo) + 1 AS Codigo FROM TESDPL"
            CType(Me._commandCollection(1),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Connection = New Global.System.Data.SqlClient.SqlConnection(Global.Wallet.My.MySettings.Default.WalletConnectionString1)
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).CommandText = "UPDATE TESDOP"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SET          DAZ_CODIGO = @Daz_Codigo"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  (DOP_CODIGO = @Dop_C"& _ 
                "odigo)"
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).CommandType = Global.System.Data.CommandType.Text
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Daz_Codigo", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DAZ_CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            CType(Me._commandCollection(2),Global.System.Data.SqlClient.SqlCommand).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Dop_Codigo", Global.System.Data.SqlDbType.BigInt, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "DOP_CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, false)>  _
        Public Overloads Overridable Function BorraCuadratura() As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(0),Global.System.Data.SqlClient.SqlCommand)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function TraeCodigoDPL() As Global.System.Nullable(Of Long)
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(1),Global.System.Data.SqlClient.SqlCommand)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Object
            Try 
                returnValue = command.ExecuteScalar
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            If ((returnValue Is Nothing)  _
                        OrElse (returnValue.GetType Is GetType(Global.System.DBNull))) Then
                Return New Global.System.Nullable(Of Long)()
            Else
                Return New Global.System.Nullable(Of Long)(CType(returnValue,Long))
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, false)>  _
        Public Overloads Overridable Function ActualizaDAZCodigo(ByVal Daz_Codigo As Global.System.Nullable(Of Long), ByVal Dop_Codigo As Long) As Integer
            Dim command As Global.System.Data.SqlClient.SqlCommand = CType(Me.CommandCollection(2),Global.System.Data.SqlClient.SqlCommand)
            If (Daz_Codigo.HasValue = true) Then
                command.Parameters(0).Value = CType(Daz_Codigo.Value,Long)
            Else
                command.Parameters(0).Value = Global.System.DBNull.Value
            End If
            command.Parameters(1).Value = CType(Dop_Codigo,Long)
            Dim previousConnectionState As Global.System.Data.ConnectionState = command.Connection.State
            If ((command.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                command.Connection.Open
            End If
            Dim returnValue As Integer
            Try 
                returnValue = command.ExecuteNonQuery
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    command.Connection.Close
                End If
            End Try
            Return returnValue
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _tESCUATableAdapter As TESCUATableAdapter
        
        Private _tESDOPTableAdapter As TESDOPTableAdapter
        
        Private _tESPARTableAdapter As TESPARTableAdapter
        
        Private _tESDAZTableAdapter As TESDAZTableAdapter
        
        Private _tESCTETableAdapter As TESCTETableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TESCUATableAdapter() As TESCUATableAdapter
            Get
                Return Me._tESCUATableAdapter
            End Get
            Set
                Me._tESCUATableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TESDOPTableAdapter() As TESDOPTableAdapter
            Get
                Return Me._tESDOPTableAdapter
            End Get
            Set
                Me._tESDOPTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TESPARTableAdapter() As TESPARTableAdapter
            Get
                Return Me._tESPARTableAdapter
            End Get
            Set
                Me._tESPARTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TESDAZTableAdapter() As TESDAZTableAdapter
            Get
                Return Me._tESDAZTableAdapter
            End Get
            Set
                Me._tESDAZTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TESCTETableAdapter() As TESCTETableAdapter
            Get
                Return Me._tESCTETableAdapter
            End Get
            Set
                Me._tESCTETableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._tESCUATableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tESCUATableAdapter.Connection) Is Nothing)) Then
                    Return Me._tESCUATableAdapter.Connection
                End If
                If ((Not (Me._tESDOPTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tESDOPTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tESDOPTableAdapter.Connection
                End If
                If ((Not (Me._tESPARTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tESPARTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tESPARTableAdapter.Connection
                End If
                If ((Not (Me._tESDAZTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tESDAZTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tESDAZTableAdapter.Connection
                End If
                If ((Not (Me._tESCTETableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tESCTETableAdapter.Connection) Is Nothing)) Then
                    Return Me._tESCTETableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._tESCUATableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tESDOPTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tESPARTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tESDAZTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tESCTETableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As dsWALCUA, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tESCTETableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TESCTE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tESCTETableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tESDAZTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TESDAZ.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tESDAZTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tESPARTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TESPAR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tESPARTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tESDOPTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TESDOP.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tESDOPTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tESCUATableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TESCUA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tESCUATableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As dsWALCUA, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tESCTETableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TESCTE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tESCTETableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tESDAZTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TESDAZ.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tESDAZTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tESPARTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TESPAR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tESPARTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tESDOPTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TESDOP.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tESDOPTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tESCUATableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TESCUA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tESCUATableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As dsWALCUA, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._tESCUATableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TESCUA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tESCUATableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tESDOPTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TESDOP.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tESDOPTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tESPARTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TESPAR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tESPARTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tESDAZTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TESDAZ.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tESDAZTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tESCTETableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TESCTE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tESCTETableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As dsWALCUA) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._tESCUATableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tESCUATableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._tESDOPTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tESDOPTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._tESPARTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tESPARTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._tESDAZTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tESDAZTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            If ((Not (Me._tESCTETableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tESCTETableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("Todos los TableAdapters administrados por un TableAdapterManager deben usar la mi"& _ 
                        "sma cadena de conexión.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager no contiene información de conexión. Establezca cada propieda"& _ 
                        "d TableAdapterManager TableAdapter en una instancia TableAdapter válida.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("La transacción no puede comenzar. La conexión de datos actual no es compatible co"& _ 
                        "n las transacciones o el estado actual no permite que comience la transacción.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._tESCUATableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tESCUATableAdapter, Me._tESCUATableAdapter.Connection)
                    Me._tESCUATableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tESCUATableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tESCUATableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tESCUATableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tESCUATableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tESDOPTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tESDOPTableAdapter, Me._tESDOPTableAdapter.Connection)
                    Me._tESDOPTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tESDOPTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tESDOPTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tESDOPTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tESDOPTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tESPARTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tESPARTableAdapter, Me._tESPARTableAdapter.Connection)
                    Me._tESPARTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tESPARTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tESPARTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tESPARTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tESPARTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tESDAZTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tESDAZTableAdapter, Me._tESDAZTableAdapter.Connection)
                    Me._tESDAZTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tESDAZTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tESDAZTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tESDAZTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tESDAZTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tESCTETableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tESCTETableAdapter, Me._tESCTETableAdapter.Connection)
                    Me._tESCTETableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tESCTETableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tESCTETableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tESCTETableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tESCTETableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._tESCUATableAdapter) Is Nothing) Then
                    Me._tESCUATableAdapter.Connection = CType(revertConnections(Me._tESCUATableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tESCUATableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tESDOPTableAdapter) Is Nothing) Then
                    Me._tESDOPTableAdapter.Connection = CType(revertConnections(Me._tESDOPTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tESDOPTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tESPARTableAdapter) Is Nothing) Then
                    Me._tESPARTableAdapter.Connection = CType(revertConnections(Me._tESPARTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tESPARTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tESDAZTableAdapter) Is Nothing) Then
                    Me._tESDAZTableAdapter.Connection = CType(revertConnections(Me._tESDAZTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tESDAZTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tESCTETableAdapter) Is Nothing) Then
                    Me._tESCTETableAdapter.Connection = CType(revertConnections(Me._tESCTETableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tESCTETableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
